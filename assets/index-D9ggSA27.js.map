{"version":3,"file":"index-D9ggSA27.js","sources":["../../src/libs/Pagination/confg.ts","../../src/libs/Pagination/Pagination.tsx","../../src/libs/Pagination/View.vue"],"sourcesContent":["// 所有可用的颜色类型\nexport type ColorType = \n  | 'slate' | 'gray' | 'zinc' | 'neutral' | 'stone'  // 灰色系\n  | 'red' | 'orange' | 'amber' | 'yellow'            // 暖色系\n  | 'lime' | 'green' | 'emerald' | 'teal'            // 绿色系\n  | 'cyan' | 'sky' | 'blue' | 'indigo'               // 蓝色系\n  | 'violet' | 'purple' | 'fuchsia' | 'pink' | 'rose'; // 紫粉色系\n\n// 使用静态类名映射替代动态类名生成\nexport const COLOR_CLASSES: Record<ColorType, { \n  active: string; \n  hover: string; \n  focus: string;\n}> = {\n  // 灰色系\n  slate: {\n    active: 'border-slate-500 text-slate-600 dark:border-slate-400 dark:text-slate-300',\n    hover: 'hover:border-slate-300 hover:text-slate-700 dark:hover:border-slate-500 dark:hover:text-slate-200',\n    focus: 'focus:ring-slate-500 focus:border-slate-500 dark:focus:ring-slate-400 dark:focus:border-slate-400',\n  },\n  gray: {\n    active: 'border-gray-500 text-gray-600 dark:border-gray-400 dark:text-gray-300',\n    hover: 'hover:border-gray-300 hover:text-gray-700 dark:hover:border-gray-500 dark:hover:text-gray-200',\n    focus: 'focus:ring-gray-500 focus:border-gray-500 dark:focus:ring-gray-400 dark:focus:border-gray-400',\n  },\n  zinc: {\n    active: 'border-zinc-500 text-zinc-600 dark:border-zinc-400 dark:text-zinc-300',\n    hover: 'hover:border-zinc-300 hover:text-zinc-700 dark:hover:border-zinc-500 dark:hover:text-zinc-200',\n    focus: 'focus:ring-zinc-500 focus:border-zinc-500 dark:focus:ring-zinc-400 dark:focus:border-zinc-400',\n  },\n  neutral: {\n    active: 'border-neutral-500 text-neutral-600 dark:border-neutral-400 dark:text-neutral-300',\n    hover: 'hover:border-neutral-300 hover:text-neutral-700 dark:hover:border-neutral-500 dark:hover:text-neutral-200',\n    focus: 'focus:ring-neutral-500 focus:border-neutral-500 dark:focus:ring-neutral-400 dark:focus:border-neutral-400',\n  },\n  stone: {\n    active: 'border-stone-500 text-stone-600 dark:border-stone-400 dark:text-stone-300',\n    hover: 'hover:border-stone-300 hover:text-stone-700 dark:hover:border-stone-500 dark:hover:text-stone-200',\n    focus: 'focus:ring-stone-500 focus:border-stone-500 dark:focus:ring-stone-400 dark:focus:border-stone-400',\n  },\n  \n  // 暖色系\n  red: {\n    active: 'border-red-500 text-red-600 dark:border-red-400 dark:text-red-300',\n    hover: 'hover:border-red-300 hover:text-red-700 dark:hover:border-red-500 dark:hover:text-red-200',\n    focus: 'focus:ring-red-500 focus:border-red-500 dark:focus:ring-red-400 dark:focus:border-red-400',\n  },\n  orange: {\n    active: 'border-orange-500 text-orange-600 dark:border-orange-400 dark:text-orange-300',\n    hover: 'hover:border-orange-300 hover:text-orange-700 dark:hover:border-orange-500 dark:hover:text-orange-200',\n    focus: 'focus:ring-orange-500 focus:border-orange-500 dark:focus:ring-orange-400 dark:focus:border-orange-400',\n  },\n  amber: {\n    active: 'border-amber-500 text-amber-600 dark:border-amber-400 dark:text-amber-300',\n    hover: 'hover:border-amber-300 hover:text-amber-700 dark:hover:border-amber-500 dark:hover:text-amber-200',\n    focus: 'focus:ring-amber-500 focus:border-amber-500 dark:focus:ring-amber-400 dark:focus:border-amber-400',\n  },\n  yellow: {\n    active: 'border-yellow-500 text-yellow-600 dark:border-yellow-400 dark:text-yellow-300',\n    hover: 'hover:border-yellow-300 hover:text-yellow-700 dark:hover:border-yellow-500 dark:hover:text-yellow-200',\n    focus: 'focus:ring-yellow-500 focus:border-yellow-500 dark:focus:ring-yellow-400 dark:focus:border-yellow-400',\n  },\n  \n  // 绿色系\n  lime: {\n    active: 'border-lime-500 text-lime-600 dark:border-lime-400 dark:text-lime-300',\n    hover: 'hover:border-lime-300 hover:text-lime-700 dark:hover:border-lime-500 dark:hover:text-lime-200',\n    focus: 'focus:ring-lime-500 focus:border-lime-500 dark:focus:ring-lime-400 dark:focus:border-lime-400',\n  },\n  green: {\n    active: 'border-green-500 text-green-600 dark:border-green-400 dark:text-green-300',\n    hover: 'hover:border-green-300 hover:text-green-700 dark:hover:border-green-500 dark:hover:text-green-200',\n    focus: 'focus:ring-green-500 focus:border-green-500 dark:focus:ring-green-400 dark:focus:border-green-400',\n  },\n  emerald: {\n    active: 'border-emerald-500 text-emerald-600 dark:border-emerald-400 dark:text-emerald-300',\n    hover: 'hover:border-emerald-300 hover:text-emerald-700 dark:hover:border-emerald-500 dark:hover:text-emerald-200',\n    focus: 'focus:ring-emerald-500 focus:border-emerald-500 dark:focus:ring-emerald-400 dark:focus:border-emerald-400',\n  },\n  teal: {\n    active: 'border-teal-500 text-teal-600 dark:border-teal-400 dark:text-teal-300',\n    hover: 'hover:border-teal-300 hover:text-teal-700 dark:hover:border-teal-500 dark:hover:text-teal-200',\n    focus: 'focus:ring-teal-500 focus:border-teal-500 dark:focus:ring-teal-400 dark:focus:border-teal-400',\n  },\n  \n  // 蓝色系\n  cyan: {\n    active: 'border-cyan-500 text-cyan-600 dark:border-cyan-400 dark:text-cyan-300',\n    hover: 'hover:border-cyan-300 hover:text-cyan-700 dark:hover:border-cyan-500 dark:hover:text-cyan-200',\n    focus: 'focus:ring-cyan-500 focus:border-cyan-500 dark:focus:ring-cyan-400 dark:focus:border-cyan-400',\n  },\n  sky: {\n    active: 'border-sky-500 text-sky-600 dark:border-sky-400 dark:text-sky-300',\n    hover: 'hover:border-sky-300 hover:text-sky-700 dark:hover:border-sky-500 dark:hover:text-sky-200',\n    focus: 'focus:ring-sky-500 focus:border-sky-500 dark:focus:ring-sky-400 dark:focus:border-sky-400',\n  },\n  blue: {\n    active: 'border-blue-500 text-blue-600 dark:border-blue-400 dark:text-blue-300',\n    hover: 'hover:border-blue-300 hover:text-blue-700 dark:hover:border-blue-500 dark:hover:text-blue-200',\n    focus: 'focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-400 dark:focus:border-blue-400',\n  },\n  indigo: {\n    active: 'border-indigo-500 text-indigo-600 dark:border-indigo-400 dark:text-indigo-300',\n    hover: 'hover:border-indigo-300 hover:text-indigo-700 dark:hover:border-indigo-500 dark:hover:text-indigo-200',\n    focus: 'focus:ring-indigo-500 focus:border-indigo-500 dark:focus:ring-indigo-400 dark:focus:border-indigo-400',\n  },\n  \n  // 紫粉色系\n  violet: {\n    active: 'border-violet-500 text-violet-600 dark:border-violet-400 dark:text-violet-300',\n    hover: 'hover:border-violet-300 hover:text-violet-700 dark:hover:border-violet-500 dark:hover:text-violet-200',\n    focus: 'focus:ring-violet-500 focus:border-violet-500 dark:focus:ring-violet-400 dark:focus:border-violet-400',\n  },\n  purple: {\n    active: 'border-purple-500 text-purple-600 dark:border-purple-400 dark:text-purple-300',\n    hover: 'hover:border-purple-300 hover:text-purple-700 dark:hover:border-purple-500 dark:hover:text-purple-200',\n    focus: 'focus:ring-purple-500 focus:border-purple-500 dark:focus:ring-purple-400 dark:focus:border-purple-400',\n  },\n  fuchsia: {\n    active: 'border-fuchsia-500 text-fuchsia-600 dark:border-fuchsia-400 dark:text-fuchsia-300',\n    hover: 'hover:border-fuchsia-300 hover:text-fuchsia-700 dark:hover:border-fuchsia-500 dark:hover:text-fuchsia-200',\n    focus: 'focus:ring-fuchsia-500 focus:border-fuchsia-500 dark:focus:ring-fuchsia-400 dark:focus:border-fuchsia-400',\n  },\n  pink: {\n    active: 'border-pink-500 text-pink-600 dark:border-pink-400 dark:text-pink-300',\n    hover: 'hover:border-pink-300 hover:text-pink-700 dark:hover:border-pink-500 dark:hover:text-pink-200',\n    focus: 'focus:ring-pink-500 focus:border-pink-500 dark:focus:ring-pink-400 dark:focus:border-pink-400',\n  },\n  rose: {\n    active: 'border-rose-500 text-rose-600 dark:border-rose-400 dark:text-rose-300',\n    hover: 'hover:border-rose-300 hover:text-rose-700 dark:hover:border-rose-500 dark:hover:text-rose-200',\n    focus: 'focus:ring-rose-500 focus:border-rose-500 dark:focus:ring-rose-400 dark:focus:border-rose-400',\n  },\n};\n","import { computed, defineComponent, h, TransitionGroup, ref } from 'vue';\nimport type { PropType } from 'vue';\nimport { COLOR_CLASSES, ColorType } from './confg'\nexport interface PaginationProps {\n  total: number;\n  current: number;\n  pageSize?: number;\n  disabled?: boolean;\n  showQuickJumper?: boolean;\n  theme?: ColorType;\n  dark?: boolean;\n}\n\nconst PageButton = defineComponent({\n  name: 'PageButton',\n  props: {\n    item: {\n      type: Object as PropType<{ value: number | string; key: string }>,\n      required: true\n    },\n    current: Number,\n    disabled: Boolean,\n    themeColor: String as PropType<ColorType>,\n    onClick: Function as PropType<(value: number) => void>\n  },\n  setup(props) {\n    const colorClasses = computed(() => {\n      return COLOR_CLASSES[props.themeColor as ColorType] || COLOR_CLASSES.indigo;\n    });\n\n    return () => (\n      <button\n        class={[\n          'inline-flex items-center border-t-2 px-4 pt-4 text-sm font-medium transition-all duration-200 ease-in-out',\n          props.current === props.item.value\n            ? colorClasses.value.active\n            : `border-transparent text-gray-500 dark:text-gray-400 ${colorClasses.value.hover}`,\n          props.disabled ? 'cursor-not-allowed opacity-50' : 'cursor-pointer'\n        ]}\n        disabled={props.disabled}\n        onClick={() => typeof props.item.value === 'number' && props.onClick?.(props.item.value)}\n      >\n        {props.item.value}\n      </button>\n    );\n  }\n});\n\nexport default defineComponent({\n  name: 'Pagination',\n  props: {\n    total: {\n      type: Number as PropType<number>,\n      required: true\n    },\n    current: {\n      type: Number as PropType<number>,\n      required: true\n    },\n    pageSize: {\n      type: Number as PropType<number>,\n      default: 20\n    },\n    disabled: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    showQuickJumper: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    theme: {\n      type: String as PropType<ColorType>,\n      default: 'indigo'\n    },\n    dark: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    }\n  },\n  emits: ['update:current', 'change'],\n  setup(props, { emit }) {\n    const pageCount = computed(() => Math.ceil(props.total / props.pageSize));\n    const isFirstPage = computed(() => props.current <= 1);\n    const isLastPage = computed(() => props.current >= pageCount.value);\n\n    const displayedPages = computed(() => {\n      const count = pageCount.value;\n      const current = props.current;\n      const delta = 2;\n      const range = [];\n\n      for (let i = Math.max(2, current - delta); i <= Math.min(count - 1, current + delta); i++) {\n        range.push({ value: i, key: `page-${i}` });\n      }\n\n      if (current - delta > 2) range.unshift({ value: '...', key: 'ellipsis-start' });\n      if (current + delta < count - 1) range.push({ value: '...', key: 'ellipsis-end' });\n\n      range.unshift({ value: 1, key: 'page-1' });\n      if (count > 1) range.push({ value: count, key: `page-${count}` });\n\n      return range;\n    });\n\n    const handlePageChange = (page: number) => {\n      if (props.disabled || page === props.current) return;\n      if (page >= 1 && page <= pageCount.value) {\n        emit('update:current', page);\n        emit('change', page);\n      }\n    };\n\n    const jumpInputValue = ref<string>(props.current.toString());\n    const isJumpFocused = ref(false);\n\n    const handleQuickJump = (event: Event) => {\n      const value = Number((event.target as HTMLInputElement).value);\n      if (!isNaN(value) && value >= 1 && value <= pageCount.value) {\n        handlePageChange(value);\n      }\n      // 重置输入框值为当前页码\n      jumpInputValue.value = props.current.toString();\n    };\n\n    const handleJumpKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        const value = Number(jumpInputValue.value);\n        if (!isNaN(value) && value >= 1 && value <= pageCount.value) {\n          handlePageChange(value);\n          (event.target as HTMLInputElement).blur();\n        }\n      }\n    };\n\n    const colorClasses = computed(() => {\n      return COLOR_CLASSES[props.theme] || COLOR_CLASSES.indigo;\n    });\n\n    return () => (\n      <nav class={[\n        \"flex items-center justify-between border-t border-gray-200 dark:border-gray-700 mt-2 px-4 sm:px-0\",\n        props.dark ? 'dark' : ''\n      ]}>\n        <div class=\"-mt-px flex w-0 flex-1\">\n          <button\n            disabled={isFirstPage.value || props.disabled}\n            class={[\n              'inline-flex items-center border-t-2 border-transparent pr-1 pt-4 text-sm font-medium transition-colors duration-200 ease-in-out',\n              isFirstPage.value || props.disabled\n                ? 'text-gray-300 dark:text-gray-600 cursor-not-allowed'\n                : `text-gray-500 dark:text-gray-400 ${colorClasses.value.hover}`\n            ]}\n            onClick={() => handlePageChange(props.current - 1)}\n          >\n            <i class=\"icon-[line-md--arrow-small-left] size-6 mr-3\" />\n            Previous\n          </button>\n        </div>\n\n        <div class=\"hidden md:-mt-px md:flex items-center\">\n          {h(TransitionGroup,\n            {\n              name: 'fade',\n              tag: 'div',\n              class: 'flex'\n            },\n            () => displayedPages.value.map(item =>\n              h(PageButton, {\n                key: item.key,\n                item,\n                current: props.current,\n                disabled: props.disabled,\n                themeColor: props.theme,\n                onClick: handlePageChange\n              })\n            )\n          )}\n\n          {props.showQuickJumper && (\n            <div class=\"flex items-center border-t-2 border-transparent ml-4\">\n              <div\n                class={[\n                  \"relative flex items-center gap-1 px-3 pt-4 text-sm transition-colors duration-200\",\n                  isJumpFocused.value ? `border-t-2 -mt-0.5 ${colorClasses.value.active}` : \"-mt-px border-transparent\"\n                ]}\n              >\n                <span class=\"text-gray-600 dark:text-gray-400\">前往</span>\n                <div class=\"relative\">\n                  <input\n                    type=\"text\"\n                    inputmode=\"numeric\"\n                    pattern=\"[0-9]*\"\n                    value={jumpInputValue.value}\n                    onInput={(e) => {\n                      // 仅允许数字输入\n                      jumpInputValue.value = (e.target as HTMLInputElement).value.replace(/\\D/g, '');\n                    }}\n                    onKeydown={handleJumpKeyDown}\n                    onFocus={() => { isJumpFocused.value = true; jumpInputValue.value = ''; }}\n                    onBlur={(e) => {\n                      isJumpFocused.value = false;\n                      handleQuickJump(e);\n                    }}\n                    disabled={props.disabled}\n                    min=\"1\"\n                    max={pageCount.value}\n                    class={[\n                      'w-10 h-7 px-2 text-center rounded',\n                      'bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600',\n                      'focus:outline-none focus:ring-1',\n                      props.disabled ? 'bg-gray-100 dark:bg-gray-800/50 cursor-not-allowed opacity-60' : '',\n                      colorClasses.value.focus\n                    ]}\n                  />\n                  <div \n                    class={[\n                      \"absolute -top-5 left-1/2 transform -translate-x-1/2 text-xs rounded px-1.5 py-0.5 whitespace-nowrap\",\n                      \"transition-opacity duration-200 ease-in-out\",\n                      isJumpFocused.value ? \"opacity-100\" : \"opacity-0 pointer-events-none\",\n                      `bg-${props.theme}-50 text-${props.theme}-800 dark:bg-${props.theme}-900/30 dark:text-${props.theme}-300`\n                    ]}\n                  >\n                    共 {pageCount.value} 页\n                  </div>\n                </div>\n                <span class=\"text-gray-600 dark:text-gray-400\">页</span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div class=\"-mt-px flex w-0 flex-1 justify-end\">\n          <button\n            disabled={isLastPage.value || props.disabled}\n            class={[\n              'inline-flex items-center border-t-2 border-transparent pl-1 pt-4 text-sm font-medium transition-colors duration-200 ease-in-out',\n              isLastPage.value || props.disabled\n                ? 'text-gray-300 dark:text-gray-600 cursor-not-allowed'\n                : `text-gray-500 dark:text-gray-400 ${colorClasses.value.hover}`\n            ]}\n            onClick={() => handlePageChange(props.current + 1)}\n          >\n            Next\n            <i class=\"icon-[line-md--arrow-small-right] size-6 ml-3\" />\n          </button>\n        </div>\n\n        <style scoped>{`\n          .fade-enter-active,\n          .fade-leave-active {\n            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n          }\n\n          .fade-enter-from,\n          .fade-leave-to {\n            opacity: 0;\n            transform: translateY(10px);\n          }\n\n          .fade-move {\n            transition: transform 0.3s ease;\n          }\n          \n          /* 为数字输入框添加更好的样式 */\n          input::-webkit-outer-spin-button,\n          input::-webkit-inner-spin-button {\n            -webkit-appearance: none;\n            margin: 0;\n          }\n          \n          input[type=number] {\n            -moz-appearance: textfield;\n          }\n        `}</style>\n      </nav>\n    );\n  }\n});\n","<template>\n  <div class=\"p-6 min-h-screen transition-all duration-300\">\n    <!-- 顶部标题 -->\n    <div class=\"mb-8\">\n      <h1 class=\"text-2xl font-bold text-gray-900 dark:text-white\">Pagination 分页组件</h1>\n    </div>\n\n    <!-- 基础用法 -->\n    <section class=\"space-y-4 mb-10\">\n      <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white\">基础用法</h2>\n      <div class=\"p-6 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm\">\n        <p class=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n          最基本的分页组件使用方式：\n        </p>\n        <Pagination v-model:current=\"basicPagination.current.value\" :total=\"basicPagination.total\"\n          :page-size=\"basicPagination.pageSize\" />\n        <div class=\"mt-4 py-2 px-3 bg-gray-50 dark:bg-gray-700/50 rounded text-sm\">\n          <p class=\"text-gray-700 dark:text-gray-300\">当前页: {{ basicPagination.current.value }}</p>\n          <p class=\"text-gray-700 dark:text-gray-300\">总条目: {{ basicPagination.total }}</p>\n          <p class=\"text-gray-700 dark:text-gray-300\">每页条数: {{ basicPagination.pageSize }}</p>\n        </div>\n        <div class=\"mt-4 py-2 px-3 bg-gray-50 dark:bg-gray-700/50 rounded text-sm\">\n          <pre class=\"text-gray-700 dark:text-gray-300\">{{ basicPaginationCode }}</pre>\n        </div>\n      </div>\n    </section>\n\n    <!-- 主题色展示 -->\n    <section class=\"space-y-4 mb-10\">\n      <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white\">颜色主题</h2>\n      <div class=\"p-6 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm\">\n        <p class=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n          支持所有 Tailwind CSS 颜色主题：\n        </p>\n\n        <div class=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-2 mb-6\">\n          <button v-for=\"theme in availableThemes\" :key=\"theme\" @click=\"selectedTheme = theme\"\n            :style=\"getThemeButtonStyles(theme)\"\n            class=\"px-3 py-1.5 rounded-md text-sm font-medium transition-all duration-200 hover:shadow-sm border\">\n            {{ theme }}\n          </button>\n        </div>\n\n        <Pagination v-model:current=\"themePagination.current.value\" :total=\"themePagination.total\"\n          :theme=\"selectedTheme\" />\n      </div>\n    </section>\n\n    <!-- 快速跳转 -->\n    <section class=\"space-y-4 mb-10\">\n      <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white\">快速跳转</h2>\n      <div class=\"p-6 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm\">\n        <p class=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n          启用快速跳转功能，支持直接输入页码：\n        </p>\n        <Pagination v-model:current=\"quickJumpPagination.current.value\" :total=\"quickJumpPagination.total\"\n          :show-quick-jumper=\"true\" theme=\"blue\" />\n      </div>\n    </section>\n\n    <!-- 自定义每页条数 -->\n    <section class=\"space-y-4 mb-10\">\n      <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white\">自定义每页条数</h2>\n      <div class=\"p-6 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm\">\n        <div class=\"flex flex-wrap items-center gap-4 mb-6\">\n          <div class=\"flex items-center gap-2\">\n            <span class=\"text-sm font-medium text-gray-700 dark:text-gray-300\">每页条数:</span>\n            <select v-model=\"customSizePagination.pageSize.value\"\n              class=\"px-3 py-1.5 rounded-md text-sm bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-800 dark:text-gray-200\">\n              <option v-for=\"size in [10, 20, 50, 100]\" :key=\"size\" :value=\"size\">\n                {{ size }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"flex items-center gap-2\">\n            <span class=\"text-sm font-medium text-gray-700 dark:text-gray-300\">总条目:</span>\n            <input type=\"number\" v-model.number=\"customSizePagination.total.value\" min=\"0\"\n              class=\"w-24 px-3 py-1.5 rounded-md text-sm bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-800 dark:text-gray-200\" />\n          </div>\n        </div>\n\n        <Pagination v-model:current=\"customSizePagination.current.value\" :total=\"customSizePagination.total.value\"\n          :page-size=\"customSizePagination.pageSize.value\" :show-quick-jumper=\"true\" theme=\"emerald\" />\n      </div>\n    </section>\n\n    <!-- 加载状态 -->\n    <section class=\"space-y-4 mb-10\">\n      <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white\">加载状态</h2>\n      <div class=\"p-6 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm\">\n        <p class=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n          分页切换时的加载状态演示：\n        </p>\n        <div :class=\"{ 'opacity-60 pointer-events-none': loadingPagination.loading.value }\"\n          class=\"transition-opacity duration-300\">\n          <Pagination v-model:current=\"loadingPagination.current.value\" :total=\"loadingPagination.total\"\n            :disabled=\"loadingPagination.loading.value\" theme=\"purple\" @change=\"handleLoadingPageChange\" />\n          <div v-if=\"loadingPagination.loading.value\"\n            class=\"mt-3 flex items-center justify-center gap-2 text-sm text-purple-600 dark:text-purple-400\">\n            <svg class=\"animate-spin h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\"\n                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\">\n              </path>\n            </svg>\n            <span>加载中...</span>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- 表格集成 -->\n    <section class=\"space-y-4 mb-10\">\n      <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white\">表格集成示例</h2>\n      <div class=\"p-6 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm\">\n        <div :class=\"{ 'opacity-60': tablePagination.loading.value }\" class=\"transition-opacity duration-300\">\n          <!-- 简单表格 -->\n          <div class=\"overflow-hidden rounded-lg border border-gray-200 dark:border-gray-700\">\n            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead class=\"bg-gray-50 dark:bg-gray-800/50\">\n                <tr>\n                  <th\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    ID</th>\n                  <th\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    姓名</th>\n                  <th\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    邮箱</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                <tr v-for=\"item in tableData\" :key=\"item.id\"\n                  class=\"hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors\">\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">{{ item.id }}</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">{{ item.name }}</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{{ item.email }}</td>\n                </tr>\n                <tr v-if=\"tablePagination.loading.value\" v-for=\"i in 3\" :key=\"`skeleton-${i}`\">\n                  <td colspan=\"3\" class=\"px-6 py-4 whitespace-nowrap\">\n                    <div class=\"h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"></div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- 分页控制器 -->\n          <div class=\"mt-4 flex items-center justify-between\">\n            <span class=\"text-sm text-gray-700 dark:text-gray-300\">\n              显示 {{ ((tablePagination.current.value - 1) * tablePagination.pageSize.value) + 1 }}-{{\n                Math.min(tablePagination.current.value * tablePagination.pageSize.value, tablePagination.total.value) }}\n              条，共 {{ tablePagination.total.value }} 条记录\n            </span>\n\n            <Pagination v-model:current=\"tablePagination.current.value\" :total=\"tablePagination.total.value\"\n              :page-size=\"tablePagination.pageSize.value\" :disabled=\"tablePagination.loading.value\" theme=\"indigo\"\n              @change=\"handleTablePageChange\" />\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- 小结与最佳实践 -->\n    <section class=\"space-y-4 mb-10\">\n      <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white\">小结与最佳实践</h2>\n      <div class=\"p-6 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm\">\n        <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">设计原则</h3>\n        <ul class=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-400\">\n          <li>分页组件应保持简洁，占据适当空间，不应喧宾夺主</li>\n          <li>当数据量较大时，提供快速跳转功能，帮助用户快速定位</li>\n          <li>明确显示当前页码，以及总页数和总条目数</li>\n          <li>使用与应用整体设计风格一致的主题颜色</li>\n        </ul>\n\n        <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mt-6 mb-2\">使用场景</h3>\n        <ul class=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-400\">\n          <li>表格数据分页展示</li>\n          <li>搜索结果分页浏览</li>\n          <li>内容列表延迟加载</li>\n          <li>需要分批展示大量数据的任何场景</li>\n        </ul>\n\n        <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mt-6 mb-2\">注意事项</h3>\n        <ul class=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-400\">\n          <li>确保 <code class=\"text-sm bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded\">total</code> 和 <code\n              class=\"text-sm bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded\">current</code> 属性保持同步</li>\n          <li>根据内容性质合理设置 <code class=\"text-sm bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded\">pageSize</code>，避免频繁切换页面\n          </li>\n          <li>在加载数据时，可以临时设置 <code class=\"text-sm bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded\">disabled</code> 为\n            <code class=\"text-sm bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded\">true</code> 以防止用户操作\n          </li>\n          <li>大数据量时建议使用 <code class=\"text-sm bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded\">showQuickJumper</code>\n            提供快速跳转功能</li>\n          <li>确保在移动设备上分页组件仍有足够的点击区域</li>\n        </ul>\n\n        <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mt-6 mb-2\">可访问性建议</h3>\n        <ul class=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-400\">\n          <li>使用足够的对比度确保分页按钮在各种视觉条件下可见</li>\n          <li>确保键盘用户可以通过 Tab 键导航所有分页按钮</li>\n          <li>在屏幕阅读器中提供明确的当前页面状态信息</li>\n        </ul>\n      </div>\n    </section>\n\n    <!-- API文档 -->\n    <section class=\"space-y-4 mb-10\">\n      <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white\">API 文档</h2>\n      <div\n        class=\"p-6 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-sm space-y-6\">\n        <!-- Props 部分 -->\n        <div>\n          <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Props</h3>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead>\n                <tr>\n                  <th scope=\"col\"\n                    class=\"px-4 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    属性名</th>\n                  <th scope=\"col\"\n                    class=\"px-4 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    类型</th>\n                  <th scope=\"col\"\n                    class=\"px-4 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    默认值</th>\n                  <th scope=\"col\"\n                    class=\"px-4 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    说明</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                <tr>\n                  <td class=\"px-4 py-2 text-sm text-gray-900 dark:text-white font-medium\">current</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">number</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">-</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">当前页码，支持 v-model:current 双向绑定</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 text-sm text-gray-900 dark:text-white font-medium\">total</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">number</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">-</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">总条目数（必填）</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 text-sm text-gray-900 dark:text-white font-medium\">pageSize</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">number</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">20</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">每页条目数</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 text-sm text-gray-900 dark:text-white font-medium\">disabled</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">boolean</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">false</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">是否禁用分页组件</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 text-sm text-gray-900 dark:text-white font-medium\">showQuickJumper</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">boolean</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">false</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">是否显示快速跳转输入框</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 text-sm text-gray-900 dark:text-white font-medium\">theme</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">ColorType</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">'indigo'</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">主题颜色，支持所有 Tailwind 颜色</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 text-sm text-gray-900 dark:text-white font-medium\">dark</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">boolean</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">false</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">是否强制使用暗色模式</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <!-- 事件部分 -->\n        <div>\n          <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">事件</h3>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead>\n                <tr>\n                  <th scope=\"col\"\n                    class=\"px-4 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    事件名</th>\n                  <th scope=\"col\"\n                    class=\"px-4 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    参数</th>\n                  <th scope=\"col\"\n                    class=\"px-4 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    说明</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                <tr>\n                  <td class=\"px-4 py-2 text-sm text-gray-900 dark:text-white font-medium\">update:current</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">(page: number)</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">当前页码变化时触发，支持 v-model:current 双向绑定</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 text-sm text-gray-900 dark:text-white font-medium\">change</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">(page: number)</td>\n                  <td class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400\">页码变化时触发</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <!-- 颜色主题部分 -->\n        <div>\n          <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">支持的颜色主题</h3>\n          <div class=\"text-sm text-gray-600 dark:text-gray-400 space-y-2\">\n            <p>组件支持所有 Tailwind CSS 颜色，具体包括：</p>\n            <ul class=\"pl-5 list-disc space-y-1\">\n              <li><span class=\"font-medium\">灰色系：</span>slate, gray, zinc, neutral, stone</li>\n              <li><span class=\"font-medium\">暖色系：</span>red, orange, amber, yellow</li>\n              <li><span class=\"font-medium\">绿色系：</span>lime, green, emerald, teal</li>\n              <li><span class=\"font-medium\">蓝色系：</span>cyan, sky, blue, indigo</li>\n              <li><span class=\"font-medium\">紫粉系：</span>violet, purple, fuchsia, pink, rose</li>\n            </ul>\n          </div>\n        </div>\n\n        <!-- 类型定义部分 -->\n        <div>\n          <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">TypeScript 类型定义</h3>\n          <div class=\"bg-gray-50 dark:bg-gray-800/50 overflow-x-auto rounded-md p-4\">\n            <pre class=\"text-xs text-gray-800 dark:text-gray-300\"><code>// ColorType 类型定义\ntype ColorType = \n  | 'slate' | 'gray' | 'zinc' | 'neutral' | 'stone'  // 灰色系\n  | 'red' | 'orange' | 'amber' | 'yellow'            // 暖色系\n  | 'lime' | 'green' | 'emerald' | 'teal'            // 绿色系\n  | 'cyan' | 'sky' | 'blue' | 'indigo'               // 蓝色系\n  | 'violet' | 'purple' | 'fuchsia' | 'pink' | 'rose'; // 紫粉系\n\n// 组件 Props 类型定义\ninterface PaginationProps {\n  total: number;            // 总条目数\n  current: number;          // 当前页码\n  pageSize?: number;        // 每页条目数\n  disabled?: boolean;       // 是否禁用\n  showQuickJumper?: boolean; // 是否显示快速跳转\n  theme?: ColorType;        // 颜色主题\n  dark?: boolean;           // 是否强制使用暗色模式\n}</code></pre>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue'\nimport Pagination from './Pagination'\nimport { type ColorType } from './confg'\n\n// 基础用法示例数据\nconst basicPagination = {\n  current: ref(1),\n  total: 100,\n  pageSize: 10\n};\n\n// 快速跳转示例数据\nconst quickJumpPagination = {\n  current: ref(15),\n  total: 500,\n  pageSize: 20\n};\n\n// 动态页面大小示例数据\nconst customSizePagination = {\n  current: ref(1),\n  pageSize: ref(10),\n  total: ref(200)\n};\n\n// 不同主题示例数据\nconst themePagination = {\n  current: ref(3),\n  total: 100,\n  theme: ref<ColorType>('indigo')\n};\n\n// 加载状态示例数据\nconst loadingPagination = {\n  current: ref(1),\n  total: 100,\n  loading: ref(false)\n};\n\n// 表格集成示例数据\nconst tableData = ref<Array<{ id: number; name: string; email: string }>>([]);\nconst tablePagination = {\n  current: ref(1),\n  pageSize: ref(10),\n  total: ref(235),\n  loading: ref(false)\n};\n\n// 可用的颜色主题\nconst availableThemes: ColorType[] = [\n  'slate', 'gray', 'zinc', 'neutral', 'stone',  // 灰色系\n  'red', 'orange', 'amber', 'yellow',           // 暖色系\n  'lime', 'green', 'emerald', 'teal',           // 绿色系\n  'cyan', 'sky', 'blue', 'indigo',              // 蓝色系\n  'violet', 'purple', 'fuchsia', 'pink', 'rose' // 紫粉色系\n];\n\n// 选择主题\nconst selectedTheme = ref<ColorType>('indigo');\n\n// 生成模拟表格数据\nconst generateTableData = (page: number, pageSize: number) => {\n  tablePagination.loading.value = true;\n  setTimeout(() => {\n    const startIndex = (page - 1) * pageSize;\n    tableData.value = Array(pageSize).fill(0).map((_, i) => ({\n      id: startIndex + i + 1,\n      name: `User ${startIndex + i + 1}`,\n      email: `user${startIndex + i + 1}@example.com`\n    }));\n    tablePagination.loading.value = false;\n  }, 500);\n};\n\n// 页码变化处理函数\nconst handleTablePageChange = (page: number) => {\n  tablePagination.current.value = page;\n  generateTableData(page, tablePagination.pageSize.value);\n};\n\n// 模拟加载效果\nconst handleLoadingPageChange = (page: number) => {\n  loadingPagination.loading.value = true;\n  loadingPagination.current.value = page;\n  setTimeout(() => {\n    loadingPagination.loading.value = false;\n  }, 800);\n};\n\n// 初始化\nonMounted(() => {\n  generateTableData(tablePagination.current.value, tablePagination.pageSize.value);\n});\n\nconst basicPaginationCode = `<Pagination\n  v-model:current=\"currentPage\"\n  :total=\"100\"\n  :page-size=\"10\"\n  @change=\"handlePageChange\"\n/>`\n\n// 主题颜色映射\nconst themeColorMap = {\n  // 灰色系\n  slate: { bg: '#f8fafc', text: '#475569', darkBg: '#1e293b', darkText: '#94a3b8', border: '#e2e8f0', darkBorder: '#334155', activeBg: '#f1f5f9', darkActiveBg: '#0f172a', activeText: '#334155', darkActiveText: '#cbd5e1' },\n  gray: { bg: '#f9fafb', text: '#4b5563', darkBg: '#1f2937', darkText: '#9ca3af', border: '#e5e7eb', darkBorder: '#374151', activeBg: '#f3f4f6', darkActiveBg: '#111827', activeText: '#374151', darkActiveText: '#d1d5db' },\n  zinc: { bg: '#fafafa', text: '#52525b', darkBg: '#27272a', darkText: '#a1a1aa', border: '#e4e4e7', darkBorder: '#3f3f46', activeBg: '#f4f4f5', darkActiveBg: '#18181b', activeText: '#3f3f46', darkActiveText: '#d4d4d8' },\n  neutral: { bg: '#fafafa', text: '#525252', darkBg: '#262626', darkText: '#a3a3a3', border: '#e5e5e5', darkBorder: '#404040', activeBg: '#f5f5f5', darkActiveBg: '#171717', activeText: '#404040', darkActiveText: '#d4d4d4' },\n  stone: { bg: '#fafaf9', text: '#57534e', darkBg: '#292524', darkText: '#a8a29e', border: '#e7e5e4', darkBorder: '#44403c', activeBg: '#f5f5f4', darkActiveBg: '#1c1917', activeText: '#44403c', darkActiveText: '#d6d3d1' },\n\n  // 暖色系\n  red: { bg: '#fef2f2', text: '#dc2626', darkBg: '#7f1d1d', darkText: '#ef4444', border: '#fee2e2', darkBorder: '#991b1b', activeBg: '#fee2e2', darkActiveBg: '#450a0a', activeText: '#b91c1c', darkActiveText: '#fca5a5' },\n  orange: { bg: '#fff7ed', text: '#ea580c', darkBg: '#7c2d12', darkText: '#f97316', border: '#ffedd5', darkBorder: '#9a3412', activeBg: '#ffedd5', darkActiveBg: '#431407', activeText: '#c2410c', darkActiveText: '#fdba74' },\n  amber: { bg: '#fffbeb', text: '#d97706', darkBg: '#78350f', darkText: '#f59e0b', border: '#fef3c7', darkBorder: '#92400e', activeBg: '#fef3c7', darkActiveBg: '#451a03', activeText: '#b45309', darkActiveText: '#fcd34d' },\n  yellow: { bg: '#fefce8', text: '#ca8a04', darkBg: '#713f12', darkText: '#eab308', border: '#fef9c3', darkBorder: '#854d0e', activeBg: '#fef9c3', darkActiveBg: '#422006', activeText: '#a16207', darkActiveText: '#fde047' },\n\n  // 绿色系\n  lime: { bg: '#f7fee7', text: '#65a30d', darkBg: '#365314', darkText: '#84cc16', border: '#ecfccb', darkBorder: '#4d7c0f', activeBg: '#ecfccb', darkActiveBg: '#1a2e05', activeText: '#4d7c0f', darkActiveText: '#bef264' },\n  green: { bg: '#f0fdf4', text: '#16a34a', darkBg: '#14532d', darkText: '#22c55e', border: '#dcfce7', darkBorder: '#15803d', activeBg: '#dcfce7', darkActiveBg: '#052e16', activeText: '#15803d', darkActiveText: '#86efac' },\n  emerald: { bg: '#ecfdf5', text: '#059669', darkBg: '#064e3b', darkText: '#10b981', border: '#d1fae5', darkBorder: '#047857', activeBg: '#d1fae5', darkActiveBg: '#022c22', activeText: '#047857', darkActiveText: '#6ee7b7' },\n  teal: { bg: '#f0fdfa', text: '#0d9488', darkBg: '#134e4a', darkText: '#14b8a6', border: '#ccfbf1', darkBorder: '#0f766e', activeBg: '#ccfbf1', darkActiveBg: '#042f2e', activeText: '#0f766e', darkActiveText: '#5eead4' },\n\n  // 蓝色系\n  cyan: { bg: '#ecfeff', text: '#0891b2', darkBg: '#164e63', darkText: '#06b6d4', border: '#cffafe', darkBorder: '#0e7490', activeBg: '#cffafe', darkActiveBg: '#083344', activeText: '#0e7490', darkActiveText: '#67e8f9' },\n  sky: { bg: '#f0f9ff', text: '#0284c7', darkBg: '#0c4a6e', darkText: '#0ea5e9', border: '#e0f2fe', darkBorder: '#0369a1', activeBg: '#e0f2fe', darkActiveBg: '#082f49', activeText: '#0369a1', darkActiveText: '#7dd3fc' },\n  blue: { bg: '#eff6ff', text: '#2563eb', darkBg: '#1e3a8a', darkText: '#3b82f6', border: '#dbeafe', darkBorder: '#1d4ed8', activeBg: '#dbeafe', darkActiveBg: '#172554', activeText: '#1d4ed8', darkActiveText: '#93c5fd' },\n  indigo: { bg: '#eef2ff', text: '#4f46e5', darkBg: '#312e81', darkText: '#6366f1', border: '#e0e7ff', darkBorder: '#4338ca', activeBg: '#e0e7ff', darkActiveBg: '#1e1b4b', activeText: '#4338ca', darkActiveText: '#a5b4fc' },\n\n  // 紫粉系\n  violet: { bg: '#f5f3ff', text: '#7c3aed', darkBg: '#4c1d95', darkText: '#8b5cf6', border: '#ede9fe', darkBorder: '#6d28d9', activeBg: '#ede9fe', darkActiveBg: '#2e1065', activeText: '#6d28d9', darkActiveText: '#c4b5fd' },\n  purple: { bg: '#faf5ff', text: '#9333ea', darkBg: '#581c87', darkText: '#a855f7', border: '#f3e8ff', darkBorder: '#7e22ce', activeBg: '#f3e8ff', darkActiveBg: '#3b0764', activeText: '#7e22ce', darkActiveText: '#d8b4fe' },\n  fuchsia: { bg: '#fdf4ff', text: '#c026d3', darkBg: '#701a75', darkText: '#d946ef', border: '#fae8ff', darkBorder: '#a21caf', activeBg: '#fae8ff', darkActiveBg: '#4a044e', activeText: '#a21caf', darkActiveText: '#e879f9' },\n  pink: { bg: '#fdf2f8', text: '#db2777', darkBg: '#831843', darkText: '#ec4899', border: '#fce7f3', darkBorder: '#be185d', activeBg: '#fce7f3', darkActiveBg: '#500724', activeText: '#be185d', darkActiveText: '#f9a8d4' },\n  rose: { bg: '#fff1f2', text: '#e11d48', darkBg: '#881337', darkText: '#f43f5e', border: '#ffe4e6', darkBorder: '#be123c', activeBg: '#ffe4e6', darkActiveBg: '#4c0519', activeText: '#be123c', darkActiveText: '#fda4af' }\n};\n\n// 获取主题按钮样式\nconst getThemeButtonStyles = (theme: ColorType) => {\n  const colors = themeColorMap[theme];\n  const isSelected = selectedTheme.value === theme;\n\n  return {\n    backgroundColor: isSelected ? colors.activeBg : colors.bg,\n    color: isSelected ? colors.activeText : colors.text,\n    borderColor: isSelected ? colors.activeText : colors.border,\n    '.dark &': {\n      backgroundColor: isSelected ? colors.darkActiveBg : colors.darkBg,\n      color: isSelected ? colors.darkActiveText : colors.darkText,\n      borderColor: isSelected ? colors.darkActiveText : colors.darkBorder,\n    }\n  };\n};\n</script>\n\n<style scoped>\n/* 优化过渡效果 */\nbutton {\n  position: relative;\n  transition: all 0.2s ease-in-out;\n}\n\nbutton:hover {\n  transform: translateY(-1px);\n}\n\nbutton:active {\n  transform: translateY(0);\n}\n\n/* 暗色模式转换过渡 */\n:root {\n  --transition-duration: 300ms;\n}\n\n.dark button,\n.dark div,\n.dark h1,\n.dark h2,\n.dark h3,\n.dark p,\n.dark span {\n  transition: background-color var(--transition-duration) ease-in-out,\n    color var(--transition-duration) ease-in-out,\n    border-color var(--transition-duration) ease-in-out;\n}\n\n/* 保留原有的pulse动画 */\n@keyframes pulse {\n\n  0%,\n  100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.5;\n  }\n}\n</style>"],"names":["COLOR_CLASSES","PageButton","defineComponent","name","props","item","type","Object","required","current","Number","disabled","Boolean","themeColor","String","onClick","Function","setup","colorClasses","computed","indigo","_createVNode","value","active","hover","total","pageSize","default","showQuickJumper","theme","dark","emits","emit","pageCount","Math","ceil","isFirstPage","isLastPage","displayedPages","count","delta","range","i","max","min","push","key","unshift","handlePageChange","page","jumpInputValue","ref","toString","isJumpFocused","handleQuickJump","event","target","isNaN","handleJumpKeyDown","blur","_createTextVNode","h","TransitionGroup","tag","class","map","e","replace","onFocus","focus","basicPaginationCode","basicPagination","quickJumpPagination","customSizePagination","themePagination","loadingPagination","tableData","tablePagination","availableThemes","selectedTheme","generateTableData","startIndex","_","handleTablePageChange","handleLoadingPageChange","onMounted","themeColorMap","getThemeButtonStyles","colors","isSelected"],"mappings":"kMASO,MAAMA,EAIR,CAEH,MAAO,CACL,OAAQ,4EACR,MAAO,oGACP,MAAO,mGACT,EACA,KAAM,CACJ,OAAQ,wEACR,MAAO,gGACP,MAAO,+FACT,EACA,KAAM,CACJ,OAAQ,wEACR,MAAO,gGACP,MAAO,+FACT,EACA,QAAS,CACP,OAAQ,oFACR,MAAO,4GACP,MAAO,2GACT,EACA,MAAO,CACL,OAAQ,4EACR,MAAO,oGACP,MAAO,mGACT,EAGA,IAAK,CACH,OAAQ,oEACR,MAAO,4FACP,MAAO,2FACT,EACA,OAAQ,CACN,OAAQ,gFACR,MAAO,wGACP,MAAO,uGACT,EACA,MAAO,CACL,OAAQ,4EACR,MAAO,oGACP,MAAO,mGACT,EACA,OAAQ,CACN,OAAQ,gFACR,MAAO,wGACP,MAAO,uGACT,EAGA,KAAM,CACJ,OAAQ,wEACR,MAAO,gGACP,MAAO,+FACT,EACA,MAAO,CACL,OAAQ,4EACR,MAAO,oGACP,MAAO,mGACT,EACA,QAAS,CACP,OAAQ,oFACR,MAAO,4GACP,MAAO,2GACT,EACA,KAAM,CACJ,OAAQ,wEACR,MAAO,gGACP,MAAO,+FACT,EAGA,KAAM,CACJ,OAAQ,wEACR,MAAO,gGACP,MAAO,+FACT,EACA,IAAK,CACH,OAAQ,oEACR,MAAO,4FACP,MAAO,2FACT,EACA,KAAM,CACJ,OAAQ,wEACR,MAAO,gGACP,MAAO,+FACT,EACA,OAAQ,CACN,OAAQ,gFACR,MAAO,wGACP,MAAO,uGACT,EAGA,OAAQ,CACN,OAAQ,gFACR,MAAO,wGACP,MAAO,uGACT,EACA,OAAQ,CACN,OAAQ,gFACR,MAAO,wGACP,MAAO,uGACT,EACA,QAAS,CACP,OAAQ,oFACR,MAAO,4GACP,MAAO,2GACT,EACA,KAAM,CACJ,OAAQ,wEACR,MAAO,gGACP,MAAO,+FACT,EACA,KAAM,CACJ,OAAQ,wEACR,MAAO,gGACP,MAAO,+FAAA,CAEX,ECxHMC,EAAaC,EAAgB,CACjCC,KAAM,aACNC,MAAO,CACLC,KAAM,CACJC,KAAMC,OACNC,SAAU,EACX,EACDC,QAASC,OACTC,SAAUC,QACVC,WAAYC,OACZC,QAASC,QACV,EACDC,MAAMb,EAAO,CACX,MAAMc,EAAeC,EAAS,IACrBnB,EAAcI,EAAMS,UAAU,GAAkBb,EAAcoB,MACtE,EAED,MAAO,IAAAC,EAAA,SAAA,CAAA,MAEI,CACL,4GACAjB,EAAMK,UAAYL,EAAMC,KAAKiB,MACzBJ,EAAaI,MAAMC,OACnB,uDAAuDL,EAAaI,MAAME,KAAK,GACnFpB,EAAMO,SAAW,gCAAkC,gBAAgB,EACpE,SACSP,EAAMO,SAAQ,QACfI,IAAM,OAAA,cAAOX,EAAMC,KAAKiB,OAAU,YAAYlB,EAAAA,EAAMW,UAANX,YAAAA,EAAAA,KAAAA,EAAgBA,EAAMC,KAAKiB,QAAM,EAAA,CAEvFlB,EAAMC,KAAKiB,KAAK,EAEpB,GAAA,CAAA,WAAA,SAAA,CAAA,CACH,CACF,CAAC,EAEcpB,IAAgB,CAC7BC,KAAM,aACNC,MAAO,CACLqB,MAAO,CACLnB,KAAMI,OACNF,SAAU,EACX,EACDC,QAAS,CACPH,KAAMI,OACNF,SAAU,EACX,EACDkB,SAAU,CACRpB,KAAMI,OACNiB,QAAS,EACV,EACDhB,SAAU,CACRL,KAAMM,QACNe,QAAS,EACV,EACDC,gBAAiB,CACftB,KAAMM,QACNe,QAAS,EACV,EACDE,MAAO,CACLvB,KAAMQ,OACNa,QAAS,QACV,EACDG,KAAM,CACJxB,KAAMM,QACNe,QAAS,EACX,CACD,EACDI,MAAO,CAAC,iBAAkB,QAAQ,EAClCd,MAAMb,EAAO,CAAE4B,KAAAA,CAAK,EAAG,CACrB,MAAMC,EAAYd,EAAS,IAAMe,KAAKC,KAAK/B,EAAMqB,MAAQrB,EAAMsB,QAAQ,CAAC,EAClEU,EAAcjB,EAAS,IAAMf,EAAMK,SAAW,CAAC,EAC/C4B,EAAalB,EAAS,IAAMf,EAAMK,SAAWwB,EAAUX,KAAK,EAE5DgB,EAAiBnB,EAAS,IAAM,CACpC,MAAMoB,EAAQN,EAAUX,MAClBb,EAAUL,EAAMK,QAChB+B,EAAQ,EACRC,EAAQ,CAAE,EAEhB,QAASC,EAAIR,KAAKS,IAAI,EAAGlC,EAAU+B,CAAK,EAAGE,GAAKR,KAAKU,IAAIL,EAAQ,EAAG9B,EAAU+B,CAAK,EAAGE,IACpFD,EAAMI,KAAK,CAAEvB,MAAOoB,EAAGI,IAAK,QAAQJ,CAAC,EAAG,CAAC,EAG3C,OAAIjC,EAAU+B,EAAQ,GAAGC,EAAMM,QAAQ,CAAEzB,MAAO,MAAOwB,IAAK,gBAAiB,CAAC,EAC1ErC,EAAU+B,EAAQD,EAAQ,GAAGE,EAAMI,KAAK,CAAEvB,MAAO,MAAOwB,IAAK,cAAe,CAAC,EAEjFL,EAAMM,QAAQ,CAAEzB,MAAO,EAAGwB,IAAK,QAAS,CAAC,EACrCP,EAAQ,GAAGE,EAAMI,KAAK,CAAEvB,MAAOiB,EAAOO,IAAK,QAAQP,CAAK,EAAG,CAAC,EAEzDE,CACT,CAAC,EAEKO,EAAoBC,GAAiB,CACrC7C,EAAMO,UAAYsC,IAAS7C,EAAMK,SACjCwC,GAAQ,GAAKA,GAAQhB,EAAUX,QACjCU,EAAK,iBAAkBiB,CAAI,EAC3BjB,EAAK,SAAUiB,CAAI,EAEtB,EAEKC,EAAiBC,EAAY/C,EAAMK,QAAQ2C,SAAQ,CAAE,EACrDC,EAAgBF,EAAI,EAAK,EAEzBG,EAAmBC,GAAiB,CACxC,MAAMjC,EAAQZ,OAAQ6C,EAAMC,OAA4BlC,KAAK,EACzD,CAACmC,MAAMnC,CAAK,GAAKA,GAAS,GAAKA,GAASW,EAAUX,OACpD0B,EAAiB1B,CAAK,EAGxB4B,EAAe5B,MAAQlB,EAAMK,QAAQ2C,SAAU,CAChD,EAEKM,EAAqBH,GAAyB,CAClD,GAAIA,EAAMT,MAAQ,QAAS,CACzB,MAAMxB,EAAQZ,OAAOwC,EAAe5B,KAAK,EACrC,CAACmC,MAAMnC,CAAK,GAAKA,GAAS,GAAKA,GAASW,EAAUX,QACpD0B,EAAiB1B,CAAK,EACrBiC,EAAMC,OAA4BG,KAAM,EAE7C,CACD,EAEKzC,EAAeC,EAAS,IACrBnB,EAAcI,EAAMyB,KAAK,GAAK7B,EAAcoB,MACpD,EAED,MAAO,IAAAC,EAAA,MAAA,CAAA,MACO,CACV,oGACAjB,EAAM0B,KAAO,OAAS,EAAE,CACzB,EAAA,CAAAT,EAAA,MAAA,CAAA,MAAA,wBAAA,EAAA,CAAAA,EAAA,SAAA,CAAA,SAGee,EAAYd,OAASlB,EAAMO,SAAQ,MACtC,CACL,kIACAyB,EAAYd,OAASlB,EAAMO,SACvB,sDACA,oCAAoCO,EAAaI,MAAME,KAAK,EAAE,EACnE,QACQT,IAAMiC,EAAiB5C,EAAMK,QAAU,CAAC,CAAC,EAAA,CAAAY,EAAA,IAAA,CAAA,MAAA,8CAAAuC,EAAAA,IAAAA,EAAAA,4CAAAvC,EAAA,MAAA,CAAA,MAAA,yCAQnDwC,CAAAA,EAAEC,EACD,CACE3D,KAAM,OACN4D,IAAK,MACLC,MAAO,MACT,EACA,IAAM1B,EAAehB,MAAM2C,IAAI5D,GAC7BwD,EAAE5D,EAAY,CACZ6C,IAAKzC,EAAKyC,IACVzC,KAAAA,EACAI,QAASL,EAAMK,QACfE,SAAUP,EAAMO,SAChBE,WAAYT,EAAMyB,MAClBd,QAASiC,CACV,CAAA,CACH,CACF,EAEC5C,EAAMwB,iBAAeP,EAAA,MAAA,CAAA,MAAA,sDAAA,EAAA,CAAAA,EAAA,MAAA,CAAA,MAGT,CACL,oFACAgC,EAAc/B,MAAQ,sBAAsBJ,EAAaI,MAAMC,MAAM,GAAK,2BAA2B,CACtG,EAAA,CAAAF,EAAA,OAAA,CAAA,MAAA,oCAAAuC,CAAAA,UAAAvC,EAAA,MAAA,CAAA,MAAA,UAAA,EAAA,CAAAA,EAAA,QAAA,CAAA,KAAA,OAAA,UAAA,UAAA,QAAA,SAAA,MAQU6B,EAAe5B,MAAK,QACjB4C,GAAM,CAEdhB,EAAe5B,MAAS4C,EAAEV,OAA4BlC,MAAM6C,QAAQ,MAAO,EAAE,CAC9E,EAAA,UACUT,EAAiB,QACnBU,IAAM,CAAEf,EAAc/B,MAAQ,GAAM4B,EAAe5B,MAAQ,EAAK,EAAA,OAChE4C,GAAM,CACbb,EAAc/B,MAAQ,GACtBgC,EAAgBY,CAAC,CAClB,EAAA,SACS9D,EAAMO,SAAQ,IAAA,IAAA,IAEnBsB,EAAUX,MAAK,MACb,CACL,oCACA,wEACA,kCACAlB,EAAMO,SAAW,gEAAkE,GACnFO,EAAaI,MAAM+C,KAAK,CACzB,EAAA,KAAA,GAAA,CAAA,QAAA,UAAA,YAAA,UAAA,SAAA,WAAA,KAAA,CAAA,EAAAhD,EAAA,MAAA,CAAA,MAGM,CACL,sGACA,8CACAgC,EAAc/B,MAAQ,cAAgB,gCACtC,MAAMlB,EAAMyB,KAAK,YAAYzB,EAAMyB,KAAK,gBAAgBzB,EAAMyB,KAAK,qBAAqBzB,EAAMyB,KAAK,MAAM,CAC1G+B,EAAAA,CAAAA,QAEE3B,EAAUX,MAAKsC,cAAAvC,EAAA,OAAA,CAAA,MAAA,kCAAAuC,EAAAA,CAAAA,EAM3B,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAvC,EAAA,MAAA,CAAA,MAAA,oCAAA,EAAA,CAAAA,EAAA,SAAA,CAAA,SAKWgB,EAAWf,OAASlB,EAAMO,SAAQ,MACrC,CACL,kIACA0B,EAAWf,OAASlB,EAAMO,SACtB,sDACA,oCAAoCO,EAAaI,MAAME,KAAK,EAAE,EACnE,QACQT,IAAMiC,EAAiB5C,EAAMK,QAAU,CAAC,CAACmD,EAAAA,CAAAA,UAAAvC,EAAA,IAAA,CAAA,MAAA,+CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,WAAA,SAAA,CAAA,CAAA,CAAA,EAAAA,EAAA,QAAA,CAAA,OAAA,IAOvC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA0Bd,EAEJ,EAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CACH,CACF,CAAC,o+DCiLKiD,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,iCAzF5B,MAAMC,EAAkB,CACtB,QAASpB,EAAI,CAAC,EACd,MAAO,IACP,SAAU,EACZ,EAGMqB,EAAsB,CAC1B,QAASrB,EAAI,EAAE,EACf,MAAO,GAET,EAGMsB,EAAuB,CAC3B,QAAStB,EAAI,CAAC,EACd,SAAUA,EAAI,EAAE,EAChB,MAAOA,EAAI,GAAG,CAChB,EAGMuB,EAAkB,CACtB,QAASvB,EAAI,CAAC,EACd,MAAO,IACP,MAAOA,EAAe,QAAQ,CAChC,EAGMwB,EAAoB,CACxB,QAASxB,EAAI,CAAC,EACd,MAAO,IACP,QAASA,EAAI,EAAK,CACpB,EAGMyB,EAAYzB,EAAwD,EAAE,EACtE0B,EAAkB,CACtB,QAAS1B,EAAI,CAAC,EACd,SAAUA,EAAI,EAAE,EAChB,MAAOA,EAAI,GAAG,EACd,QAASA,EAAI,EAAK,CACpB,EAGM2B,EAA+B,CACnC,QAAS,OAAQ,OAAQ,UAAW,QACpC,MAAO,SAAU,QAAS,SAC1B,OAAQ,QAAS,UAAW,OAC5B,OAAQ,MAAO,OAAQ,SACvB,SAAU,SAAU,UAAW,OAAQ,MACzC,EAGMC,EAAgB5B,EAAe,QAAQ,EAGvC6B,EAAoB,CAAC/B,EAAcvB,IAAqB,CAC5DmD,EAAgB,QAAQ,MAAQ,GAChC,WAAW,IAAM,CACT,MAAAI,GAAchC,EAAO,GAAKvB,EACtBkD,EAAA,MAAQ,MAAMlD,CAAQ,EAAE,KAAK,CAAC,EAAE,IAAI,CAACwD,EAAGxC,KAAO,CACvD,GAAIuC,EAAavC,EAAI,EACrB,KAAM,QAAQuC,EAAavC,EAAI,CAAC,GAChC,MAAO,OAAOuC,EAAavC,EAAI,CAAC,cAAA,EAChC,EACFmC,EAAgB,QAAQ,MAAQ,IAC/B,GAAG,CACR,EAGMM,EAAyBlC,GAAiB,CAC9C4B,EAAgB,QAAQ,MAAQ5B,EACd+B,EAAA/B,EAAM4B,EAAgB,SAAS,KAAK,CACxD,EAGMO,EAA2BnC,GAAiB,CAChD0B,EAAkB,QAAQ,MAAQ,GAClCA,EAAkB,QAAQ,MAAQ1B,EAClC,WAAW,IAAM,CACf0B,EAAkB,QAAQ,MAAQ,IACjC,GAAG,CACR,EAGAU,EAAU,IAAM,CACdL,EAAkBH,EAAgB,QAAQ,MAAOA,EAAgB,SAAS,KAAK,CAAA,CAChF,EAUD,MAAMS,EAAgB,CAEpB,MAAO,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAC1N,KAAM,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EACzN,KAAM,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EACzN,QAAS,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAC5N,MAAO,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAG1N,IAAK,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EACxN,OAAQ,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAC3N,MAAO,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAC1N,OAAQ,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAG3N,KAAM,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EACzN,MAAO,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAC1N,QAAS,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAC5N,KAAM,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAGzN,KAAM,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EACzN,IAAK,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EACxN,KAAM,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EACzN,OAAQ,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAG3N,OAAQ,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAC3N,OAAQ,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAC3N,QAAS,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EAC5N,KAAM,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,EACzN,KAAM,CAAE,GAAI,UAAW,KAAM,UAAW,OAAQ,UAAW,SAAU,UAAW,OAAQ,UAAW,WAAY,UAAW,SAAU,UAAW,aAAc,UAAW,WAAY,UAAW,eAAgB,SAAU,CAC3N,EAGMC,EAAwB1D,GAAqB,CAC3C,MAAA2D,EAASF,EAAczD,CAAK,EAC5B4D,EAAaV,EAAc,QAAUlD,EAEpC,MAAA,CACL,gBAAiB4D,EAAaD,EAAO,SAAWA,EAAO,GACvD,MAAOC,EAAaD,EAAO,WAAaA,EAAO,KAC/C,YAAaC,EAAaD,EAAO,WAAaA,EAAO,OACrD,UAAW,CACT,gBAAiBC,EAAaD,EAAO,aAAeA,EAAO,OAC3D,MAAOC,EAAaD,EAAO,eAAiBA,EAAO,SACnD,YAAaC,EAAaD,EAAO,eAAiBA,EAAO,UAAA,CAE7D,CACF;;;;;;;;;;;;;;;;;"}