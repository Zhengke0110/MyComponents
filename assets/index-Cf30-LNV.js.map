{"version":3,"file":"index-Cf30-LNV.js","sources":["../../src/libs/Drawer/Drawer.tsx","../../src/libs/Drawer/View.vue"],"sourcesContent":["import {\n    defineComponent,\n    PropType,\n    Transition,\n    ref,\n    watch,\n    computed,\n} from \"vue\";\nimport \"./drawer.css\";\n\nexport default defineComponent({\n    name: \"Drawer\",\n    props: {\n        modelValue: {\n            type: Boolean as PropType<boolean>,\n            default: false,\n            required: true,\n        },\n        title: {\n            type: String,\n            default: \"\",\n        },\n        placement: {\n            type: String as PropType<\"left\" | \"right\" | \"top\" | \"bottom\">,\n            default: \"right\",\n        },\n        size: {\n            type: [String, Number],\n            default: \"300px\",\n        },\n        closable: {\n            type: Boolean,\n            default: true,\n        },\n        mask: {\n            type: Boolean,\n            default: true,\n        },\n        maskClosable: {\n            type: Boolean,\n            default: true,\n        },\n        showFooter: {\n            type: Boolean,\n            default: false,\n        },\n        zIndex: {\n            type: Number,\n            default: 1000,\n        },\n        destroyOnClose: {\n            type: Boolean,\n            default: false,\n        },\n        lockScroll: {\n            type: Boolean,\n            default: true,\n        },\n    },\n\n    emits: [\"update:modelValue\", \"open\", \"close\", \"afterVisibleChange\"],\n\n    setup(props, { slots, emit }) {\n        const visible = ref(false);\n        const animating = ref(false);\n        const drawerRef = ref<HTMLElement | null>(null);\n\n        // 计算尺寸和位置相关样式\n        const sizeStyle = computed(() => {\n            const size =\n                typeof props.size === \"number\" ? `${props.size}px` : props.size;\n\n            if ([\"left\", \"right\"].includes(props.placement)) {\n                return { width: size };\n            } else {\n                return { height: size };\n            }\n        });\n\n        // 基于方向的动画类名\n        const transitionName = computed(() => {\n            return `drawer-${props.placement}`;\n        });\n\n        // 计算容器样式\n        const containerStyle = computed(() => {\n            return {\n                zIndex: props.zIndex,\n            };\n        });\n\n        // 处理抽屉关闭\n        const close = () => {\n            emit(\"update:modelValue\", false);\n        };\n\n        // 处理点击遮罩层\n        const handleMaskClick = () => {\n            if (props.maskClosable) {\n                close();\n            }\n        };\n\n        // 处理过渡效果结束\n        const handleAfterLeave = () => {\n            animating.value = false;\n            emit(\"afterVisibleChange\", false);\n        };\n\n        const handleAfterEnter = () => {\n            animating.value = false;\n            emit(\"afterVisibleChange\", true);\n        };\n\n        // 处理过渡开始\n        const handleBeforeEnter = () => {\n            animating.value = true;\n            emit(\"open\");\n        };\n\n        const handleBeforeLeave = () => {\n            animating.value = true;\n            emit(\"close\");\n        };\n\n        // 监听modelValue变化\n        watch(\n            () => props.modelValue,\n            (val) => {\n                if (val) {\n                    visible.value = true;\n                    if (props.lockScroll) {\n                        document.body.style.overflow = \"hidden\";\n                    }\n                } else {\n                    if (props.lockScroll) {\n                        document.body.style.overflow = \"\";\n                    }\n                    if (!animating.value) {\n                        visible.value = false;\n                    }\n                }\n            },\n            { immediate: true },\n        );\n\n        // 阻止抽屉内部点击事件冒泡到遮罩层\n        const stopPropagation = (event: Event) => {\n            event.stopPropagation();\n        };\n\n        // Modified to include theme detection\n        const isDarkMode = computed(() => {\n            return document.documentElement.classList.contains('dark');\n        });\n\n        return () => (\n            <Transition name=\"drawer-fade\" appear>\n                {visible.value && (\n                    <div\n                        class=\"fixed inset-0 overflow-hidden\"\n                        style={containerStyle.value}\n                        aria-modal=\"true\"\n                        role=\"dialog\"\n                    >\n                        {/* Enhanced mask with blur effect */}\n                        {props.mask && (\n                            <div\n                                class=\"absolute inset-0 bg-black bg-opacity-30 dark:bg-opacity-50 transition-opacity tech-drawer-mask\"\n                                onClick={handleMaskClick}\n                            />\n                        )}\n\n                        {/* Drawer panel with enhanced styling */}\n                        <Transition\n                            name={transitionName.value}\n                            appear\n                            onBeforeEnter={handleBeforeEnter}\n                            onAfterEnter={handleAfterEnter}\n                            onBeforeLeave={handleBeforeLeave}\n                            onAfterLeave={handleAfterLeave}\n                        >\n                            <div\n                                v-show={props.modelValue}\n                                class={`absolute flex flex-col tech-drawer-panel ${props.placement} ${isDarkMode.value ? 'dark' : 'light'} ${positionClass(props.placement)}`}\n                                ref={drawerRef}\n                                style={sizeStyle.value}\n                                onClick={stopPropagation}\n                            >\n                                {/* Enhanced header with gradient line */}\n                                {(props.title || props.closable || slots.title) && (\n                                    <div class=\"flex items-center justify-between px-6 py-4 drawer-header\">\n                                        <div class=\"flex-1 font-medium text-gray-800 dark:text-gray-200\">\n                                            {slots.title ? slots.title() : props.title}\n                                        </div>\n                                        {props.closable && (\n                                            <button\n                                                onClick={close}\n                                                class=\"rounded-full p-1.5 text-gray-500 hover:text-blue-500 dark:text-gray-400 dark:hover:text-blue-400 focus:outline-none drawer-close-btn\"\n                                                aria-label=\"Close drawer\"\n                                            >\n                                                <svg\n                                                    class=\"h-5 w-5\"\n                                                    fill=\"none\"\n                                                    viewBox=\"0 0 24 24\"\n                                                    stroke=\"currentColor\"\n                                                >\n                                                    <path\n                                                        stroke-linecap=\"round\"\n                                                        stroke-linejoin=\"round\"\n                                                        stroke-width=\"2\"\n                                                        d=\"M6 18L18 6M6 6l12 12\"\n                                                    ></path>\n                                                </svg>\n                                            </button>\n                                        )}\n                                    </div>\n                                )}\n\n                                {/* Enhanced content area with custom scrollbar */}\n                                <div class=\"flex-1 overflow-auto p-6 drawer-content\">\n                                    {!props.destroyOnClose || props.modelValue\n                                        ? slots.default?.()\n                                        : null}\n                                </div>\n\n                                {/* Enhanced footer with gradient line */}\n                                {(props.showFooter || slots.footer) && (\n                                    <div class=\"flex justify-end px-6 py-4 drawer-footer\">\n                                        {slots.footer?.()}\n                                    </div>\n                                )}\n                            </div>\n                        </Transition>\n                    </div>\n                )}\n            </Transition>\n        );\n    },\n});\n\n// 根据不同位置返回定位类名\nfunction positionClass(placement: string): string {\n    switch (placement) {\n        case \"left\":\n            return \"top-0 left-0 bottom-0\";\n        case \"right\":\n            return \"top-0 right-0 bottom-0\";\n        case \"top\":\n            return \"top-0 left-0 right-0\";\n        case \"bottom\":\n            return \"bottom-0 left-0 right-0\";\n        default:\n            return \"top-0 right-0 bottom-0\";\n    }\n}\n","<template>\n    <div class=\"p-6 min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\n        <h1 class=\"text-2xl font-bold mb-6 text-gray-900 dark:text-white\">Drawer 抽屉组件</h1>\n\n        <!-- 基础用法展示部分 -->\n        <section class=\"mb-10\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-200\">基础用法</h2>\n            <div class=\"flex flex-wrap gap-4\">\n                <button @click=\"openDrawer('right')\"\n                    class=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\">\n                    右侧抽屉\n                </button>\n                <button @click=\"openDrawer('left')\"\n                    class=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\">\n                    左侧抽屉\n                </button>\n                <button @click=\"openDrawer('top')\"\n                    class=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700 transition-colors\">\n                    顶部抽屉\n                </button>\n                <button @click=\"openDrawer('bottom')\"\n                    class=\"px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700 transition-colors\">\n                    底部抽屉\n                </button>\n            </div>\n        </section>\n\n        <!-- 自定义尺寸展示部分 -->\n        <section class=\"mb-10\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-200\">自定义尺寸</h2>\n            <div class=\"flex flex-wrap gap-4\">\n                <button @click=\"openSizeDrawer('small')\"\n                    class=\"px-4 py-2 bg-teal-600 text-white rounded hover:bg-teal-700 transition-colors\">\n                    小尺寸抽屉\n                </button>\n                <button @click=\"openSizeDrawer('medium')\"\n                    class=\"px-4 py-2 bg-teal-600 text-white rounded hover:bg-teal-700 transition-colors\">\n                    中等尺寸抽屉\n                </button>\n                <button @click=\"openSizeDrawer('large')\"\n                    class=\"px-4 py-2 bg-teal-600 text-white rounded hover:bg-teal-700 transition-colors\">\n                    大尺寸抽屉\n                </button>\n            </div>\n        </section>\n\n        <!-- 高级配置展示部分 -->\n        <section class=\"mb-10\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-200\">高级配置</h2>\n            <div class=\"flex flex-wrap gap-4\">\n                <button @click=\"noMaskDrawer = true\"\n                    class=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition-colors\">\n                    无遮罩层抽屉\n                </button>\n                <button @click=\"notClosableDrawer = true\"\n                    class=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition-colors\">\n                    不可点击遮罩关闭\n                </button>\n                <button @click=\"withFooterDrawer = true\"\n                    class=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition-colors\">\n                    带底部抽屉\n                </button>\n            </div>\n        </section>\n\n        <!-- 嵌套内容展示部分 -->\n        <section class=\"mb-10\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-200\">嵌套内容</h2>\n            <button @click=\"nestedDrawer = true\"\n                class=\"px-4 py-2 bg-pink-600 text-white rounded hover:bg-pink-700 transition-colors\">\n                嵌套抽屉\n            </button>\n        </section>\n\n        <!-- 各种Drawer实例 -->\n\n        <!-- 基础位置抽屉 -->\n        <Drawer v-model=\"drawerVisible\" :placement=\"currentPlacement\"\n            :title=\"`${placementTitleMap[currentPlacement]}抽屉`\">\n            <div class=\"text-gray-800 dark:text-gray-200\">\n                <p>这是一个基础的抽屉组件，位置在{{ placementTitleMap[currentPlacement] }}</p>\n                <div class=\"mt-4\">\n                    <p class=\"mb-2\">抽屉组件特性：</p>\n                    <ul class=\"list-disc pl-5\">\n                        <li>可以从四个方向滑入</li>\n                        <li>支持自定义尺寸</li>\n                        <li>可配置遮罩层和关闭行为</li>\n                        <li>支持亮色和暗色模式</li>\n                    </ul>\n                </div>\n            </div>\n        </Drawer>\n\n        <!-- 自定义尺寸抽屉 -->\n        <Drawer v-model=\"sizeDrawerVisible\" title=\"自定义尺寸抽屉\" :size=\"currentSize\" placement=\"right\">\n            <div class=\"text-gray-800 dark:text-gray-200\">\n                <p>这是一个{{ sizeTextMap[currentSizeType] }}尺寸的抽屉，宽度为 {{ currentSize }}</p>\n                <div class=\"mt-4 p-4 bg-gray-100 dark:bg-gray-800 rounded\">\n                    <p>抽屉大小可以通过传入不同的 size 属性来控制，可以是像素值或百分比。</p>\n                </div>\n            </div>\n        </Drawer>\n\n        <!-- 无遮罩层抽屉 -->\n        <Drawer v-model=\"noMaskDrawer\" title=\"无遮罩层抽屉\" :mask=\"false\">\n            <div class=\"text-gray-800 dark:text-gray-200\">\n                <p>这个抽屉没有遮罩层，背景内容可见。</p>\n                <div class=\"mt-4 p-4 bg-gray-100 dark:bg-gray-800 rounded\">\n                    <p>在某些场景下，可能需要保持与背景内容的交互，此时可以设置 mask 为 false。</p>\n                </div>\n            </div>\n        </Drawer>\n\n        <!-- 不可点击遮罩关闭的抽屉 -->\n        <Drawer v-model=\"notClosableDrawer\" title=\"不可点击遮罩关闭\" :maskClosable=\"false\">\n            <div class=\"text-gray-800 dark:text-gray-200\">\n                <p>点击遮罩层不会关闭这个抽屉。</p>\n                <div class=\"mt-4 p-4 bg-gray-100 dark:bg-gray-800 rounded\">\n                    <p>设置 maskClosable 为 false 可以防止用户通过点击遮罩层意外关闭抽屉。</p>\n                </div>\n            </div>\n        </Drawer>\n\n        <!-- 带底部的抽屉 -->\n        <Drawer v-model=\"withFooterDrawer\" title=\"带底部的抽屉\" :showFooter=\"true\">\n            <div class=\"text-gray-800 dark:text-gray-200\">\n                <p>这个抽屉包含底部操作区域。</p>\n                <div class=\"mt-4 p-4 bg-gray-100 dark:bg-gray-800 rounded\">\n                    <p>可以在底部添加操作按钮或其他内容。</p>\n                </div>\n            </div>\n            <template #footer>\n                <div class=\"flex gap-2\">\n                    <button\n                        class=\"px-4 py-2 bg-gray-200 text-gray-800 rounded dark:bg-gray-700 dark:text-white hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\">\n                        取消\n                    </button>\n                    <button class=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\">\n                        确认\n                    </button>\n                </div>\n            </template>\n        </Drawer>\n\n        <!-- 嵌套抽屉 -->\n        <Drawer v-model=\"nestedDrawer\" title=\"嵌套抽屉示例\" placement=\"right\" size=\"400px\">\n            <div class=\"text-gray-800 dark:text-gray-200\">\n                <p>这个示例展示了如何在一个抽屉中打开另一个抽屉。</p>\n                <div class=\"mt-6\">\n                    <button @click=\"innerDrawer = true\"\n                        class=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\">\n                        打开内层抽屉\n                    </button>\n                </div>\n            </div>\n\n            <Drawer v-model=\"innerDrawer\" title=\"内层抽屉\" placement=\"right\" size=\"300px\">\n                <div class=\"text-gray-800 dark:text-gray-200\">\n                    <p>这是嵌套在另一个抽屉内部的抽屉。</p>\n                    <div class=\"mt-4 p-4 bg-gray-100 dark:bg-gray-800 rounded\">\n                        <p>嵌套抽屉在复杂的交互场景中很有用，比如多层级的表单填写或者数据选择。</p>\n                    </div>\n                </div>\n            </Drawer>\n        </Drawer>\n\n        <!-- API 文档部分 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">组件API</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">属性 (Props)</h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">属性名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">类型</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">默认值</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">modelValue(v-model)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">控制抽屉是否可见</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">title</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">抽屉标题</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">placement</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'left' | 'right' | 'top' |\n                                    'bottom'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'right'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">抽屉弹出方向</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">size</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string | number</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'300px'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">抽屉宽度或高度，取决于方向</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">closable</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否显示关闭按钮</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">mask</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否显示遮罩层</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">maskClosable</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">点击遮罩层是否可关闭抽屉</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">showFooter</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否显示底部区域</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">zIndex</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">number</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">1000</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">设置抽屉的 z-index</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">destroyOnClose</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">关闭时是否销毁子元素</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">lockScroll</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否在抽屉打开时锁定页面滚动</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">事件 (Events)</h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">事件名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">回调参数</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">update:modelValue</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">(value: boolean)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">抽屉打开状态改变时触发</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">open</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">抽屉打开动画开始时触发</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">close</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">抽屉关闭动画开始时触发</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">afterVisibleChange</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">(visible: boolean)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">抽屉打开/关闭动画结束后触发</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">插槽 (Slots)</h3>\n                <div class=\"overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">插槽名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">default</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">抽屉内容</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">title</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义标题区域</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">footer</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义底部内容</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section>\n\n        <!-- 小结与最佳实践 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">小结与最佳实践</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <div class=\"space-y-4\">\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        Drawer 抽屉组件是一个从屏幕边缘滑入的浮层面板，可用于展示表单、详情或操作面板等内容，不会打断用户的主要操作流程。\n                        以下是一些使用建议：\n                    </p>\n\n                    <ul class=\"ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300\">\n                        <li>根据内容的类型和重要性选择合适的弹出方向，如表单操作通常使用右侧抽屉</li>\n                        <li>合理设置抽屉的尺寸，既要保证内容展示完整，又不要占据过多屏幕空间</li>\n                        <li>对于需要进行重要操作的场景，请设置 <code\n                                class=\"bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-700\">maskClosable</code>\n                            为 <code class=\"bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-700\">false</code> 防止用户误操作</li>\n                        <li>利用插槽自定义标题和底部区域，增强交互体验</li>\n                        <li>抽屉组件适合二级内容的展示，但不适合作为主要内容展示区域</li>\n                    </ul>\n\n                    <div\n                        class=\"rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20\">\n                        <h4 class=\"mb-2 flex items-center text-blue-800 dark:text-blue-300\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"mr-2 h-5 w-5\" viewBox=\"0 0 24 24\" fill=\"none\"\n                                stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                                <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\n                                <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\n                            </svg>\n                            暗色模式提示\n                        </h4>\n                        <p class=\"text-sm text-blue-700 dark:text-blue-300\">\n                            Drawer 组件已内置支持暗色模式，无需额外配置。只要在应用的根元素上添加 <code\n                                class=\"rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60\">.dark</code> 类，\n                            组件就会自动切换为暗色样式。所有颜色、背景和边框都会自动适配当前主题。\n                        </p>\n                    </div>\n\n                    <h4 class=\"font-medium text-gray-900 dark:text-white mt-4\">适合使用的场景：</h4>\n                    <ul class=\"ml-6 list-disc space-y-1 text-gray-700 dark:text-gray-300\">\n                        <li>需要从侧面展示详情信息或操作表单</li>\n                        <li>在移动端等窄屏设备上展示更多操作或内容</li>\n                        <li>需要用户输入或查看临时性信息</li>\n                        <li>作为复杂表单的补充界面</li>\n                    </ul>\n\n                    <h4 class=\"font-medium text-gray-900 dark:text-white mt-4\">不适合使用的场景：</h4>\n                    <ul class=\"ml-6 list-disc space-y-1 text-gray-700 dark:text-gray-300\">\n                        <li>展示简单、少量的信息（可以使用气泡框或普通对话框）</li>\n                        <li>需要用户完整注意力的重要操作（应使用模态对话框）</li>\n                        <li>主要内容展示（应该作为页面主体部分）</li>\n                    </ul>\n\n                    <p class=\"text-gray-700 dark:text-gray-300 mt-4\">\n                        在设计界面时，合理使用抽屉组件可以提升用户体验，减少页面切换成本，同时保持用户注意力的连续性。\n                        Drawer 组件遵循 WAI-ARIA 规范设计，确保良好的可访问性，支持键盘导航和屏幕阅读器。\n                    </p>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue';\nimport Drawer from './Drawer';\n\n// 基础抽屉控制\nconst drawerVisible = ref(false);\nconst currentPlacement = ref<'left' | 'right' | 'top' | 'bottom'>('right');\nconst placementTitleMap = {\n    left: '左侧',\n    right: '右侧',\n    top: '顶部',\n    bottom: '底部'\n};\n\nconst openDrawer = (placement: 'left' | 'right' | 'top' | 'bottom') => {\n    currentPlacement.value = placement;\n    drawerVisible.value = true;\n};\n\n// 尺寸抽屉控制\nconst sizeDrawerVisible = ref(false);\nconst currentSizeType = ref<'small' | 'medium' | 'large'>('medium');\nconst sizeTextMap = {\n    small: '小',\n    medium: '中',\n    large: '大'\n};\nconst sizeMap = {\n    small: '250px',\n    medium: '400px',\n    large: '600px'\n};\nconst currentSize = computed(() => sizeMap[currentSizeType.value]);\n\nconst openSizeDrawer = (size: 'small' | 'medium' | 'large') => {\n    currentSizeType.value = size;\n    sizeDrawerVisible.value = true;\n};\n\n// 高级配置抽屉控制\nconst noMaskDrawer = ref(false);\nconst notClosableDrawer = ref(false);\nconst withFooterDrawer = ref(false);\n\n// 嵌套抽屉控制\nconst nestedDrawer = ref(false);\nconst innerDrawer = ref(false);\n</script>\n\n<style scoped>\n/* 添加一些过渡效果 */\n.transition-colors {\n    transition-property: background-color, border-color, color, fill, stroke;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 300ms;\n}\n</style>"],"names":["defineComponent","name","props","modelValue","type","Boolean","default","required","title","String","placement","size","Number","closable","mask","maskClosable","showFooter","zIndex","destroyOnClose","lockScroll","emits","setup","slots","emit","visible","ref","animating","drawerRef","sizeStyle","computed","includes","width","height","transitionName","containerStyle","close","handleMaskClick","handleAfterLeave","value","handleAfterEnter","handleBeforeEnter","handleBeforeLeave","watch","val","document","body","style","overflow","immediate","stopPropagation","event","isDarkMode","documentElement","classList","contains","_createVNode","Transition","_withDirectives","positionClass","footer","_vShow","drawerVisible","currentPlacement","placementTitleMap","openDrawer","sizeDrawerVisible","currentSizeType","sizeTextMap","sizeMap","currentSize","openSizeDrawer","noMaskDrawer","notClosableDrawer","withFooterDrawer","nestedDrawer","innerDrawer"],"mappings":"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"}