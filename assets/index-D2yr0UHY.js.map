{"version":3,"file":"index-D2yr0UHY.js","sources":["../../src/libs/ButtonGroups/config.ts","../../src/libs/ButtonGroups/ButtonGroups.tsx","../../src/libs/ButtonGroups/code.ts","../../src/libs/ButtonGroups/View.vue"],"sourcesContent":["export type ColorType =\n  | 'slate' | 'gray' | 'zinc' | 'neutral' | 'stone'  // 灰色系\n  | 'red' | 'orange' | 'amber' | 'yellow'            // 暖色系\n  | 'lime' | 'green' | 'emerald' | 'teal'            // 绿色系\n  | 'cyan' | 'sky' | 'blue' | 'indigo'               // 蓝色系\n  | 'violet' | 'purple' | 'fuchsia' | 'pink' | 'rose'; // 紫粉色系\n\n// 语义化类型\nexport type ButtonTypeValue = 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'info';\n\n// 合并颜色和类型为一个联合类型\nexport type ButtonType = ColorType | ButtonTypeValue;\n\n// 类型对应的实际颜色\nexport const BUTTON_TYPE_MAP: Record<ButtonTypeValue, ColorType> = {\n  primary: 'indigo',\n  secondary: 'gray',\n  success: 'green',\n  warning: 'yellow',\n  danger: 'red',\n  info: 'blue'\n};\n\nexport type ButtonSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\nexport type ButtonVariant = 'solid' | 'outline' | 'soft' | 'ghost'\n\n// 按钮变体的样式映射 - 使用tailwindcss的dark类实现深色模式适配\nexport const variantColorMap = {\n  solid: {\n    slate: \"bg-slate-500 text-white hover:bg-slate-600 focus:ring-slate-400 dark:bg-slate-600 dark:hover:bg-slate-700\",\n    gray: \"bg-gray-500 text-white hover:bg-gray-600 focus:ring-gray-400 dark:bg-gray-600 dark:hover:bg-gray-700\",\n    zinc: \"bg-zinc-500 text-white hover:bg-zinc-600 focus:ring-zinc-400 dark:bg-zinc-600 dark:hover:bg-zinc-700\",\n    neutral: \"bg-neutral-500 text-white hover:bg-neutral-600 focus:ring-neutral-400 dark:bg-neutral-600 dark:hover:bg-neutral-700\",\n    stone: \"bg-stone-500 text-white hover:bg-stone-600 focus:ring-stone-400 dark:bg-stone-600 dark:hover:bg-stone-700\",\n    red: \"bg-red-500 text-white hover:bg-red-600 focus:ring-red-400 dark:bg-red-600 dark:hover:bg-red-700\",\n    orange: \"bg-orange-500 text-white hover:bg-orange-600 focus:ring-orange-400 dark:bg-orange-600 dark:hover:bg-orange-700\",\n    amber: \"bg-amber-500 text-white hover:bg-amber-600 focus:ring-amber-400 dark:bg-amber-600 dark:hover:bg-amber-700\",\n    yellow: \"bg-yellow-500 text-white hover:bg-yellow-600 focus:ring-yellow-400 dark:bg-yellow-600 dark:hover:bg-yellow-700\",\n    lime: \"bg-lime-500 text-white hover:bg-lime-600 focus:ring-lime-400 dark:bg-lime-600 dark:hover:bg-lime-700\",\n    green: \"bg-green-500 text-white hover:bg-green-600 focus:ring-green-400 dark:bg-green-600 dark:hover:bg-green-700\",\n    emerald: \"bg-emerald-500 text-white hover:bg-emerald-600 focus:ring-emerald-400 dark:bg-emerald-600 dark:hover:bg-emerald-700\",\n    teal: \"bg-teal-500 text-white hover:bg-teal-600 focus:ring-teal-400 dark:bg-teal-600 dark:hover:bg-teal-700\",\n    cyan: \"bg-cyan-500 text-white hover:bg-cyan-600 focus:ring-cyan-400 dark:bg-cyan-600 dark:hover:bg-cyan-700\",\n    sky: \"bg-sky-500 text-white hover:bg-sky-600 focus:ring-sky-400 dark:bg-sky-600 dark:hover:bg-sky-700\",\n    blue: \"bg-blue-500 text-white hover:bg-blue-600 focus:ring-blue-400 dark:bg-blue-600 dark:hover:bg-blue-700\",\n    indigo: \"bg-indigo-500 text-white hover:bg-indigo-600 focus:ring-indigo-400 dark:bg-indigo-600 dark:hover:bg-indigo-700\",\n    violet: \"bg-violet-500 text-white hover:bg-violet-600 focus:ring-violet-400 dark:bg-violet-600 dark:hover:bg-violet-700\",\n    purple: \"bg-purple-500 text-white hover:bg-purple-600 focus:ring-purple-400 dark:bg-purple-600 dark:hover:bg-purple-700\",\n    fuchsia: \"bg-fuchsia-500 text-white hover:bg-fuchsia-600 focus:ring-fuchsia-400 dark:bg-fuchsia-600 dark:hover:bg-fuchsia-700\",\n    pink: \"bg-pink-500 text-white hover:bg-pink-600 focus:ring-pink-400 dark:bg-pink-600 dark:hover:bg-pink-700\",\n    rose: \"bg-rose-500 text-white hover:bg-rose-600 focus:ring-rose-400 dark:bg-rose-600 dark:hover:bg-rose-700\"\n  },\n  outline: {\n    slate: \"border border-slate-500 text-slate-700 hover:bg-slate-50 focus:ring-slate-400 dark:text-slate-300 dark:hover:bg-slate-800/30 dark:border-slate-400\",\n    gray: \"border border-gray-500 text-gray-700 hover:bg-gray-50 focus:ring-gray-400 dark:text-gray-300 dark:hover:bg-gray-800/30 dark:border-gray-400\",\n    zinc: \"border border-zinc-500 text-zinc-700 hover:bg-zinc-50 focus:ring-zinc-400 dark:text-zinc-300 dark:hover:bg-zinc-800/30 dark:border-zinc-400\",\n    neutral: \"border border-neutral-500 text-neutral-700 hover:bg-neutral-50 focus:ring-neutral-400 dark:text-neutral-300 dark:hover:bg-neutral-800/30 dark:border-neutral-400\",\n    stone: \"border border-stone-500 text-stone-700 hover:bg-stone-50 focus:ring-stone-400 dark:text-stone-300 dark:hover:bg-stone-800/30 dark:border-stone-400\",\n    red: \"border border-red-500 text-red-700 hover:bg-red-50 focus:ring-red-400 dark:text-red-400 dark:hover:bg-red-900/20 dark:border-red-400\",\n    orange: \"border border-orange-500 text-orange-700 hover:bg-orange-50 focus:ring-orange-400 dark:text-orange-400 dark:hover:bg-orange-900/20 dark:border-orange-400\",\n    amber: \"border border-amber-500 text-amber-700 hover:bg-amber-50 focus:ring-amber-400 dark:text-amber-400 dark:hover:bg-amber-900/20 dark:border-amber-400\",\n    yellow: \"border border-yellow-500 text-yellow-700 hover:bg-yellow-50 focus:ring-yellow-400 dark:text-yellow-400 dark:hover:bg-yellow-900/20 dark:border-yellow-400\",\n    lime: \"border border-lime-500 text-lime-700 hover:bg-lime-50 focus:ring-lime-400 dark:text-lime-400 dark:hover:bg-lime-900/20 dark:border-lime-400\",\n    green: \"border border-green-500 text-green-700 hover:bg-green-50 focus:ring-green-400 dark:text-green-400 dark:hover:bg-green-900/20 dark:border-green-400\",\n    emerald: \"border border-emerald-500 text-emerald-700 hover:bg-emerald-50 focus:ring-emerald-400 dark:text-emerald-400 dark:hover:bg-emerald-900/20 dark:border-emerald-400\",\n    teal: \"border border-teal-500 text-teal-700 hover:bg-teal-50 focus:ring-teal-400 dark:text-teal-400 dark:hover:bg-teal-900/20 dark:border-teal-400\",\n    cyan: \"border border-cyan-500 text-cyan-700 hover:bg-cyan-50 focus:ring-cyan-400 dark:text-cyan-400 dark:hover:bg-cyan-900/20 dark:border-cyan-400\",\n    sky: \"border border-sky-500 text-sky-700 hover:bg-sky-50 focus:ring-sky-400 dark:text-sky-400 dark:hover:bg-sky-900/20 dark:border-sky-400\",\n    blue: \"border border-blue-500 text-blue-700 hover:bg-blue-50 focus:ring-blue-400 dark:text-blue-400 dark:hover:bg-blue-900/20 dark:border-blue-400\",\n    indigo: \"border border-indigo-500 text-indigo-700 hover:bg-indigo-50 focus:ring-indigo-400 dark:text-indigo-400 dark:hover:bg-indigo-900/20 dark:border-indigo-400\",\n    violet: \"border border-violet-500 text-violet-700 hover:bg-violet-50 focus:ring-violet-400 dark:text-violet-400 dark:hover:bg-violet-900/20 dark:border-violet-400\",\n    purple: \"border border-purple-500 text-purple-700 hover:bg-purple-50 focus:ring-purple-400 dark:text-purple-400 dark:hover:bg-purple-900/20 dark:border-purple-400\",\n    fuchsia: \"border border-fuchsia-500 text-fuchsia-700 hover:bg-fuchsia-50 focus:ring-fuchsia-400 dark:text-fuchsia-400 dark:hover:bg-fuchsia-900/20 dark:border-fuchsia-400\",\n    pink: \"border border-pink-500 text-pink-700 hover:bg-pink-50 focus:ring-pink-400 dark:text-pink-400 dark:hover:bg-pink-900/20 dark:border-pink-400\",\n    rose: \"border border-rose-500 text-rose-700 hover:bg-rose-50 focus:ring-rose-400 dark:text-rose-400 dark:hover:bg-rose-900/20 dark:border-rose-400\"\n  },\n  soft: {\n    slate: \"bg-slate-100 text-slate-800 hover:bg-slate-200 focus:ring-slate-400 dark:bg-slate-700/50 dark:text-slate-200 dark:hover:bg-slate-700/70\",\n    gray: \"bg-gray-100 text-gray-800 hover:bg-gray-200 focus:ring-gray-400 dark:bg-gray-700/50 dark:text-gray-200 dark:hover:bg-gray-700/70\",\n    zinc: \"bg-zinc-100 text-zinc-800 hover:bg-zinc-200 focus:ring-zinc-400 dark:bg-zinc-700/50 dark:text-zinc-200 dark:hover:bg-zinc-700/70\",\n    neutral: \"bg-neutral-100 text-neutral-800 hover:bg-neutral-200 focus:ring-neutral-400 dark:bg-neutral-700/50 dark:text-neutral-200 dark:hover:bg-neutral-700/70\",\n    stone: \"bg-stone-100 text-stone-800 hover:bg-stone-200 focus:ring-stone-400 dark:bg-stone-700/50 dark:text-stone-200 dark:hover:bg-stone-700/70\",\n    red: \"bg-red-100 text-red-800 hover:bg-red-200 focus:ring-red-400 dark:bg-red-700/40 dark:text-red-200 dark:hover:bg-red-700/60\",\n    orange: \"bg-orange-100 text-orange-800 hover:bg-orange-200 focus:ring-orange-400 dark:bg-orange-700/40 dark:text-orange-200 dark:hover:bg-orange-700/60\",\n    amber: \"bg-amber-100 text-amber-800 hover:bg-amber-200 focus:ring-amber-400 dark:bg-amber-700/40 dark:text-amber-200 dark:hover:bg-amber-700/60\",\n    yellow: \"bg-yellow-100 text-yellow-800 hover:bg-yellow-200 focus:ring-yellow-400 dark:bg-yellow-700/40 dark:text-yellow-200 dark:hover:bg-yellow-700/60\",\n    lime: \"bg-lime-100 text-lime-800 hover:bg-lime-200 focus:ring-lime-400 dark:bg-lime-700/40 dark:text-lime-200 dark:hover:bg-lime-700/60\",\n    green: \"bg-green-100 text-green-800 hover:bg-green-200 focus:ring-green-400 dark:bg-green-700/40 dark:text-green-200 dark:hover:bg-green-700/60\",\n    emerald: \"bg-emerald-100 text-emerald-800 hover:bg-emerald-200 focus:ring-emerald-400 dark:bg-emerald-700/40 dark:text-emerald-200 dark:hover:bg-emerald-700/60\",\n    teal: \"bg-teal-100 text-teal-800 hover:bg-teal-200 focus:ring-teal-400 dark:bg-teal-700/40 dark:text-teal-200 dark:hover:bg-teal-700/60\",\n    cyan: \"bg-cyan-100 text-cyan-800 hover:bg-cyan-200 focus:ring-cyan-400 dark:bg-cyan-700/40 dark:text-cyan-200 dark:hover:bg-cyan-700/60\",\n    sky: \"bg-sky-100 text-sky-800 hover:bg-sky-200 focus:ring-sky-400 dark:bg-sky-700/40 dark:text-sky-200 dark:hover:bg-sky-700/60\",\n    blue: \"bg-blue-100 text-blue-800 hover:bg-blue-200 focus:ring-blue-400 dark:bg-blue-700/40 dark:text-blue-200 dark:hover:bg-blue-700/60\",\n    indigo: \"bg-indigo-100 text-indigo-800 hover:bg-indigo-200 focus:ring-indigo-400 dark:bg-indigo-700/40 dark:text-indigo-200 dark:hover:bg-indigo-700/60\",\n    violet: \"bg-violet-100 text-violet-800 hover:bg-violet-200 focus:ring-violet-400 dark:bg-violet-700/40 dark:text-violet-200 dark:hover:bg-violet-700/60\",\n    purple: \"bg-purple-100 text-purple-800 hover:bg-purple-200 focus:ring-purple-400 dark:bg-purple-700/40 dark:text-purple-200 dark:hover:bg-purple-700/60\",\n    fuchsia: \"bg-fuchsia-100 text-fuchsia-800 hover:bg-fuchsia-200 focus:ring-fuchsia-400 dark:bg-fuchsia-700/40 dark:text-fuchsia-200 dark:hover:bg-fuchsia-700/60\",\n    pink: \"bg-pink-100 text-pink-800 hover:bg-pink-200 focus:ring-pink-400 dark:bg-pink-700/40 dark:text-pink-200 dark:hover:bg-pink-700/60\",\n    rose: \"bg-rose-100 text-rose-800 hover:bg-rose-200 focus:ring-rose-400 dark:bg-rose-700/40 dark:text-rose-200 dark:hover:bg-rose-700/60\"\n  },\n  ghost: {\n    slate: \"bg-transparent hover:bg-slate-100 text-slate-700 focus:ring-slate-400 dark:hover:bg-slate-800/30 dark:text-slate-300\",\n    gray: \"bg-transparent hover:bg-gray-100 text-gray-700 focus:ring-gray-400 dark:hover:bg-gray-800/30 dark:text-gray-300\",\n    zinc: \"bg-transparent hover:bg-zinc-100 text-zinc-700 focus:ring-zinc-400 dark:hover:bg-zinc-800/30 dark:text-zinc-300\",\n    neutral: \"bg-transparent hover:bg-neutral-100 text-neutral-700 focus:ring-neutral-400 dark:hover:bg-neutral-800/30 dark:text-neutral-300\",\n    stone: \"bg-transparent hover:bg-stone-100 text-stone-700 focus:ring-stone-400 dark:hover:bg-stone-800/30 dark:text-stone-300\",\n    red: \"bg-transparent hover:bg-red-100 text-red-700 focus:ring-red-400 dark:hover:bg-red-900/20 dark:text-red-400\",\n    orange: \"bg-transparent hover:bg-orange-100 text-orange-700 focus:ring-orange-400 dark:hover:bg-orange-900/20 dark:text-orange-400\",\n    amber: \"bg-transparent hover:bg-amber-100 text-amber-700 focus:ring-amber-400 dark:hover:bg-amber-900/20 dark:text-amber-400\",\n    yellow: \"bg-transparent hover:bg-yellow-100 text-yellow-700 focus:ring-yellow-400 dark:hover:bg-yellow-900/20 dark:text-yellow-400\",\n    lime: \"bg-transparent hover:bg-lime-100 text-lime-700 focus:ring-lime-400 dark:hover:bg-lime-900/20 dark:text-lime-400\",\n    green: \"bg-transparent hover:bg-green-100 text-green-700 focus:ring-green-400 dark:hover:bg-green-900/20 dark:text-green-400\",\n    emerald: \"bg-transparent hover:bg-emerald-100 text-emerald-700 focus:ring-emerald-400 dark:hover:bg-emerald-900/20 dark:text-emerald-400\",\n    teal: \"bg-transparent hover:bg-teal-100 text-teal-700 focus:ring-teal-400 dark:hover:bg-teal-900/20 dark:text-teal-400\",\n    cyan: \"bg-transparent hover:bg-cyan-100 text-cyan-700 focus:ring-cyan-400 dark:hover:bg-cyan-900/20 dark:text-cyan-400\",\n    sky: \"bg-transparent hover:bg-sky-100 text-sky-700 focus:ring-sky-400 dark:hover:bg-sky-900/20 dark:text-sky-400\",\n    blue: \"bg-transparent hover:bg-blue-100 text-blue-700 focus:ring-blue-400 dark:hover:bg-blue-900/20 dark:text-blue-400\",\n    indigo: \"bg-transparent hover:bg-indigo-100 text-indigo-700 focus:ring-indigo-400 dark:hover:bg-indigo-900/20 dark:text-indigo-400\",\n    violet: \"bg-transparent hover:bg-violet-100 text-violet-700 focus:ring-violet-400 dark:hover:bg-violet-900/20 dark:text-violet-400\",\n    purple: \"bg-transparent hover:bg-purple-100 text-purple-700 focus:ring-purple-400 dark:hover:bg-purple-900/20 dark:text-purple-400\",\n    fuchsia: \"bg-transparent hover:bg-fuchsia-100 text-fuchsia-700 focus:ring-fuchsia-400 dark:hover:bg-fuchsia-900/20 dark:text-fuchsia-400\",\n    pink: \"bg-transparent hover:bg-pink-100 text-pink-700 focus:ring-pink-400 dark:hover:bg-pink-900/20 dark:text-pink-400\",\n    rose: \"bg-transparent hover:bg-rose-100 text-rose-700 focus:ring-rose-400 dark:hover:bg-rose-900/20 dark:text-rose-400\"\n  }\n};\n\nexport const validColors: ColorType[] = [\n  'slate', 'gray', 'zinc', 'neutral', 'stone',\n  'red', 'orange', 'amber', 'yellow', 'lime',\n  'green', 'emerald', 'teal', 'cyan', 'sky',\n  'blue', 'indigo', 'violet', 'purple', 'fuchsia',\n  'pink', 'rose'\n];\nexport const validTypes = ['primary', 'secondary', 'success', 'warning', 'danger', 'info'];","import { defineComponent, PropType, computed } from 'vue';\nimport { ButtonType, ButtonSize, ButtonVariant, BUTTON_TYPE_MAP, validColors, variantColorMap } from './config';\n\n// 按钮组项目接口定义\nexport interface ButtonGroupItem {\n    key: string | number;\n    label?: string;\n    icon?: string;\n    srOnly?: string; // 屏幕阅读器文本\n    disabled?: boolean;\n}\n\n// ButtonGroups 组件定义\nconst ButtonGroups = defineComponent({\n    name: 'ButtonGroups',\n    props: {\n        // 按钮项数组\n        items: {\n            type: Array as PropType<ButtonGroupItem[]>,\n            required: true,\n        },\n        // 尺寸\n        size: {\n            type: String as PropType<ButtonSize>,\n            default: 'md',\n            validator: (value: string) => ['xs', 'sm', 'md', 'lg', 'xl'].includes(value),\n        },\n        // 类型/颜色\n        type: {\n            type: String as PropType<ButtonType>,\n            default: 'blue',\n        },\n        // 变体样式\n        variant: {\n            type: String as PropType<ButtonVariant>,\n            default: 'solid',\n            validator: (value: string) => ['solid', 'outline', 'soft', 'ghost'].includes(value),\n        },\n        // 方向 - 水平/垂直\n        direction: {\n            type: String as PropType<'horizontal' | 'vertical'>,\n            default: 'horizontal',\n        },\n        // 按钮间是否有间隙\n        withGap: {\n            type: Boolean,\n            default: false,\n        },\n        // 圆角样式\n        rounded: {\n            type: Boolean,\n            default: false,\n        },\n        // 选中项索引 (受控组件模式)\n        selectedIndex: {\n            type: Number,\n            default: -1,\n        },\n        // 自定义类名\n        className: {\n            type: String,\n            default: '',\n        },\n    },\n    emits: ['change'],\n    setup(props, { emit }) {\n        // 映射语义类型到实际颜色类型\n        const resolvedColorType = computed(() => {\n            return (BUTTON_TYPE_MAP as Record<string, string>)[props.type as string] || props.type;\n        });\n\n        // 获取颜色样式类\n        const getColorClass = (colorType: string) => {\n            const color = validColors.includes(colorType as any) ? colorType : 'blue';\n            return variantColorMap[props.variant][color as keyof typeof variantColorMap[typeof props.variant]];\n        };\n\n        // 尺寸样式映射\n        const sizeClasses = {\n            xs: 'text-xs px-2 py-1',\n            sm: 'text-sm px-3 py-1.5',\n            md: 'text-base px-4 py-2',\n            lg: 'text-lg px-5 py-2.5',\n            xl: 'text-xl px-6 py-3',\n        };\n\n        // 图标尺寸映射\n        const iconSizeClasses = {\n            xs: 'text-xs',\n            sm: 'text-sm',\n            md: 'text-base',\n            lg: 'text-lg',\n            xl: 'text-xl',\n        };\n\n        // 计算容器类名\n        const containerClasses = computed(() => {\n            return [\n                'inline-flex',\n                props.direction === 'horizontal' ? 'flex-row' : 'flex-col',\n                props.withGap ? 'gap-2' : '',\n                props.className,\n            ].filter(Boolean).join(' ');\n        });\n\n        // 处理按钮点击事件\n        const handleButtonClick = (index: number) => {\n            if (!props.items[index].disabled) {\n                emit('change', index === props.selectedIndex ? -1 : index);\n            }\n        };\n\n        // 渲染单个按钮\n        const renderButton = (item: ButtonGroupItem, index: number) => {\n            // 判断按钮位置 (首个、最后一个)\n            const isFirst = index === 0;\n            const isLast = index === props.items.length - 1;\n            const isSelected = index === props.selectedIndex;\n\n            // 获取颜色样式类\n            const colorClass = getColorClass(resolvedColorType.value as string);\n\n            // 间隔样式类\n            const gapClasses = {\n                horizontal: props.withGap ? 'mx-1 first:ml-0 last:mr-0' : '',\n                vertical: props.withGap ? 'my-1 first:mt-0 last:mb-0' : '',\n            };\n\n            // 圆角样式类\n            let borderRadiusClasses = '';\n            if (props.rounded) {\n                // 完全圆形按钮\n                borderRadiusClasses = 'rounded-full';\n            } else if (props.direction === 'horizontal') {\n                // 水平布局 - 连接边框处理\n                if (props.withGap) {\n                    borderRadiusClasses = 'rounded-md';\n                } else {\n                    if (isFirst) borderRadiusClasses = 'rounded-l-md';\n                    else if (isLast) borderRadiusClasses = 'rounded-r-md';\n                }\n            } else {\n                // 垂直布局 - 连接边框处理\n                if (props.withGap) {\n                    borderRadiusClasses = 'rounded-md';\n                } else {\n                    if (isFirst) borderRadiusClasses = 'rounded-t-md';\n                    else if (isLast) borderRadiusClasses = 'rounded-b-md';\n                }\n            }\n\n            // 修改选中状态样式 - 移除丑陋的边框，使用更微妙的背景和阴影效果\n            const selectedClasses = isSelected\n                ? props.variant === 'outline' || props.variant === 'ghost'\n                    ? 'bg-gray-100 dark:bg-gray-800 font-medium'\n                    : 'shadow-inner font-medium brightness-90 dark:brightness-110'\n                : '';\n\n            // 禁用状态样式\n            const disabledClasses = item.disabled\n                ? 'opacity-50 cursor-not-allowed'\n                : 'cursor-pointer';\n\n            // 组合按钮样式类，修改focus样式以避免与选中状态冲突\n            const buttonClasses = [\n                'inline-flex items-center justify-center',\n                'transition-all duration-150 ease-in-out',\n                'focus:outline-none focus:shadow-[0_0_0_2px_rgba(59,130,246,0.3)] dark:focus:shadow-[0_0_0_2px_rgba(59,130,246,0.5)]',\n                gapClasses[props.direction],\n                colorClass,\n                sizeClasses[props.size],\n                borderRadiusClasses,\n                selectedClasses,\n                disabledClasses,\n            ].filter(Boolean).join(' ');\n\n            return (\n                <button\n                    type=\"button\"\n                    key={item.key}\n                    disabled={item.disabled}\n                    class={buttonClasses}\n                    onClick={() => handleButtonClick(index)}\n                >\n                    {item.icon && (\n                        <span class={[\n                            iconSizeClasses[props.size],\n                            item.label ? (props.direction === 'horizontal' ? 'mr-2' : 'mb-1') : ''\n                        ].filter(Boolean).join(' ')}>\n                            <i class={item.icon}></i>\n                        </span>\n                    )}\n\n                    {item.label && <span>{item.label}</span>}\n\n                    {!item.label && item.srOnly && (\n                        <span class=\"sr-only\">{item.srOnly}</span>\n                    )}\n                </button>\n            );\n        };\n\n        return () => (\n            <div class={containerClasses.value} role=\"group\">\n                {props.items.map((item, index) => renderButton(item, index))}\n            </div>\n        );\n    },\n});\n\nexport default ButtonGroups;\n","// 基本用法代码示例\nexport const basicUsageCode = `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" />\n</template>\n\n<script setup>\nconst items = [\n  { key: 1, label: '选项一' },\n  { key: 2, label: '选项二' },\n  { key: 3, label: '选项三' },\n];\n</script>\n\\`\\`\\``;\n\n// 颜色设置代码示例\nexport const colorTypesCode = {\n  basic: `\\`\\`\\`vue\n<template>\n  <!-- 基础颜色 -->\n  <ButtonGroups :items=\"items\" type=\"blue\" /> <!-- 默认值 -->\n  <ButtonGroups :items=\"items\" type=\"green\" />\n  <ButtonGroups :items=\"items\" type=\"red\" />\n  <ButtonGroups :items=\"items\" type=\"purple\" />\n</template>\n\\`\\`\\``,\n  \n  semantic: `\\`\\`\\`vue\n<template>\n  <!-- 语义化颜色 -->\n  <ButtonGroups :items=\"items\" type=\"primary\" />  <!-- 映射到 indigo -->\n  <ButtonGroups :items=\"items\" type=\"success\" />  <!-- 映射到 green -->\n  <ButtonGroups :items=\"items\" type=\"warning\" />  <!-- 映射到 yellow -->\n  <ButtonGroups :items=\"items\" type=\"danger\" />   <!-- 映射到 red -->\n</template>\n\\`\\`\\``\n};\n\n// 变体样式代码示例\nexport const variantStylesCode = {\n  solid: `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" variant=\"solid\" />\n</template>\n\\`\\`\\``,\n  \n  outline: `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" variant=\"outline\" />\n</template>\n\\`\\`\\``,\n  \n  soft: `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" variant=\"soft\" />\n</template>\n\\`\\`\\``,\n  \n  ghost: `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" variant=\"ghost\" />\n</template>\n\\`\\`\\``\n};\n\n// 尺寸选项代码示例\nexport const sizeOptionsCode = `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" size=\"xs\" />\n  <ButtonGroups :items=\"items\" size=\"sm\" />\n  <ButtonGroups :items=\"items\" size=\"md\" /> <!-- 默认值 -->\n  <ButtonGroups :items=\"items\" size=\"lg\" />\n  <ButtonGroups :items=\"items\" size=\"xl\" />\n</template>\n\\`\\`\\``;\n\n// 圆角设置代码示例\nexport const roundedOptionsCode = `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" :rounded=\"false\" /> <!-- 直角 -->\n  <ButtonGroups :items=\"items\" :rounded=\"true\" />  <!-- 圆角 -->\n</template>\n\\`\\`\\``;\n\n// 状态选项代码示例\nexport const stateOptionsCode = `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" :selected-index=\"0\" />\n</template>\n\\`\\`\\``;\n\n// 带图标按钮组代码示例\nexport const withIconsCode = `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"iconItems\" />\n</template>\n\n<script setup>\nconst iconItems = [\n  { key: 1, label: '列表', icon: 'icon-[carbon--list]' },\n  { key: 2, label: '网格', icon: 'icon-[carbon--grid]' },\n  { key: 3, label: '表格', icon: 'icon-[carbon--table]' }\n];\n</script>\n\\`\\`\\``;\n\n// 交互式状态代码示例\nexport const interactiveStateCode = `\\`\\`\\`vue\n<template>\n  <div class=\"space-y-4\">\n    <ButtonGroups \n      :items=\"items\" \n      :selected-index=\"selectedIndex\"\n      @change=\"handleSelectedChange\"\n    />\n\n    <div>\n      当前选择: {{ selectedIndex >= 0 ? items[selectedIndex].label : \"无\" }}\n    </div>\n\n    <div class=\"flex space-x-2\">\n      <Button @click=\"selectedIndex = -1\">清除选择</Button>\n      <Button @click=\"selectedIndex = (selectedIndex + 1) % items.length\">\n        选择下一项\n      </Button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\nconst items = [\n  { key: 1, label: \"选项 1\" },\n  { key: 2, label: \"选项 2\" },\n  { key: 3, label: \"选项 3\" },\n];\n\nconst selectedIndex = ref(0);\n\nconst handleSelectedChange = (index) => {\n  selectedIndex.value = index;\n};\n</script>\n\\`\\`\\``;\n\n// 禁用状态代码示例\nexport const disabledItemsCode = `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"disabledItems\" />\n</template>\n\n<script setup>\nconst disabledItems = [\n  { key: 1, label: \"选项 1\" },\n  { key: 2, label: \"选项 2\", disabled: true },\n  { key: 3, label: \"选项 3\" },\n];\n</script>\n\\`\\`\\``;\n\n// 组合使用案例\nexport const combinationExampleCode = `\\`\\`\\`vue\n<template>\n  <ButtonGroups \n    :items=\"viewModeItems\"\n    type=\"primary\"\n    variant=\"soft\"\n    :selected-index=\"selected\"\n    @change=\"selected = $event\"\n  />\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\nconst viewModeItems = [\n  { key: \"list\", label: \"列表\", icon: \"icon-[carbon--list]\" },\n  { key: \"grid\", label: \"网格\", icon: \"icon-[carbon--grid]\" },\n  { key: \"table\", label: \"表格\", icon: \"icon-[carbon--table]\" }\n];\n\nconst selected = ref(0);\n</script>\n\\`\\`\\``;\n","<template>\n    <div class=\"container mx-auto px-4 py-8 text-gray-900 dark:text-white\">\n        <h1 class=\"mb-8 text-3xl font-bold\">ButtonGroups 按钮组组件</h1>\n\n        <!-- 基础用法 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">基础用法</h2>\n            <p class=\"text-gray-600 dark:text-gray-400 mb-4\">\n                按钮组组件可用于将相关操作分组展示，支持水平和垂直排列、多种尺寸、颜色和样式变体。\n            </p>\n\n            <!-- 基本用法 -->\n            <div class=\"bg-gray-50 dark:bg-gray-800 rounded-lg mb-6\">\n                <CodePreview :code=\"basicUsageCode\">\n                    <div class=\"p-6\">\n                        <h2 class=\"text-lg font-medium mb-3\">基本用法</h2>\n                        <p class=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                            最简单的按钮组用法，通过传入 items 数组来生成按钮组。\n                        </p>\n                        <div class=\"flex flex-wrap items-center gap-4\">\n                            <ButtonGroups :items=\"basicItems\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n\n            <!-- 图标按钮组 -->\n            <div class=\"bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                <CodePreview :code=\"withIconsCode\">\n                    <div class=\"p-6\">\n                        <h2 class=\"text-lg font-medium mb-3\">图标按钮组</h2>\n                        <p class=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                            通过设置 icon 属性创建只有图标的按钮组，可以用 srOnly 添加屏幕阅读器文本。\n                        </p>\n                        <div class=\"flex flex-wrap items-center gap-4\">\n                            <ButtonGroups :items=\"iconItems\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n        </section>\n\n        <!-- 不同尺寸 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">尺寸（Size）</h2>\n            <p class=\"text-gray-600 dark:text-gray-400 mb-4\">\n                通过 size 属性设置按钮组的尺寸，支持 xs、sm、md、lg、xl 五种尺寸。\n            </p>\n            <CodePreview :code=\"sizeOptionsCode\">\n                <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\n                    <div class=\"flex flex-col items-start gap-4\">\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-10 text-sm\">xs:</span>\n                            <ButtonGroups :items=\"basicItems\" size=\"xs\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-10 text-sm\">sm:</span>\n                            <ButtonGroups :items=\"basicItems\" size=\"sm\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-10 text-sm\">md:</span>\n                            <ButtonGroups :items=\"basicItems\" size=\"md\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-10 text-sm\">lg:</span>\n                            <ButtonGroups :items=\"basicItems\" size=\"lg\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-10 text-sm\">xl:</span>\n                            <ButtonGroups :items=\"basicItems\" size=\"xl\" />\n                        </div>\n                    </div>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 不同颜色 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">颜色（Colors）</h2>\n            <p class=\"text-gray-600 dark:text-gray-400 mb-4\">\n                通过 type 属性设置按钮组的颜色，支持多种颜色选项和语义化颜色类型。\n            </p>\n\n            <!-- 基础颜色 -->\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg mb-6\">\n                <CodePreview :code=\"colorTypesCode.basic\" :initiallyExpanded=\"false\">\n                    <h3 class=\"text-md font-medium mb-3\">基础颜色</h3>\n                    <div class=\"flex flex-col items-start gap-4\">\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">blue:</span>\n                            <ButtonGroups :items=\"basicItems\" type=\"blue\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">green:</span>\n                            <ButtonGroups :items=\"basicItems\" type=\"green\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">red:</span>\n                            <ButtonGroups :items=\"basicItems\" type=\"red\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">purple:</span>\n                            <ButtonGroups :items=\"basicItems\" type=\"purple\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n\n            <!-- 语义化颜色 -->\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\n                <CodePreview :code=\"colorTypesCode.semantic\" :initiallyExpanded=\"false\">\n                    <h3 class=\"text-md font-medium mb-3\">语义化颜色</h3>\n                    <div class=\"flex flex-col items-start gap-4\">\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">primary:</span>\n                            <ButtonGroups :items=\"basicItems\" type=\"primary\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">success:</span>\n                            <ButtonGroups :items=\"basicItems\" type=\"success\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">warning:</span>\n                            <ButtonGroups :items=\"basicItems\" type=\"warning\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">danger:</span>\n                            <ButtonGroups :items=\"basicItems\" type=\"danger\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n        </section>\n\n        <!-- 不同变体 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">变体样式（Variants）</h2>\n            <p class=\"text-gray-600 dark:text-gray-400 mb-4\">\n                通过 variant 属性设置按钮组的变体样式，支持 solid、outline、soft、ghost 四种样式。\n            </p>\n\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg mb-4\">\n                <CodePreview :code=\"variantStylesCode.solid\">\n                    <div class=\"flex flex-col items-start gap-4\">\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">solid:</span>\n                            <ButtonGroups :items=\"basicItems\" variant=\"solid\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg mb-4\">\n                <CodePreview :code=\"variantStylesCode.outline\">\n                    <div class=\"flex flex-col items-start gap-4\">\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">outline:</span>\n                            <ButtonGroups :items=\"basicItems\" variant=\"outline\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg mb-4\">\n                <CodePreview :code=\"variantStylesCode.soft\">\n                    <div class=\"flex flex-col items-start gap-4\">\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">soft:</span>\n                            <ButtonGroups :items=\"basicItems\" variant=\"soft\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\n                <CodePreview :code=\"variantStylesCode.ghost\">\n                    <div class=\"flex flex-col items-start gap-4\">\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"inline-block w-16 text-sm\">ghost:</span>\n                            <ButtonGroups :items=\"basicItems\" variant=\"ghost\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n        </section>\n\n        <!-- 布局选项 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">布局选项（Layout Options）</h2>\n\n            <!-- 带有间隙的按钮组 -->\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg mb-6\">\n                <CodePreview :code=\"withGapCode\" :initiallyExpanded=\"false\">\n                    <h3 class=\"text-md font-medium mb-3\">带有间隙的按钮组</h3>\n                    <p class=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                        通过设置 with-gap 属性为 true 可以让按钮之间有间隙。\n                    </p>\n                    <div class=\"flex flex-col items-start gap-4\">\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"text-sm\">无间隙:</span>\n                            <ButtonGroups :items=\"basicItems\" />\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                            <span class=\"text-sm\">有间隙:</span>\n                            <ButtonGroups :items=\"basicItems\" :with-gap=\"true\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n\n            <!-- 垂直方向按钮组 -->\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\n                <CodePreview :code=\"verticalDirectionCode\" :initiallyExpanded=\"false\">\n                    <h3 class=\"text-md font-medium mb-3\">垂直方向按钮组</h3>\n                    <p class=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                        通过设置 direction 属性为 'vertical' 可以创建垂直排列的按钮组。\n                    </p>\n                    <div class=\"flex flex-wrap items-start gap-72\">\n                        <div class=\"flex flex-col items-center\">\n                            <span class=\"text-sm mb-2\">垂直无间隙:</span>\n                            <ButtonGroups :items=\"basicItems\" direction=\"vertical\" />\n                        </div>\n                        <div class=\"flex flex-col items-center\">\n                            <span class=\"text-sm mb-2\">垂直有间隙:</span>\n                            <ButtonGroups :items=\"basicItems\" direction=\"vertical\" :with-gap=\"true\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n\n\n            <!-- 圆角按钮组 -->\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\n                <CodePreview :code=\"roundedOptionsCode\">\n                    <h3 class=\"text-md font-medium mb-3\">圆角按钮组</h3>\n                    <p class=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                        通过设置 rounded 属性可以创建圆形或更圆润的按钮。对图标按钮特别有用。\n                    </p>\n                    <div class=\"flex flex-wrap items-center gap-8\">\n                        <div class=\"flex flex-col items-center\">\n                            <span class=\"text-sm mb-2\">普通按钮组:</span>\n                            <ButtonGroups :items=\"iconItems\" />\n                        </div>\n                        <div class=\"flex flex-col items-center\">\n                            <span class=\"text-sm mb-2\">圆角按钮组:</span>\n                            <ButtonGroups :items=\"iconItems\" :rounded=\"true\" />\n                        </div>\n                        <div class=\"flex flex-col items-center\">\n                            <span class=\"text-sm mb-2\">圆角 + 间隙:</span>\n                            <ButtonGroups :items=\"iconItems\" :rounded=\"true\" :with-gap=\"true\" />\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n\n\n        </section>\n\n        <!-- 交互 - 受控按钮组 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">交互与状态管理</h2>\n\n            <!-- 受控按钮组 -->\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg mb-6\">\n                <CodePreview :code=\"interactiveStateCode\">\n                    <h3 class=\"text-md font-medium mb-3\">受控按钮组</h3>\n                    <p class=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                        通过 selected-index 属性和 change 事件可以实现对按钮组选中状态的完全控制。\n                    </p>\n                    <div class=\"flex flex-col items-start gap-4\">\n                        <ButtonGroups :items=\"basicItems\" :selected-index=\"selectedIndex\"\n                            @change=\"handleSelectedChange\" />\n                        <div class=\"text-sm p-2 border border-gray-200 dark:border-gray-700 rounded\">\n                            当前选中项: <strong>{{ selectedIndex !== -1 ? basicItems[selectedIndex].label : '无' }}</strong>\n                        </div>\n                        <div class=\"flex gap-2\">\n                            <button @click=\"selectedIndex = (selectedIndex + 1) % basicItems.length\"\n                                class=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-700 rounded hover:bg-gray-300 dark:hover:bg-gray-600\">\n                                切换下一项\n                            </button>\n                            <button @click=\"selectedIndex = -1\"\n                                class=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-700 rounded hover:bg-gray-300 dark:hover:bg-gray-600\">\n                                清除选择\n                            </button>\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n\n            <!-- 禁用状态和动态状态控制 -->\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\n                <CodePreview :code=\"disabledItemsCode\">\n                    <h3 class=\"text-md font-medium mb-3\">禁用状态和动态状态控制</h3>\n                    <p class=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                        ButtonGroups 可以通过设置项目的 disabled 属性来禁用特定的按钮。\n                    </p>\n\n                    <div class=\"flex flex-col gap-4\">\n                        <ButtonGroups :items=\"disabledButtonItems\" variant=\"solid\" type=\"blue\"\n                            :selected-index=\"disabledSelectedIndex\" @change=\"handleDisabledChange\" />\n\n                        <div class=\"flex flex-wrap gap-2\">\n                            <button v-for=\"(item, index) in disabledButtonItems\" :key=\"item.key\"\n                                @click=\"toggleButtonDisabled(index)\"\n                                class=\"px-3 py-1 text-xs bg-gray-200 dark:bg-gray-700 rounded hover:bg-gray-300 dark:hover:bg-gray-600\">\n                                {{ item.disabled ? '启用' : '禁用' }} \"{{ item.label }}\"\n                            </button>\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n        </section>\n\n        <!-- 实际应用场景 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">实际应用场景</h2>\n\n            <div class=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\n                <CodePreview :code=\"combinationExampleCode\" :initiallyExpanded=\"false\">\n                    <h3 class=\"text-md font-medium mb-3\">视图切换器</h3>\n                    <p class=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                        结合按钮组和其他组件，实现实际应用中的交互功能。\n                    </p>\n\n                    <div class=\"flex flex-col gap-4\">\n                        <div class=\"border border-gray-200 dark:border-gray-700 p-4 rounded-lg\">\n                            <h4 class=\"text-sm font-medium mb-3\">数据视图切换</h4>\n\n                            <ButtonGroups :items=\"viewModeItems\" variant=\"soft\" type=\"primary\"\n                                :rounded=\"viewModeItems.every(item => item.icon)\" :selected-index=\"viewModeIndex\"\n                                @change=\"handleViewModeChange\" />\n\n                            <div class=\"mt-4 p-4 bg-gray-100 dark:bg-gray-700 rounded\">\n                                <div v-if=\"viewModeIndex === 0\" class=\"flex flex-col gap-2\">\n                                    <div v-for=\"i in 3\" :key=\"i\"\n                                        class=\"flex items-center p-2 bg-white dark:bg-gray-800 rounded\">\n                                        <div\n                                            class=\"w-6 h-6 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center text-xs\">\n                                            {{ i }}\n                                        </div>\n                                        <div class=\"ml-2\">列表项 {{ i }}</div>\n                                    </div>\n                                </div>\n\n                                <div v-else-if=\"viewModeIndex === 1\" class=\"grid grid-cols-3 gap-2\">\n                                    <div v-for=\"i in 3\" :key=\"i\"\n                                        class=\"p-2 bg-white dark:bg-gray-800 rounded flex flex-col items-center\">\n                                        <div\n                                            class=\"w-6 h-6 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center text-xs\">\n                                            {{ i }}\n                                        </div>\n                                        <div class=\"mt-1 text-xs\">卡片 {{ i }}</div>\n                                    </div>\n                                </div>\n\n                                <div v-else class=\"flex flex-col\">\n                                    <div class=\"grid grid-cols-3 border-b border-gray-300 dark:border-gray-600 p-2\">\n                                        <div class=\"font-medium text-xs\">ID</div>\n                                        <div class=\"font-medium text-xs\">名称</div>\n                                        <div class=\"font-medium text-xs\">状态</div>\n                                    </div>\n                                    <div v-for=\"i in 3\" :key=\"i\"\n                                        class=\"grid grid-cols-3 border-b border-gray-200 dark:border-gray-700 p-2 text-xs\">\n                                        <div>{{ i }}</div>\n                                        <div>项目 {{ i }}</div>\n                                        <div>活跃</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n        </section>\n\n        <!-- API 文档部分和最佳实践部分保留原样 -->\n        <section class=\"mb-10\">\n            <h2 class=\"text-xl font-semibold mb-4\">组件API</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">属性 (Props)</h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">属性名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">类型</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">默认值</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">items</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">ButtonGroupItem[]</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">按钮组的项目数组，每个项目应包含 key 和 label 或\n                                    icon</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">size</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'xs' | 'sm' | 'md' | 'lg' | 'xl'\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'md'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">按钮组尺寸</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">type</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">ButtonType</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'blue'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">按钮组颜色类型，可使用语义化值或具体颜色值</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">variant</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'solid' | 'outline' | 'soft' |\n                                    'ghost'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'solid'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">按钮组样式变体</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">direction</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'horizontal' | 'vertical'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'horizontal'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">按钮组方向，水平或垂直</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">withGap</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">按钮之间是否有间隔</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">rounded</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否使用圆角样式，对图标按钮效果最佳</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">selectedIndex</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">number</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-1</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">当前选中项的索引，-1 表示无选中项</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">className</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义 CSS 类名</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">ButtonGroupItem 类型</h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">属性名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">类型</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">必填</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">key</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string | number</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">按钮的唯一标识符</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">label</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">否</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">按钮显示的文本</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">icon</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">否</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">按钮图标的类名，支持任何图标库</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">srOnly</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">否</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">仅限屏幕阅读器的辅助文本，提高无障碍访问性</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">disabled</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">否</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否禁用按钮</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">事件 (Events)</h3>\n                <div class=\"overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">事件名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">回调参数</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">change</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">(index: number)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">当选中项改变时触发，参数为新选中项的索引，如果取消选中则为 -1\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section>\n\n        <!-- 小结与最佳实践 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">小结与最佳实践</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <div class=\"space-y-4\">\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        ButtonGroups 组件是一个多功能的分组控件，适用于导航、筛选和工具栏等场景。它提供了一种视觉上连贯的方式来呈现相关操作，\n                        同时支持多种样式变体、尺寸和布局选项。以下是一些使用建议：\n                    </p>\n\n                    <ul class=\"ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300\">\n                        <li>\n                            <strong>明确的语义化分组</strong>：仅将相关功能的按钮放在一起组成按钮组，例如\n                            <div class=\"inline-flex mt-1\">\n                                <ButtonGroups\n                                    :items=\"[{ key: 'bold', icon: 'icon-[material-symbols--format-bold]', srOnly: '加粗' }, { key: 'italic', icon: 'icon-[material-symbols--format-italic]', srOnly: '斜体' }]\"\n                                    size=\"xs\" variant=\"soft\" />\n                            </div>\n                            用于文本格式化工具\n                        </li>\n                        <li>\n                            <strong>根据界面需求选择合适的变体</strong>：在主要操作区域可使用\n                            <ButtonGroups :items=\"[{ key: 'solid', label: 'solid' }]\" size=\"xs\" variant=\"solid\"\n                                class=\"inline-flex ml-1 mr-1\" />\n                            样式，而在次要区域可使用\n                            <ButtonGroups :items=\"[{ key: 'ghost', label: 'ghost' }]\" size=\"xs\" variant=\"ghost\"\n                                class=\"inline-flex ml-1\" />\n                            样式\n                        </li>\n                        <li>\n                            <strong>使用合适的尺寸</strong>：根据页面整体布局选择合适的尺寸，例如在紧凑的界面中使用\n                            <ButtonGroups :items=\"[{ key: 'sm', label: 'sm' }]\" size=\"xs\" class=\"inline-flex ml-1\" />\n                            或\n                            <ButtonGroups :items=\"[{ key: 'xs', label: 'xs' }]\" size=\"xs\" class=\"inline-flex ml-1\" />\n                        </li>\n                        <li>\n                            <strong>图标与文本结合</strong>：在空间允许的情况下，结合图标和文本以提高可用性，如\n                            <ButtonGroups\n                                :items=\"[{ key: 'home', label: '首页', icon: 'icon-[material-symbols--home-outline]' }]\"\n                                size=\"xs\" variant=\"soft\" class=\"inline-flex ml-1\" />\n                        </li>\n                        <li>\n                            <strong>合理使用选中状态</strong>：利用 <code\n                                class=\"bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-800\">selectedIndex</code> 和 <code\n                                class=\"bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-800\">change</code> 事件实现交互式体验\n                        </li>\n                    </ul>\n\n                    <div\n                        class=\"rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20\">\n                        <h4 class=\"mb-2 flex items-center text-blue-800 dark:text-blue-300\">\n                            <span class=\"icon-[material-symbols--info-outline-rounded] mr-2 h-5 w-5\"></span>\n                            无障碍提示\n                        </h4>\n                        <p class=\"text-sm text-blue-700 dark:text-blue-300\">\n                            当使用仅有图标的按钮时，请确保添加 <code\n                                class=\"rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60\">srOnly</code>\n                            属性以提供屏幕阅读器文本。\n                            组件已配置了适当的 ARIA 角色（role=\"group\"），以确保正确的语义化结构。\n                        </p>\n                    </div>\n\n                    <div\n                        class=\"rounded-lg border border-amber-100 bg-amber-50 p-4 dark:border-amber-900 dark:bg-amber-900/20\">\n                        <h4 class=\"mb-2 flex items-center text-amber-800 dark:text-amber-300\">\n                            <span class=\"icon-[material-symbols--tips-and-updates-outline-rounded] mr-2 h-5 w-5\"></span>\n                            性能提示\n                        </h4>\n                        <p class=\"text-sm text-amber-700 dark:text-amber-300\">\n                            当动态更新 <code\n                                class=\"rounded bg-amber-100 px-1 py-0.5 font-mono dark:bg-amber-800/60\">items</code>\n                            数组时，\n                            Vue 会重新渲染整个按钮组。如果您有大量动态按钮组，请确保为每个按钮项提供唯一且稳定的 <code\n                                class=\"rounded bg-amber-100 px-1 py-0.5 font-mono dark:bg-amber-800/60\">key</code>，\n                            以帮助 Vue 的虚拟 DOM 算法优化更新过程。\n                        </p>\n                    </div>\n\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        ButtonGroups 组件已针对深色模式进行了优化，搭配我们的主题系统使用时无需额外配置。通过合理使用这个组件，\n                        您可以创建出既美观又实用的用户界面元素，提升整体用户体验。\n                    </p>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport ButtonGroups from './ButtonGroups';\nimport Button from '../Button/Button';\nimport CodePreview from '../../components/CodePreview';\nimport type { ButtonGroupItem } from './ButtonGroups';\nimport {\n    basicUsageCode,\n    colorTypesCode,\n    variantStylesCode,\n    sizeOptionsCode,\n    roundedOptionsCode,\n    withIconsCode,\n    interactiveStateCode,\n    disabledItemsCode,\n    combinationExampleCode\n} from './code';\n\n// 自定义代码示例\nconst withGapCode = `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" />\n  <ButtonGroups :items=\"items\" :with-gap=\"true\" />\n</template>\n\\`\\`\\``;\n\nconst verticalDirectionCode = `\\`\\`\\`vue\n<template>\n  <ButtonGroups :items=\"items\" direction=\"vertical\" />\n  <ButtonGroups :items=\"items\" direction=\"vertical\" :with-gap=\"true\" />\n</template>\n\\`\\`\\``;\n\n// 基础按钮组数据\nconst basicItems: ButtonGroupItem[] = [\n    { key: 1, label: '年度' },\n    { key: 2, label: '月度' },\n    { key: 3, label: '日期' },\n];\n\n// 图标按钮组数据\nconst iconItems: ButtonGroupItem[] = [\n    {\n        key: 'prev',\n        icon: 'icon-[material-symbols--chevron-left-rounded]',\n        srOnly: '上一页'\n    },\n    {\n        key: 'next',\n        icon: 'icon-[material-symbols--chevron-right-rounded]',\n        srOnly: '下一页'\n    },\n];\n\n// 受控模式\nconst selectedIndex = ref(0);\n\nconst handleSelectedChange = (index: number) => {\n    selectedIndex.value = index;\n};\n\n// 新增：禁用状态演示\nconst disabledButtonItems = ref<ButtonGroupItem[]>([\n    { key: 'option1', label: '选项一', disabled: false },\n    { key: 'option2', label: '选项二', disabled: true },  // 初始禁用\n    { key: 'option3', label: '选项三', disabled: false }\n]);\nconst disabledSelectedIndex = ref(0);\n\nconst toggleButtonDisabled = (index: number) => {\n    disabledButtonItems.value[index].disabled = !disabledButtonItems.value[index].disabled;\n};\n\nconst handleDisabledChange = (index: number) => {\n    disabledSelectedIndex.value = index;\n};\n\n// 新增：实际应用场景 - 视图切换\nconst viewModeItems: ButtonGroupItem[] = [\n    { key: 'list', label: '列表视图', icon: 'icon-[material-symbols--format-list-bulleted]' },\n    { key: 'card', label: '卡片视图', icon: 'icon-[material-symbols--grid-view]' },\n    { key: 'table', label: '表格视图', icon: 'icon-[material-symbols--table-rows]' }\n];\nconst viewModeIndex = ref(0);\n\nconst handleViewModeChange = (index: number) => {\n    viewModeIndex.value = index;\n};\n</script>\n"],"names":["BUTTON_TYPE_MAP","variantColorMap","validColors","ButtonGroups","defineComponent","name","props","items","type","Array","required","size","String","default","validator","value","includes","variant","direction","withGap","Boolean","rounded","selectedIndex","Number","className","emits","setup","emit","resolvedColorType","computed","getColorClass","colorType","color","sizeClasses","xs","sm","md","lg","xl","iconSizeClasses","containerClasses","filter","join","handleButtonClick","index","disabled","renderButton","item","isFirst","isLast","length","isSelected","colorClass","gapClasses","horizontal","vertical","borderRadiusClasses","selectedClasses","disabledClasses","buttonClasses","_createVNode","key","onClick","icon","label","srOnly","map","basicUsageCode","colorTypesCode","variantStylesCode","sizeOptionsCode","roundedOptionsCode","withIconsCode","interactiveStateCode","disabledItemsCode","combinationExampleCode","withGapCode","verticalDirectionCode","basicItems","iconItems","ref","handleSelectedChange","disabledButtonItems","disabledSelectedIndex","toggleButtonDisabled","handleDisabledChange","viewModeItems","viewModeIndex","handleViewModeChange"],"mappings":"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"}