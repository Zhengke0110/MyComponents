import{d as J,r as h,c as L,o as Q,a as yt,w as j,b as v,I as P,e as X,f as A,g as a,l as xt,F as Y,h as G,x as B,j as z,p as vt,t as p,i as F,m as M,_ as pt}from"./index-BSjwMPY1.js";const mt=t=>{if(!t||t.length===0)return[];const s=[];for(const r of t){if(!(r instanceof HTMLElement)){console.warn("Non-HTMLElement found in itemElements, skipping...");continue}s.push(...Array.from(r.querySelectorAll("img")))}return s},ht=t=>{if(!Array.isArray(t))throw new Error("Input must be an array of HTMLImageElement");return t.length===0?[]:t.map(s=>s.src)},ft=t=>{if(t.length===0)return Promise.resolve([]);const s=t.map((r,m)=>new Promise((u,g)=>{const c=new Image;c.src=r,c.onload=()=>{u({img:r,index:m})},c.onerror=c.onabort=()=>{g(new Error(`Failed to load image: ${r}`))}}));return Promise.all(s).catch(r=>{throw console.error("Error loading images:",r),r})},bt=t=>{if(typeof t!="object"||t===null)throw new Error("Input must be a non-null object");const s=Object.values(t).filter(r=>typeof r=="number");return s.length===0?null:Math.min(...s)},kt=t=>{const s=Object.values(t).filter(Number.isFinite);return s.length===0?0:Math.max(...s)},Z=t=>{if(Object.keys(t).length===0)return;let s=1/0;for(const r in t)if(t.hasOwnProperty(r)){const m=t[r];if(typeof m!="number")throw new Error("Invalid height value, expected a number");m<s&&(s=m)}for(const r in t)if(t.hasOwnProperty(r)&&t[r]===s)return r};var N=(t=>(t.DEFAULT="default",t.BALANCED="balanced",t.COMPACT="compact",t))(N||{});const wt=(t,s)=>{const r={};let m=0;Object.values(t).forEach(y=>{m+=y});const u=m/Object.keys(t).length;for(const y in t)if(t.hasOwnProperty(y)){const w=t[y]+s;r[y]=Math.abs(w-u)}let g=Object.keys(t)[0],c=r[g];for(const y in r)r[y]<c&&(c=r[y],g=y);return g},_t=(t,s,r,m)=>{const u=Z(t)||"0",g=t[u];return{column:u,left:parseInt(u)*s,top:g}},Ct=()=>"IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype,St=(t,s)=>{let r=0;return(...m)=>{const u=Date.now();if(!(u-r<s))return r=u,t(...m)}},Et=(t,s=0)=>new Promise(r=>{const m=Array.from(t.querySelectorAll("img"));if(m.length===0){r(t.offsetHeight||s);return}const u=m.map(g=>new Promise(c=>{g.complete?c():(g.onload=()=>c(),g.onerror=()=>c())}));Promise.all(u).then(()=>{setTimeout(()=>{r(t.offsetHeight||s)},10)})}),T=J({name:"Waterfall",props:{data:{type:Array,required:!0},nodeKey:{type:String,required:!0},column:{type:Number,default:2},columnSpacing:{type:Number,default:20},rowSpacing:{type:Number,default:20},picturePreReading:{type:Boolean,default:!0},animation:{type:Boolean,default:!0},layoutAlgorithm:{type:String,default:N.DEFAULT,validator:t=>Object.values(N).includes(t)},virtualScroll:{type:Boolean,default:!1},virtualScrollBuffer:{type:Number,default:5},responsive:{type:Array,default:()=>[]},resizeDebounceTime:{type:Number,default:200},loadingClass:{type:String,default:""},emptyClass:{type:String,default:""},maxHeight:{type:[String,Number],default:null}},emits:["item-rendered","layout-complete","resize","visible-items-change","error"],setup(t,{slots:s,emit:r,expose:m}){const u=h(0),g=h({}),c=h(null),y=h(0),w=h(0),f=h(0);let _=[];const S=h(!1),C=h(new Set),x=h(null),o=h(!1),l=L(()=>o.value&&t.data.length===0);let b=null;const k=L(()=>{var e;return((e=x.value)==null?void 0:e.column)||t.column}),E=L(()=>{var e;return((e=x.value)==null?void 0:e.columnSpacing)!==void 0?x.value.columnSpacing:t.columnSpacing}),tt=L(()=>{var e;return((e=x.value)==null?void 0:e.rowSpacing)!==void 0?x.value.rowSpacing:t.rowSpacing}),et=L(()=>(k.value-1)*E.value),V=()=>{const e={};for(let d=0;d<k.value;d++)e[d]=0;g.value=e},at=()=>{if(!c.value)return;const e=getComputedStyle(c.value,null),d=parseFloat(e.paddingLeft),i=parseFloat(e.paddingRight);w.value=d,y.value=c.value.offsetWidth-d-i,dt()},dt=()=>{if(!t.responsive||t.responsive.length===0)return;let e=null;const d=[...t.responsive].sort((i,n)=>n.width-i.width);for(const i of d)if(y.value<=i.width)e=i;else break;e&&(!x.value||x.value.column!==e.column||x.value.columnSpacing!==e.columnSpacing||x.value.rowSpacing!==e.rowSpacing)?(x.value=e,P(()=>{H()})):!e&&x.value&&(x.value=null,P(()=>{H()}))},R=()=>{at(),f.value=(y.value-et.value)/k.value},rt=e=>{switch(t.layoutAlgorithm){case N.BALANCED:const d=wt(g.value,_[e]);return{left:parseInt(d)*(f.value+E.value)+w.value,top:g.value[d],column:d};case N.COMPACT:const i=_t(g.value,f.value,_[e],y.value);return{left:i.left+w.value,top:i.top,column:i.column};case N.DEFAULT:default:const n=Z(g.value);return n?{left:parseInt(n)*(f.value+E.value)+w.value,top:bt(g.value)??0,column:n}:{left:w.value,top:0,column:"0"}}},st=(e,d)=>{g.value[d]+=_[e]+tt.value},D=()=>{S.value=!0;try{[...t.data].forEach((d,i)=>{if(d._style)return;d._style={left:0,top:0,width:f.value};const n=rt(i);d._style.left=n.left,d._style.top=n.top,d._style.height=_[i],st(i,n.column),r("item-rendered",{item:d,index:i,position:n})}),u.value=kt(g.value)+50,r("layout-complete",{containerHeight:u.value,itemsCount:t.data.length,columnHeights:{...g.value}})}catch(e){console.error("Layout calculation error:",e),r("error",{type:"layout",message:"Failed to calculate layout",error:e})}finally{S.value=!1}},O=async()=>{_=[];const e=Array.from(document.getElementsByClassName("m-waterfall-item"));if(e.length!==0){o.value=!0;try{for(const d of e){const i=await Et(d,100);_.push(i)}D()}catch(d){console.error("Error calculating item heights:",d),r("error",{type:"height-calculation",message:"Failed to calculate item heights",error:d})}finally{o.value=!1}}},W=()=>{_=[];const e=Array.from(document.getElementsByClassName("m-waterfall-item"));if(e.length!==0){o.value=!0;try{const d=mt(e),i=ht(d);ft(i).then(()=>{e.forEach(n=>{_.push(n.offsetHeight)}),D(),o.value=!1}).catch(n=>{console.error("Error loading images:",n),e.forEach(I=>{_.push(I.offsetHeight)}),D(),o.value=!1,r("error",{type:"image-loading",message:"Failed to load some images",error:n})})}catch(d){console.error("Error in image preloading:",d),o.value=!1,r("error",{type:"image-preloading",message:"Error setting up image preloading",error:d})}}},$=()=>{if(!t.virtualScroll||!Ct()||!c.value)return;b&&b.disconnect(),b=new IntersectionObserver(d=>{d.forEach(i=>{const n=parseInt(i.target.getAttribute("data-index")||"-1");n>=0&&(i.isIntersecting?C.value.add(n):i.intersectionRatio===0&&C.value.delete(n))}),r("visible-items-change",Array.from(C.value))},{root:null,rootMargin:`${t.virtualScrollBuffer*100}px`,threshold:0}),Array.from(document.getElementsByClassName("m-waterfall-item")).forEach(d=>{b.observe(d)})},K=St(()=>{R(),r("resize",{width:y.value,height:u.value})},t.resizeDebounceTime),H=async()=>new Promise(e=>{S.value=!0;try{R(),t.data.forEach(d=>{d._style=void 0}),u.value=0,V(),C.value.clear(),P(()=>{setTimeout(()=>{t.picturePreReading?W():O(),t.virtualScroll&&$(),S.value=!1,e()},t.animation?300:0)})}catch(d){console.error("Error resetting waterfall:",d),S.value=!1,r("error",{type:"reset",message:"Failed to reset waterfall layout",error:d}),e()}}),lt=async e=>{e<0||e>=t.data.length||!t.data[e]||(t.data[e]._style=void 0,await H())},ot=()=>{window.addEventListener("resize",K)},it=()=>{window.removeEventListener("resize",K)},nt=()=>({containerWidth:y.value,containerHeight:u.value,columnWidth:f.value,columns:k.value,columnHeights:{...g.value}});Q(()=>{R(),ot()}),yt(()=>{t.data.forEach(e=>{delete e._style}),b&&(b.disconnect(),b=null),it()}),j(()=>t.data,e=>{if(e.length===0){u.value=0;return}P(()=>{e.every(i=>!i._style)&&V(),t.picturePreReading?W():O(),t.virtualScroll&&P(()=>{$()})})},{deep:!0,immediate:!0}),j(()=>k.value,()=>{c.value&&(t.picturePreReading&&(f.value=0),H())}),j(()=>t.virtualScroll,e=>{e?P(()=>{$()}):b&&(b.disconnect(),b=null)}),m({reset:H,refreshItem:lt,getLayoutInfo:nt,containerRef:c});const ct=e=>{if(!t.virtualScroll||C.value.size===0||C.value.has(e))return!0;const d=Array.from(C.value);if(d.length===0)return!0;const i=Math.min(...d),n=Math.max(...d),I=t.virtualScrollBuffer;return e>=i-I&&e<=n+I},gt=()=>t.loadingClass&&s.loading?s.loading():v("div",{class:"flex items-center justify-center p-4"},[v("div",{class:"animate-pulse flex space-x-4"},[v("div",{class:"rounded-full bg-slate-200 h-10 w-10"},null),v("div",{class:"flex-1 space-y-6 py-1"},[v("div",{class:"h-2 bg-slate-200 rounded"},null),v("div",{class:"space-y-3"},[v("div",{class:"grid grid-cols-3 gap-4"},[v("div",{class:"h-2 bg-slate-200 rounded col-span-2"},null),v("div",{class:"h-2 bg-slate-200 rounded col-span-1"},null)])])])])]),ut=()=>t.emptyClass&&s.empty?s.empty():v("div",{class:"flex items-center justify-center p-6 text-gray-500"},[X("暂无数据")]);return()=>{var d;const e={height:`${u.value}px`,minHeight:t.data.length===0?"100px":"auto",overflow:t.maxHeight?"auto":"hidden"};return t.maxHeight&&(e.maxHeight=typeof t.maxHeight=="number"?`${t.maxHeight}px`:t.maxHeight),v("div",{class:"relative waterfall-component",ref:c,style:e},[l.value&&gt(),t.data.length===0&&!l.value&&ut(),f.value>0&&t.data.length>0&&v("div",{class:"waterfall-items-container"},[t.data.map((i,n)=>{var I,U,q;return ct(n)&&v("div",{key:t.nodeKey?i[t.nodeKey]:n,class:["m-waterfall-item absolute",{"transition-all duration-300 ease-in-out":t.animation,"hover:shadow-lg":t.animation,"opacity-0":!i._style}],style:{width:`${f.value}px`,left:`${((I=i._style)==null?void 0:I.left)??0}px`,top:`${((U=i._style)==null?void 0:U.top)??0}px`,transform:i._style?"translateY(0)":"translateY(20px)",opacity:i._style?1:0,visibility:i._style?"visible":"hidden",backfaceVisibility:"hidden",willChange:t.animation?"transform, opacity":"auto",transformOrigin:"center center"},"data-index":n},[(q=s.default)==null?void 0:q.call(s,{item:i,width:f.value,index:n,isVisible:C.value.has(n)})],14,["data-index"])})]),s.footer&&!o.value&&t.data.length>0&&v("div",{class:"waterfall-footer",style:{position:"relative",marginTop:`${u.value}px`}},[s.footer()]),o.value&&t.data.length>0&&v("div",{class:"absolute inset-0 bg-white bg-opacity-60 flex items-center justify-center"},[((d=s.loadingOverlay)==null?void 0:d.call(s))||v("div",{class:"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"},null)])],4)}}}),It={class:"max-w-[1200px] mx-auto p-5 transition-colors duration-300 dark:bg-gray-900"},At={class:"mb-12 relative pb-10 border-b border-dashed border-gray-200 dark:border-gray-700"},Mt={class:"flex items-center mb-4 flex-wrap gap-2"},Pt=["onClick"],Ht={class:"relative min-h-[400px] border border-gray-100 dark:border-gray-700 rounded-lg overflow-hidden"},Nt={class:"rounded-lg overflow-hidden shadow-md hover:shadow-xl transition-all duration-300 hover:-translate-y-1 bg-white dark:bg-gray-800"},Lt=["src","alt"],Bt={class:"p-4"},zt={class:"text-lg font-semibold mb-2 dark:text-white"},Tt={class:"text-sm text-gray-600 dark:text-gray-300 leading-relaxed"},Rt={class:"mb-12 relative pb-10 border-b border-dashed border-gray-200 dark:border-gray-700"},Dt={class:"relative min-h-[500px] border border-gray-100 dark:border-gray-700 rounded-lg overflow-hidden"},$t={class:"rounded-lg overflow-hidden shadow-md transition-all duration-300 hover:-translate-y-1 bg-white dark:bg-gray-800"},jt={class:"relative"},Ft=["src","alt"],Vt={class:"p-4"},Ot={class:"text-lg font-semibold mb-2 dark:text-white"},Wt={class:"text-sm text-gray-600 dark:text-gray-300 leading-relaxed mb-3"},Kt={class:"flex justify-between items-center text-xs"},Ut={class:"text-gray-500 dark:text-gray-400"},qt={class:"flex items-center"},Yt={class:"dark:text-gray-400"},Gt={class:"mb-12 relative pb-10 border-b border-dashed border-gray-200 dark:border-gray-700"},Jt={class:"flex gap-4 mb-4"},Qt=["disabled"],Xt={key:0,class:"text-sm text-gray-500 dark:text-gray-400 self-center"},Zt={class:"relative min-h-[600px] border border-gray-100 dark:border-gray-700 rounded-lg overflow-hidden"},te={class:"rounded-lg overflow-hidden shadow-md hover:shadow-xl transition-all duration-300 hover:-translate-y-1 bg-white dark:bg-gray-800"},ee={class:"relative"},ae=["src","alt"],de={class:"absolute bottom-2 right-2 bg-black/60 text-white px-2 py-1 rounded text-xs"},re={class:"p-4"},se={class:"text-lg font-semibold mb-2 dark:text-white"},le={class:"text-sm text-gray-600 dark:text-gray-300 leading-relaxed"},oe={class:"flex justify-between text-xs text-gray-500 dark:text-gray-400 mt-3"},ie={class:"p-6 w-full text-center"},ne={key:0,class:"text-gray-500 dark:text-gray-400"},ce={class:"mb-12 relative"},ge={class:"relative min-h-[600px] border border-gray-100 dark:border-gray-700 rounded-lg overflow-hidden"},ue={class:"mb-4 border-b border-white/20 pb-2.5"},ye={class:"text-xl font-bold"},xe={class:"mb-4 leading-relaxed"},ve={class:"flex justify-between items-center mt-5"},pe={class:"flex items-center"},me=["src"],he={class:"flex flex-wrap gap-1.5"},fe=J({__name:"View",setup(t){const s=h(3),r=h([{id:1,title:"瀑布流示例图片1",description:"这是一张示例图片的描述内容，展示瀑布流的基本布局效果。",image:"https://picsum.photos/400/200?random=1"},{id:2,title:"瀑布流示例图片2",description:"不同高度的卡片会自动排列，形成紧凑的视觉效果。",image:"https://picsum.photos/400/300?random=2"},{id:3,title:"瀑布流示例图片3",description:"瀑布流布局特别适合展示图片、商品或卡片内容。",image:"https://picsum.photos/400/250?random=3"},{id:4,title:"瀑布流示例图片4",description:"用户可以持续浏览内容，非常适合展示大量信息。",image:"https://picsum.photos/400/280?random=4"},{id:5,title:"瀑布流示例图片5",description:"可以根据屏幕大小动态调整列数，实现响应式布局。",image:"https://picsum.photos/400/220?random=5"},{id:6,title:"瀑布流示例图片6",description:"图片加载完成后会重新计算布局，确保排列整齐。",image:"https://picsum.photos/400/320?random=6"}]),m=x=>{console.log("布局完成",x)},u=h([{id:101,title:"深色模式优化体验",description:"暗色主题不仅可以减轻眼睛疲劳，还能节省设备电量。",image:"https://picsum.photos/400/250?random=101",category:"设计",date:"2023-05-12",views:1280},{id:102,title:"响应式布局设计",description:"自动适应不同屏幕尺寸，提供最佳的用户体验。",image:"https://picsum.photos/400/220?random=102",category:"开发",date:"2023-06-18",views:943},{id:103,title:"无障碍访问功能",description:"确保所有用户都能方便地访问和使用内容，提高可访问性。",image:"https://picsum.photos/400/280?random=103",category:"用户体验",date:"2023-07-23",views:756},{id:104,title:"高效加载策略",description:"通过延迟加载和图像优化，提高页面加载速度，减少资源消耗。",image:"https://picsum.photos/400/260?random=104",category:"性能",date:"2023-08-05",views:1125},{id:105,title:"动画效果增强",description:"适当的动画和过渡效果可以提升用户体验，增加应用的活力。",image:"https://picsum.photos/400/230?random=105",category:"动效",date:"2023-09-14",views:867}]),g={设计:"bg-purple-500 text-white dark:bg-purple-600",开发:"bg-blue-500 text-white dark:bg-blue-600",用户体验:"bg-green-500 text-white dark:bg-green-600",性能:"bg-orange-500 text-white dark:bg-orange-600",动效:"bg-pink-500 text-white dark:bg-pink-600"},c=h(null),y=h([]),w=h(0),f=h(!1),_=(x,o)=>{const l=[],b=(x-1)*o+201;for(let k=0;k<o;k++){const E=b+k;l.push({id:E,title:`动态加载项目 ${E-200}`,description:`这是第${x}页加载的内容，展示动态加载数据的能力。适用于大数据量的场景。`,image:`https://picsum.photos/400/${200+Math.floor(Math.random()*150)}?random=${E}`,date:`2023-${Math.floor(Math.random()*12)+1}-${Math.floor(Math.random()*28)+1}`,views:Math.floor(Math.random()*1e3)+100})}return l},S=async()=>{if(f.value)return;f.value=!0,await new Promise(o=>setTimeout(o,800)),w.value+=1;const x=_(w.value,6);y.value=[...y.value,...x],P(async()=>{c.value&&typeof c.value.reset=="function"&&await c.value.reset(),f.value=!1})},C=h([{id:301,title:"卡片样式自定义",content:"瀑布流组件支持完全自定义卡片样式，包括渐变背景、动画效果等，可根据深浅主题自动适应。",author:"张三",avatar:"https://randomuser.me/api/portraits/men/32.jpg",tags:["设计","前端"],theme:"blue"},{id:302,title:"响应式设计",content:"这是一个响应式设计的示例，可以根据屏幕大小自动调整列数。自定义样式可以让您的应用更具个性化，同时保持良好的用户体验。",author:"李四",avatar:"https://randomuser.me/api/portraits/women/44.jpg",tags:["开发","Vue","UI"],theme:"green"},{id:303,title:"简约风格",content:"瀑布流布局非常适合展示各种长度不一的内容，简约的设计风格可以让用户更专注于内容本身。",author:"王五",avatar:"https://randomuser.me/api/portraits/men/22.jpg",tags:["简约"],theme:"orange"},{id:304,title:"自定义主题色",content:"您可以为每个卡片应用不同的主题色彩，创造丰富的视觉体验。在深色模式下，色彩会自动调整以提供更舒适的阅读体验。",author:"赵六",avatar:"https://randomuser.me/api/portraits/women/24.jpg",tags:["设计","创意","色彩"],theme:"purple"}]);return Q(()=>{S()}),(x,o)=>(M(),A("div",It,[o[9]||(o[9]=a("h1",{class:"text-2xl font-bold mb-6 dark:text-white"},"瀑布流组件示例",-1)),a("section",At,[o[1]||(o[1]=a("h2",{class:"text-xl font-semibold mb-4 dark:text-white"},"基本用法",-1)),a("div",Mt,[o[0]||(o[0]=a("span",{class:"mr-2 dark:text-gray-300"},"列数：",-1)),(M(),A(Y,null,G([2,3,4],l=>a("button",{key:l,onClick:b=>s.value=l,class:F(["bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded mr-2 transition-colors duration-200",{"bg-blue-700 dark:bg-blue-800":s.value===l}])},p(l)+"列 ",11,Pt)),64))]),a("div",Ht,[v(z(T),{data:r.value,nodeKey:"id",column:s.value,columnSpacing:16,rowSpacing:16,animation:!0,onLayoutComplete:m},{default:B(({item:l,width:b})=>[a("div",Nt,[a("img",{src:l.image,alt:l.title,class:"w-full block",loading:"lazy"},null,8,Lt),a("div",Bt,[a("h3",zt,p(l.title),1),a("p",Tt,p(l.description),1)])])]),_:1},8,["data","column"])])]),a("section",Rt,[o[3]||(o[3]=a("h2",{class:"text-xl font-semibold mb-4 dark:text-white"},"深色/浅色模式适配",-1)),o[4]||(o[4]=a("p",{class:"mb-4 dark:text-gray-300"},"瀑布流组件自动适应当前主题模式，提供最佳视觉体验。",-1)),a("div",Dt,[v(z(T),{data:u.value,nodeKey:"id",column:3,picturePreReading:!0},{default:B(({item:l,width:b})=>[a("div",$t,[a("div",jt,[a("img",{src:l.image,alt:l.title,class:"w-full block",loading:"lazy"},null,8,Ft),a("span",{class:F(["absolute top-3 right-3 py-1 px-3 rounded-full text-xs font-medium",g[l.category]])},p(l.category),3)]),a("div",Vt,[a("h3",Ot,p(l.title),1),a("p",Wt,p(l.description),1),a("div",Kt,[a("span",Ut,p(l.date),1),a("div",qt,[o[2]||(o[2]=a("svg",{xmlns:"http://www.w3.org/2000/svg",class:"h-4 w-4 text-gray-500 dark:text-gray-400 mr-1",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[a("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M15 12a3 3 0 11-6 0 3 3 0 016 0z"}),a("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"})],-1)),a("span",Yt,p(l.views),1)])])])])]),_:1},8,["data"])])]),a("section",Gt,[o[7]||(o[7]=a("h2",{class:"text-xl font-semibold mb-4 dark:text-white"},"动态加载数据",-1)),a("div",Jt,[a("button",{onClick:S,class:"bg-blue-500 hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded transition-colors duration-200",disabled:f.value},p(f.value?"加载中...":"加载更多"),9,Qt),w.value>1?(M(),A("div",Xt," 已加载 "+p(y.value.length)+" 项数据 ",1)):vt("",!0)]),a("div",Zt,[v(z(T),{ref_key:"dynamicWaterfall",ref:c,data:y.value,nodeKey:"id",column:3},{default:B(({item:l,width:b,index:k})=>[a("div",te,[a("div",ee,[a("img",{src:l.image,alt:l.title,class:"w-full block",loading:"lazy"},null,8,ae),a("div",de," #"+p(k+1),1)]),a("div",re,[a("h3",se,p(l.title),1),a("p",le,p(l.description),1),a("div",oe,[a("span",null,p(l.date),1),a("span",null,p(l.views)+" 浏览",1)])])])]),footer:B(()=>[a("div",ie,[f.value?(M(),A("div",ne,o[5]||(o[5]=[a("div",{class:"inline-block animate-spin rounded-full h-5 w-5 border-t-2 border-b-2 border-blue-500 dark:border-blue-400 mr-2"},null,-1),X(" 正在加载更多... ")]))):(M(),A("div",{key:1,class:"text-gray-500 dark:text-gray-400 cursor-pointer hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-200",onClick:S},o[6]||(o[6]=[a("span",null,"点击加载更多",-1)])))])]),_:1},8,["data"])])]),a("section",ce,[o[8]||(o[8]=a("h2",{class:"text-xl font-semibold mb-4 dark:text-white"},"自定义卡片样式",-1)),a("div",ge,[v(z(T),{data:C.value,nodeKey:"id",column:2},{default:B(({item:l,width:b})=>[a("div",{class:F(["rounded-lg overflow-hidden p-5 shadow-md transition-all duration-500 transform hover:scale-[1.02]",l.theme==="blue"?"bg-gradient-to-br from-blue-500 to-blue-700 dark:from-blue-600 dark:to-blue-900":"",l.theme==="green"?"bg-gradient-to-br from-green-500 to-green-700 dark:from-green-600 dark:to-green-900":"",l.theme==="orange"?"bg-gradient-to-br from-orange-500 to-orange-700 dark:from-orange-600 dark:to-orange-900":"",l.theme==="purple"?"bg-gradient-to-br from-purple-500 to-purple-700 dark:from-purple-600 dark:to-purple-900":"","text-white"])},[a("div",ue,[a("h3",ye,p(l.title),1)]),a("div",xe,[a("p",null,p(l.content),1)]),a("div",ve,[a("div",pe,[a("img",{src:l.avatar,alt:"avatar",class:"w-[30px] h-[30px] rounded-full mr-2 border-2 border-white/60",loading:"lazy"},null,8,me),a("span",null,p(l.author),1)]),a("div",he,[(M(!0),A(Y,null,G(l.tags,(k,E)=>(M(),A("span",{key:E,class:"bg-white/20 px-2 py-1 rounded text-xs backdrop-blur-sm"},p(k),1))),128))])])],2)]),_:1},8,["data"])])]),o[10]||(o[10]=xt('<section class="mb-12 relative" data-v-de351621><h2 class="text-xl font-semibold mb-4 dark:text-white" data-v-de351621>组件API</h2><div class="rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800" data-v-de351621><h3 class="mb-4 text-lg font-medium text-gray-900 dark:text-white" data-v-de351621>属性 (Props)</h3><div class="mb-6 overflow-x-auto" data-v-de351621><table class="min-w-full border-collapse" data-v-de351621><thead data-v-de351621><tr class="border-b border-gray-200 dark:border-gray-700" data-v-de351621><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>属性名</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>类型</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>默认值</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>描述</th></tr></thead><tbody class="divide-y divide-gray-200 dark:divide-gray-700" data-v-de351621><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>data</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Array</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>[]</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>瀑布流数据源，数组中的每个对象代表一个瀑布流项</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>nodeKey</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>String</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>-</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>数据中用作唯一标识的字段名，用于优化重渲染</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>column</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Number</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>2</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>瀑布流列数</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>columnSpacing</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Number</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>20</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>列间距（单位：像素）</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>rowSpacing</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Number</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>20</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>行间距（单位：像素）</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>picturePreReading</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Boolean</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>true</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>是否开启图片预加载，开启后会等待图片加载完成再计算布局</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>animation</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Boolean</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>true</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>是否启用动画效果</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>layoutAlgorithm</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>String</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>&#39;default&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>布局算法，可选值：&#39;default&#39;(默认)、&#39;balanced&#39;(均衡)、&#39;compact&#39;(紧凑)</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>virtualScroll</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Boolean</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>false</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>是否开启虚拟滚动，适用于大数据量场景</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>virtualScrollBuffer</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Number</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>5</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>虚拟滚动缓冲项数量</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>responsive</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Array</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>[]</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>响应式配置断点，格式为 [{width, column, columnSpacing?, rowSpacing?}]</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>resizeDebounceTime</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Number</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>200</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>窗口大小改变时的节流延迟，单位毫秒</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>loadingClass</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>String</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>&#39;&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>自定义加载状态类名</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>emptyClass</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>String</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>&#39;&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>自定义空状态类名</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>maxHeight</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>String/Number</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>null</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>瀑布流最大高度，超出后显示滚动条</td></tr></tbody></table></div><h3 class="mb-4 text-lg font-medium text-gray-900 dark:text-white" data-v-de351621>事件 (Events)</h3><div class="mb-6 overflow-x-auto" data-v-de351621><table class="min-w-full border-collapse" data-v-de351621><thead data-v-de351621><tr class="border-b border-gray-200 dark:border-gray-700" data-v-de351621><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>事件名</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>回调参数</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>描述</th></tr></thead><tbody data-v-de351621><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>item-rendered</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>{item, index, position}</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>某一项渲染完成时触发</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>layout-complete</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>{containerHeight, itemsCount, columnHeights}</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>布局计算完成时触发</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>resize</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>{width, height}</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>容器大小改变时触发</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>visible-items-change</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>number[]</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>可见项变化时触发（虚拟滚动模式下）</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>error</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>{type, message, error}</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>发生错误时触发</td></tr></tbody></table></div><h3 class="mb-4 text-lg font-medium text-gray-900 dark:text-white" data-v-de351621>插槽 (Slots)</h3><div class="mb-6 overflow-x-auto" data-v-de351621><table class="min-w-full border-collapse" data-v-de351621><thead data-v-de351621><tr class="border-b border-gray-200 dark:border-gray-700" data-v-de351621><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>插槽名</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>插槽属性</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>描述</th></tr></thead><tbody data-v-de351621><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>default</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>{item, width, index, isVisible}</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>瀑布流项的内容</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>loading</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>-</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>首次加载状态</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>loadingOverlay</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>-</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>加载叠加层</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>empty</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>-</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>空状态</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>footer</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>-</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>底部内容，常用于加载更多触发器</td></tr></tbody></table></div><h3 class="mb-4 text-lg font-medium text-gray-900 dark:text-white" data-v-de351621>方法 (Methods)</h3><div class="overflow-x-auto" data-v-de351621><table class="min-w-full border-collapse" data-v-de351621><thead data-v-de351621><tr class="border-b border-gray-200 dark:border-gray-700" data-v-de351621><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>方法名</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>参数</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>返回值</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white" data-v-de351621>描述</th></tr></thead><tbody data-v-de351621><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>reset</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>-</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Promise&lt;void&gt;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>重置瀑布流布局，当容器尺寸变化或需要强制重新计算布局时使用</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>refreshItem</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>index: number</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Promise&lt;void&gt;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>刷新指定索引的项，用于动态高度变化的场景</td></tr><tr data-v-de351621><td class="px-4 py-2 font-medium text-gray-900 dark:text-white" data-v-de351621>getLayoutInfo</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>-</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>Object</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300" data-v-de351621>获取当前布局信息，包含容器宽度、高度、列宽等数据</td></tr></tbody></table></div></div></section><section class="mb-10" data-v-de351621><h2 class="mb-4 text-xl font-semibold text-gray-900 dark:text-white" data-v-de351621>小结与最佳实践</h2><div class="rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800" data-v-de351621><div class="space-y-4" data-v-de351621><p class="text-gray-700 dark:text-gray-300" data-v-de351621> 瀑布流组件是一个功能强大的布局组件，适用于展示不同高度的内容，特别是图片和卡片。 以下是一些使用建议： </p><ul class="ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300" data-v-de351621><li data-v-de351621>始终为组件设置适当的 <code class="bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-700" data-v-de351621>nodeKey</code> 属性，确保唯一标识，提升渲染性能</li><li data-v-de351621>对于包含图片的内容，建议保持 <code class="bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-700" data-v-de351621>picturePreReading</code> 为 true，确保正确的布局计算</li><li data-v-de351621>在处理大量数据（&gt; 200项）时，启用 <code class="bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-700" data-v-de351621>virtualScroll</code> 以提升性能</li><li data-v-de351621>使用 <code class="bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-700" data-v-de351621>responsive</code> 配置，根据不同设备屏幕大小调整列数和间距</li><li data-v-de351621>针对不同的使用场景选择合适的布局算法： <ul class="ml-6 list-disc space-y-1 mt-1" data-v-de351621><li data-v-de351621><code class="bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-700" data-v-de351621>default</code>: 适合普通瀑布流，优先考虑加载速度</li><li data-v-de351621><code class="bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-700" data-v-de351621>balanced</code>: 适合需要平衡列高的场景，视觉更为统一</li><li data-v-de351621><code class="bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-700" data-v-de351621>compact</code>: 适合追求紧凑布局的场景，最大化利用空间</li></ul></li></ul><div class="rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20" data-v-de351621><h4 class="mb-2 flex items-center text-blue-800 dark:text-blue-300" data-v-de351621><svg xmlns="http://www.w3.org/2000/svg" class="mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-v-de351621><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" data-v-de351621></path></svg> 性能优化提示 </h4><p class="text-sm text-blue-700 dark:text-blue-300" data-v-de351621> 对于有大量频繁更新的场景，可以考虑使用 <code class="rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60" data-v-de351621>resizeDebounceTime</code> 属性调整窗口大小变化的响应灵敏度，以减少不必要的重新计算。在移动设备上，设置更大的延迟值（如 300-500ms）可以显著提升性能。 </p></div><p class="text-gray-700 dark:text-gray-300" data-v-de351621> 结合无限滚动和瀑布流组件，可以实现高效、美观的内容浏览体验。通过合理配置和优化，即使是在移动设备上处理大量内容时，也能保持流畅的用户体验。 </p><div class="flex flex-wrap gap-4 mt-6" data-v-de351621><div class="flex-1 min-w-[200px] rounded-lg border border-gray-200 dark:border-gray-700 p-4" data-v-de351621><h4 class="font-medium mb-2 text-gray-900 dark:text-white" data-v-de351621>常见应用场景</h4><ul class="space-y-1 text-sm text-gray-700 dark:text-gray-300" data-v-de351621><li data-v-de351621>• 图片画廊与照片墙</li><li data-v-de351621>• 商品展示列表</li><li data-v-de351621>• 社交媒体信息流</li><li data-v-de351621>• 文章卡片布局</li><li data-v-de351621>• 动态内容瀑布流</li></ul></div><div class="flex-1 min-w-[200px] rounded-lg border border-gray-200 dark:border-gray-700 p-4" data-v-de351621><h4 class="font-medium mb-2 text-gray-900 dark:text-white" data-v-de351621>常见陷阱与解决方案</h4><ul class="space-y-1 text-sm text-gray-700 dark:text-gray-300" data-v-de351621><li data-v-de351621>• 图片未加载完成导致布局错误 → 启用图片预加载</li><li data-v-de351621>• 列表频繁更新卡顿 → 使用虚拟滚动</li><li data-v-de351621>• 响应式布局不合理 → 优化断点配置</li><li data-v-de351621>• 性能问题 → 减少数据量或分页加载</li></ul></div></div></div></div></section>',2))]))}}),ke=pt(fe,[["__scopeId","data-v-de351621"]]);export{T as Waterfall,ke as default};
//# sourceMappingURL=index-DUoswfWj.js.map
