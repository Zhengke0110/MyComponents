{"version":3,"file":"index-BVWJ56w4.js","sources":["../../src/libs/Slider/Slider.tsx","../../src/libs/Slider/View.vue"],"sourcesContent":["import { computed, defineComponent, ref, watch, onMounted, nextTick, PropType, h } from 'vue';\nimport { JSX } from 'vue/jsx-runtime';\n\ntype Mark = {\n    style?: Record<string, any>;\n    label?: string | JSX.Element;\n};\n\ntype Marks = Record<number, string | JSX.Element | Mark | (() => JSX.Element)>;\n\nexport default defineComponent({\n    name: 'Slider',\n    inheritAttrs: false, // 禁止自动继承属性，避免不正确的属性传递\n    props: {\n        min: {\n            type: Number,\n            default: 0\n        },\n        max: {\n            type: Number,\n            default: 100\n        },\n        step: {\n            type: [Number, Object] as PropType<number | null>,\n            default: 1\n        },\n        modelValue: {\n            type: [Number, Array] as PropType<number | number[]>,\n            default: 0\n        },\n        range: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        reverse: {\n            type: Boolean,\n            default: false\n        },\n        dots: {\n            type: Boolean,\n            default: false\n        },\n        included: {\n            type: Boolean,\n            default: true\n        },\n        marks: {\n            type: Object as PropType<Marks>,\n            default: () => ({})\n        },\n        tipFormatter: {\n            type: [Function, Object, String, null] as PropType<((value: number) => string | null) | null | any>,\n            default: function (value: number) {\n                return String(value);\n            }\n            // 移除验证器，让组件更宽容地接受不同类型\n        },\n        tooltipPlacement: {\n            type: String,\n            default: ''\n        },\n        tooltipOpen: {\n            type: Boolean,\n            default: false\n        },\n        autofocus: {\n            type: Boolean,\n            default: false\n        }\n    },\n    emits: ['update:modelValue', 'change', 'afterChange'],\n    setup(props, { emit, attrs }) {\n        // 内部状态管理\n        const sliderRef = ref<HTMLDivElement | null>(null);\n        const isDragging = ref(false);\n        const activeThumbIndex = ref(0);\n        const hovering = ref(false);\n        const tooltipVisible = ref(props.tooltipOpen);\n\n        // 计算当前值\n        const currentValue = computed(() => {\n            if (props.range && !Array.isArray(props.modelValue)) {\n                return [props.min, props.modelValue as number];\n            }\n            return props.modelValue;\n        });\n\n        // 将值转换为百分比\n        const valueToPercent = (value: number) => {\n            const range = props.max - props.min;\n            if (range === 0) return 0;\n            return ((value - props.min) / range) * 100;\n        };\n\n        // 将百分比转换为值\n        const percentToValue = (percent: number) => {\n            const range = props.max - props.min;\n            let value = (percent / 100) * range + props.min;\n\n            // 如果设置了步长，则按步长取整\n            if (props.step && props.step > 0) {\n                value = Math.round(value / props.step) * props.step;\n            }\n\n            return Math.max(props.min, Math.min(props.max, value));\n        };\n\n        // 计算滑块位置的百分比\n        const thumbPercents = computed(() => {\n            if (Array.isArray(currentValue.value)) {\n                return currentValue.value.map(valueToPercent);\n            }\n            return [valueToPercent(currentValue.value as number)];\n        });\n\n        // 计算轨道填充的样式\n        const trackStyle = computed(() => {\n            if (props.reverse) {\n                if (props.vertical) {\n                    if (props.range) {\n                        return {\n                            bottom: `${100 - Math.max(...thumbPercents.value)}%`,\n                            height: `${Math.abs(thumbPercents.value[1] - thumbPercents.value[0])}%`\n                        };\n                    }\n                    return {\n                        bottom: `${100 - thumbPercents.value[0]}%`,\n                        height: `${thumbPercents.value[0]}%`\n                    };\n                }\n\n                if (props.range) {\n                    return {\n                        right: `${100 - Math.max(...thumbPercents.value)}%`,\n                        width: `${Math.abs(thumbPercents.value[1] - thumbPercents.value[0])}%`\n                    };\n                }\n                return {\n                    right: `${100 - thumbPercents.value[0]}%`,\n                    width: `${thumbPercents.value[0]}%`\n                };\n            }\n\n            if (props.vertical) {\n                if (props.range) {\n                    return {\n                        bottom: `${Math.min(...thumbPercents.value)}%`,\n                        height: `${Math.abs(thumbPercents.value[1] - thumbPercents.value[0])}%`\n                    };\n                }\n                return {\n                    bottom: '0%',\n                    height: `${thumbPercents.value[0]}%`\n                };\n            }\n\n            if (props.range) {\n                return {\n                    left: `${Math.min(...thumbPercents.value)}%`,\n                    width: `${Math.abs(thumbPercents.value[1] - thumbPercents.value[0])}%`\n                };\n            }\n            return {\n                left: '0%',\n                width: `${thumbPercents.value[0]}%`\n            };\n        });\n\n        // 计算滑块的样式\n        const getThumbStyle = (index: number) => {\n            const percent = thumbPercents.value[index];\n            if (props.vertical) {\n                return props.reverse\n                    ? { top: `${100 - percent}%` }\n                    : { bottom: `${percent}%` };\n            }\n            return props.reverse\n                ? { right: `${percent}%` }\n                : { left: `${percent}%` };\n        };\n\n        // 计算提示工具的位置\n        const getTooltipPlacement = () => {\n            if (props.tooltipPlacement) return props.tooltipPlacement;\n            return props.vertical ? 'right' : 'top';\n        };\n\n        // 处理拖动事件\n        const handleSliderClick = (e: MouseEvent) => {\n            if (props.disabled) return;\n\n            const sliderRect = sliderRef.value!.getBoundingClientRect();\n            let percent;\n\n            if (props.vertical) {\n                const offsetY = e.clientY - sliderRect.top;\n                percent = props.reverse\n                    ? offsetY / sliderRect.height * 100\n                    : (1 - offsetY / sliderRect.height) * 100;\n            } else {\n                const offsetX = e.clientX - sliderRect.left;\n                percent = props.reverse\n                    ? (1 - offsetX / sliderRect.width) * 100\n                    : offsetX / sliderRect.width * 100;\n            }\n\n            const newValue = percentToValue(percent);\n\n            if (props.range) {\n                const values = [...(currentValue.value as number[])];\n                // 找出最接近点击位置的滑块\n                const dist1 = Math.abs(values[0] - newValue);\n                const dist2 = Math.abs(values[1] - newValue);\n                if (dist1 < dist2) {\n                    values[0] = newValue;\n                } else {\n                    values[1] = newValue;\n                }\n\n                emit('update:modelValue', values);\n                emit('change', values);\n            } else {\n                emit('update:modelValue', newValue);\n                emit('change', newValue);\n            }\n        };\n\n        // 开始拖动\n        const handleThumbMouseDown = (e: MouseEvent, index: number) => {\n            if (props.disabled) return;\n\n            e.preventDefault();\n            activeThumbIndex.value = index;\n            isDragging.value = true;\n            tooltipVisible.value = true;\n\n            const onMouseMove = (moveEvent: MouseEvent) => {\n                const sliderRect = sliderRef.value!.getBoundingClientRect();\n                let percent;\n\n                if (props.vertical) {\n                    const offsetY = moveEvent.clientY - sliderRect.top;\n                    percent = props.reverse\n                        ? offsetY / sliderRect.height * 100\n                        : (1 - offsetY / sliderRect.height) * 100;\n                } else {\n                    const offsetX = moveEvent.clientX - sliderRect.left;\n                    percent = props.reverse\n                        ? (1 - offsetX / sliderRect.width) * 100\n                        : offsetX / sliderRect.width * 100;\n                }\n\n                const newValue = percentToValue(percent);\n\n                if (props.range) {\n                    const values = [...(currentValue.value as number[])];\n                    values[index] = newValue;\n\n                    // 确保值的顺序\n                    if (index === 0 && values[0] > values[1]) {\n                        values[0] = values[1];\n                    } else if (index === 1 && values[1] < values[0]) {\n                        values[1] = values[0];\n                    }\n\n                    emit('update:modelValue', values);\n                    emit('change', values);\n                } else {\n                    emit('update:modelValue', newValue);\n                    emit('change', newValue);\n                }\n            };\n\n            const onMouseUp = () => {\n                isDragging.value = false;\n                if (!hovering.value && !props.tooltipOpen) {\n                    tooltipVisible.value = false;\n                }\n\n                document.removeEventListener('mousemove', onMouseMove);\n                document.removeEventListener('mouseup', onMouseUp);\n\n                if (props.range) {\n                    emit('afterChange', currentValue.value);\n                } else {\n                    emit('afterChange', currentValue.value);\n                }\n            };\n\n            document.addEventListener('mousemove', onMouseMove);\n            document.addEventListener('mouseup', onMouseUp);\n        };\n\n        // 鼠标进入/离开处理\n        const handleMouseEnter = () => {\n            hovering.value = true;\n            if (!props.tooltipOpen) {\n                tooltipVisible.value = true;\n            }\n        };\n\n        const handleMouseLeave = () => {\n            hovering.value = false;\n            if (!isDragging.value && !props.tooltipOpen) {\n                tooltipVisible.value = false;\n            }\n        };\n\n        // 渲染刻度标记\n        const renderMarks = () => {\n            if (!props.marks || Object.keys(props.marks).length === 0) return null;\n\n            // 获取两端标记值\n            const markValues = Object.keys(props.marks).map(Number);\n            const minMarkValue = Math.min(...markValues);\n            const maxMarkValue = Math.max(...markValues);\n\n            return (\n                <div class={`absolute top-0 left-0 w-full h-full pointer-events-none ${props.vertical ? 'h-full w-auto' : 'w-full h-auto'}`}>\n                    {Object.entries(props.marks).map(([markValue, mark]) => {\n                        const markNum = parseFloat(markValue);\n                        const percent = valueToPercent(markNum);\n\n                        // 判断是否为端点标记\n                        const isEndPoint = markNum === minMarkValue || markNum === maxMarkValue;\n\n                        // 设置水平和垂直方向的标记位置\n                        // 对于两端的标记特殊处理，其他的标记正常显示\n                        let markPosition;\n                        let specialAlignment = '';\n\n                        if (props.vertical) {\n                            if (props.reverse) {\n                                markPosition = {\n                                    top: `${100 - percent}%`,\n                                    left: '100%',\n                                    marginLeft: '10px'\n                                };\n                            } else {\n                                markPosition = {\n                                    bottom: `${percent}%`,\n                                    left: '100%',\n                                    marginLeft: '10px'\n                                };\n                            }\n                        } else {\n                            // 水平方向\n                            if (markNum === minMarkValue) {\n                                // 最左侧标记\n                                markPosition = props.reverse\n                                    ? { right: `${percent}%`, top: '50%', transform: 'translateY(-50%)' }\n                                    : { left: `${percent}%`, top: '50%', marginLeft: '-20px', transform: 'translateY(-50%)' };\n                                specialAlignment = props.reverse ? 'text-right' : 'text-left';\n                            } else if (markNum === maxMarkValue) {\n                                // 最右侧标记\n                                markPosition = props.reverse\n                                    ? { right: `${percent}%`, top: '50%', marginRight: '-20px', transform: 'translateY(-50%)' }\n                                    : { left: `${percent}%`, top: '50%', marginLeft: '20px', transform: 'translateY(-50%)' };\n                                specialAlignment = props.reverse ? 'text-left' : 'text-right';\n                            } else {\n                                // 中间标记保持原来的位置\n                                markPosition = props.reverse\n                                    ? { right: `${percent}%`, top: '100%', marginTop: '8px' }\n                                    : { left: `${percent}%`, top: '100%', marginTop: '8px' };\n                            }\n                        }\n\n                        let markContent;\n                        if (typeof mark === 'function') {\n                            markContent = mark();\n                        } else if (typeof mark === 'object' && mark !== null && 'label' in mark) {\n                            markContent = mark.label;\n                        } else {\n                            markContent = mark;\n                        }\n\n                        let markStyle = {};\n                        if (typeof mark === 'object' && mark !== null && 'style' in mark) {\n                            markStyle = mark.style || {};\n                        }\n\n                        // 设置不同的标记样式\n                        const markClasses = isEndPoint && !props.vertical\n                            ? `absolute select-none whitespace-nowrap ${specialAlignment}`\n                            : props.vertical\n                                ? \"absolute transform -translate-y-1/2 select-none whitespace-nowrap\"\n                                : \"absolute transform -translate-x-1/2 select-none whitespace-nowrap\";\n\n                        return (\n                            <div\n                                key={markValue}\n                                class={markClasses}\n                                style={{ ...markPosition, ...markStyle }}\n                            >\n                                <div class={`text-xs dark:text-gray-300 text-gray-500 transition-colors duration-200`}>\n                                    {markContent}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            );\n        };\n\n        // 渲染刻度点\n        const renderDots = () => {\n            if (!props.dots) return null;\n\n            const dots = [];\n            const range = props.max - props.min;\n            const step = props.step as number;\n\n            // 确保步长是有效值\n            if (!step || step <= 0) return null;\n\n            // 计算步长点的数量\n            const numSteps = Math.floor(range / step);\n\n            for (let i = 0; i <= numSteps; i++) {\n                const value = props.min + i * step;\n                const percent = valueToPercent(value);\n\n                // 判断点是否处于激活状态\n                let isActive = false;\n\n                if (Array.isArray(currentValue.value)) {\n                    // 范围滑块：点位于范围内应该高亮\n                    const [minVal, maxVal] = [\n                        Math.min(currentValue.value[0], currentValue.value[1]),\n                        Math.max(currentValue.value[0], currentValue.value[1])\n                    ];\n\n                    isActive = value >= minVal && value <= maxVal;\n                } else {\n                    // 单滑块：当前值大于等于点的值时，点应该高亮\n                    const currentVal = currentValue.value as number;\n\n                    if (props.reverse) {\n                        // 反向模式下，值大于等于当前值的点应该高亮\n                        isActive = value >= currentVal;\n                    } else {\n                        // 常规模式下，值小于等于当前值的点应该高亮\n                        isActive = value <= currentVal;\n                    }\n                }\n\n                // 计算点的位置\n                const dotPosition = props.vertical\n                    ? props.reverse\n                        ? { top: `${100 - percent}%` }\n                        : { bottom: `${percent}%` }\n                    : props.reverse\n                        ? { right: `${percent}%` }\n                        : { left: `${percent}%` };\n\n                // 通过使用 key，确保每个点在值变化时能够正确更新\n                const dotKey = `dot-${i}-${isActive ? 'active' : 'inactive'}`;\n\n                // 创建点元素，使用计算属性确保状态改变时组件会重新渲染\n                dots.push(\n                    <div\n                        key={dotKey}\n                        class={`\n                          absolute w-1.5 h-1.5 transform -translate-x-1/2 -translate-y-1/2 rounded-full \n                          ${isActive\n                                ? 'bg-blue-500 dark:bg-blue-400 shadow-md shadow-blue-300/50 dark:shadow-blue-900/50 scale-125'\n                                : 'bg-gray-300 dark:bg-gray-600 scale-100'\n                            }\n                          transition-all duration-300 ease-in-out\n                        `}\n                        style={dotPosition}\n                        title={`${value}`}\n                    />\n                );\n            }\n\n            return dots;\n        };\n\n        // 自动聚焦功能\n        onMounted(() => {\n            if (props.autofocus && sliderRef.value) {\n                nextTick(() => {\n                    sliderRef.value?.focus();\n                });\n            }\n        });\n\n        // 监听 modelValue 变化以保持内部状态同步\n        watch(() => props.modelValue, () => {\n            if (props.range && !Array.isArray(props.modelValue)) {\n                emit('update:modelValue', [props.min, props.modelValue as number]);\n            }\n        });\n\n        // 在 setup 中增加对 currentValue 的监听，确保点状态更新\n        watch(currentValue, () => {\n            // 强制重新渲染组件，确保点状态更新\n            nextTick(() => {\n                if (sliderRef.value) {\n                    // 触发重绘\n                    const currentDisplay = sliderRef.value.style.display;\n                    sliderRef.value.style.display = 'none';\n                    // 触发重排\n                    void sliderRef.value.offsetHeight;\n                    sliderRef.value.style.display = currentDisplay;\n                }\n            });\n        }, { deep: true });\n\n        // 改进 safeTipFormatter，更健壮地处理各种情况\n        const safeTipFormatter = (value: number): string => {\n            try {\n                // 如果是 null，直接返回字符串形式的值\n                if (props.tipFormatter === null) {\n                    return String(value);\n                }\n\n                // 如果是函数，尝试调用它\n                if (typeof props.tipFormatter === 'function') {\n                    try {\n                        const result = props.tipFormatter(value);\n                        return result === null ? String(value) : String(result);\n                    } catch (error) {\n                        console.warn('Slider: tipFormatter function error', error);\n                        return String(value);\n                    }\n                }\n\n                // 对于其他情况，简单地返回字符串形式的值\n                return String(value);\n            } catch (error) {\n                console.error('Slider: unexpected tipFormatter error', error);\n                return String(value);\n            }\n        };\n\n        // 使用响应式数据包装renderDots，确保点会随值的变化而更新\n        const computedDots = computed(() => renderDots());\n\n        return () => (\n            <div\n                ref={sliderRef}\n                class={`\n          relative \n          ${props.vertical ? 'h-48 w-6' : 'h-6 w-full'} \n          ${props.disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'} \n          transition-opacity duration-200\n          outline-none\n          select-none\n          ${props.marks && Object.keys(props.marks).length > 0 ? (props.vertical ? 'mr-8' : 'mx-6') : ''}\n        `}\n                tabindex={props.disabled ? undefined : 0}\n                onClick={handleSliderClick}\n                onMouseenter={handleMouseEnter}\n                onMouseleave={handleMouseLeave}\n            >\n                {/* 轨道 */}\n                <div\n                    class={`\n            absolute \n            ${props.vertical ? 'w-1 h-full left-1/2 transform -translate-x-1/2' : 'h-1 w-full top-1/2 transform -translate-y-1/2'} \n            bg-gray-200 dark:bg-gray-700 \n            rounded-full\n          `}\n                >\n                    {/* 轨道填充部分 */}\n                    <div\n                        class={`\n              absolute \n              ${!props.included ? 'opacity-0' : ''} \n              ${props.disabled ? 'bg-gray-400 dark:bg-gray-500' : 'bg-blue-500 dark:bg-blue-400'} \n              rounded-full\n              transition-all duration-200\n            `}\n                        style={trackStyle.value}\n                    />\n                </div>\n\n                {/* 刻度点 - 使用计算属性确保动态更新 */}\n                {computedDots.value}\n\n                {/* 刻度标记 */}\n                {renderMarks()}\n\n                {/* 滑块 */}\n                {thumbPercents.value.map((_, index) => (\n                    <div\n                        key={index}\n                        class={`\n              absolute \n              ${props.vertical ? 'left-1/2' : 'top-1/2'} \n              transform ${props.vertical ? '-translate-x-1/2' : '-translate-y-1/2'}\n              w-4 h-4 \n              ${props.disabled ? 'bg-gray-400 dark:bg-gray-500' : 'bg-white dark:bg-gray-800'} \n              border-2 \n              ${props.disabled ? 'border-gray-300 dark:border-gray-600' : 'border-blue-500 dark:border-blue-400'} \n              rounded-full \n              shadow-md \n              cursor-grab \n              ${isDragging.value && activeThumbIndex.value === index ? 'cursor-grabbing scale-110' : ''} \n              transition-transform duration-200\n              hover:scale-110\n              focus:ring-2 focus:ring-blue-300 dark:focus:ring-blue-700\n              z-10\n            `}\n                        style={getThumbStyle(index)}\n                        onMousedown={(e) => handleThumbMouseDown(e, index)}\n                        tabindex={props.disabled ? undefined : 0}\n                    >\n                        {/* 提示工具 */}\n                        {tooltipVisible.value && (\n                            <div\n                                class={`\n                  absolute \n                  ${getTooltipPlacement() === 'top' ? 'bottom-full mb-2' : ''} \n                  ${getTooltipPlacement() === 'bottom' ? 'top-full mt-2' : ''} \n                  ${getTooltipPlacement() === 'left' ? 'right-full mr-2' : ''} \n                  ${getTooltipPlacement() === 'right' ? 'left-full ml-2' : ''} \n                  transform -translate-x-1/2 \n                  px-2 py-1 \n                  text-xs text-white \n                  bg-gray-700 dark:bg-gray-900 \n                  rounded \n                  whitespace-nowrap \n                  z-20\n                  opacity-100\n                  transition-opacity duration-200\n                `}\n                            >\n                                {safeTipFormatter(Array.isArray(currentValue.value)\n                                    ? currentValue.value[index]\n                                    : currentValue.value as number)}\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </div>\n        );\n    }\n});\n","<template>\n    <div class=\"p-8 transition-colors duration-500 bg-gray-50 dark:bg-gray-900 min-h-screen\">\n        <h1 class=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white flex items-center\">\n            <span class=\"mr-3 text-blue-500 dark:text-blue-400\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path\n                        d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n                </svg>\n            </span>\n            滑动输入条 Slider\n        </h1>\n        <p class=\"mb-10 text-gray-600 dark:text-gray-300 max-w-3xl\">\n            滑动输入条是一种用于在连续或间断的区间内选择特定值的交互式控件。支持单点选择、范围选择、垂直布局、反向模式等多种功能。\n        </p>\n\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <!-- 基础用法展示区 -->\n            <section class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md overflow-hidden\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-blue-500 dark:bg-blue-400 rounded-full mr-3\"></div>\n                    基础用法\n                </h2>\n                <div class=\"space-y-8 mb-4\">\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">默认滑块</p>\n                        <div class=\"px-2 sm:px-5\">\n                            <Slider v-model=\"basicValue\" :tip-formatter=\"formatDefault\" />\n                        </div>\n                        <div class=\"mt-4 transition-all duration-500\">\n                            <span\n                                class=\"px-3 py-1.5 text-sm bg-gray-100 dark:bg-gray-700 rounded text-gray-700 dark:text-gray-300\">\n                                当前值: {{ basicValue }}\n                            </span>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">禁用状态</p>\n                        <div class=\"px-2 sm:px-5\">\n                            <Slider v-model=\"basicValue\" disabled :tip-formatter=\"formatDefault\" />\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">带有步长的滑块</p>\n                        <div class=\"px-2 sm:px-5\">\n                            <Slider v-model=\"stepValue\" :step=\"10\" :tip-formatter=\"formatDefault\" />\n                        </div>\n                        <div class=\"flex justify-between px-3 mt-2\">\n                            <span class=\"text-xs text-gray-500 dark:text-gray-400\">0</span>\n                            <span class=\"text-xs text-gray-500 dark:text-gray-400\">100</span>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 带标记和点的滑块 -->\n            <section class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md overflow-hidden\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-green-500 dark:bg-green-400 rounded-full mr-3\"></div>\n                    标记与刻度\n                </h2>\n                <div class=\"space-y-12\">\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">温度刻度</p>\n                        <div class=\"px-2 sm:px-5 pt-4\">\n                            <Slider v-model=\"marksValue\" :marks=\"temperatureMarks\" :tooltip-open=\"true\" />\n                        </div>\n                        <div class=\"mt-6 flex justify-center\">\n                            <div class=\"w-16 h-16 rounded-full flex items-center justify-center transition-all duration-500\"\n                                :class=\"getTemperatureClass(marksValue)\">\n                                <span class=\"font-bold\" :class=\"marksValue > 60 ? 'text-white' : 'text-gray-800'\">{{\n                                    marksValue }}°C</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">带点的滑块</p>\n                        <div class=\"px-2 sm:px-5\">\n                            <Slider v-model=\"dotsValue\" :step=\"10\" :dots=\"true\" :marks=\"dotsMarks\" />\n                        </div>\n                        <div class=\"mt-4 flex justify-end\">\n                            <div class=\"grid grid-cols-5 gap-1\">\n                                <div v-for=\"n in 10\" :key=\"n\" class=\"w-2 h-6 rounded-sm transition-all duration-300\"\n                                    :class=\"n * 10 <= dotsValue ? 'bg-blue-500 dark:bg-blue-400' : 'bg-gray-200 dark:bg-gray-600'\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 范围选择 -->\n            <section class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md overflow-hidden\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-purple-500 dark:bg-purple-400 rounded-full mr-3\"></div>\n                    范围选择\n                </h2>\n                <div class=\"space-y-10\">\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">基础范围选择</p>\n                        <div class=\"px-2 sm:px-5\">\n                            <Slider v-model=\"rangeValue\" :range=\"true\" :tip-formatter=\"formatDefault\" />\n                        </div>\n                        <div class=\"mt-4 flex justify-between\">\n                            <span\n                                class=\"px-3 py-1 text-sm bg-purple-100 dark:bg-purple-900 rounded text-purple-700 dark:text-purple-300\">\n                                {{ rangeValue[0] }}\n                            </span>\n                            <div class=\"text-gray-400 dark:text-gray-500\">至</div>\n                            <span\n                                class=\"px-3 py-1 text-sm bg-purple-100 dark:bg-purple-900 rounded text-purple-700 dark:text-purple-300\">\n                                {{ rangeValue[1] }}\n                            </span>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">价格范围</p>\n                        <div class=\"px-2 sm:px-5\">\n                            <Slider v-model=\"priceRange\" :range=\"true\" :tip-formatter=\"formatPrice\"\n                                :marks=\"priceMarks\" />\n                        </div>\n                        <div class=\"mt-6 flex flex-wrap gap-4 justify-center\">\n                            <div v-for=\"product in filteredProducts\" :key=\"product.id\"\n                                class=\"w-20 h-24 bg-white dark:bg-gray-700 rounded-lg shadow-sm transform transition-all duration-300 hover:-translate-y-1 hover:shadow-md flex flex-col items-center justify-between p-2\">\n                                <div\n                                    class=\"w-14 h-12 bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-600 dark:to-gray-800 rounded\">\n                                </div>\n                                <span class=\"font-medium text-gray-900 dark:text-gray-100\">¥{{ product.price }}</span>\n                                <span class=\"text-xs text-gray-500 dark:text-gray-400\">商品{{ product.id }}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 垂直与反向模式 -->\n            <section class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md overflow-hidden\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-yellow-500 dark:bg-yellow-400 rounded-full mr-3\"></div>\n                    垂直与反向\n                </h2>\n\n                <div class=\"flex justify-around mb-6 h-48\"> <!-- 固定高度避免溢出 -->\n                    <div class=\"flex flex-col items-center\">\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">垂直滑块</p>\n                        <Slider v-model=\"verticalValue\" vertical />\n                        <div class=\"mt-2 text-sm text-center text-gray-700 dark:text-gray-300\">{{ verticalValue }}</div>\n                    </div>\n\n                    <div class=\"flex flex-col items-center\">\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">带标记</p>\n                        <Slider v-model=\"verticalMarksValue\" vertical :marks=\"verticalMarks\" />\n                    </div>\n\n                    <div class=\"flex flex-col items-center\">\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">垂直范围</p>\n                        <Slider v-model=\"verticalRangeValue\" vertical :range=\"true\" />\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">反向滑块</p>\n                    <div class=\"flex items-center px-2 sm:px-5\">\n                        <span class=\"mr-2 text-sm text-gray-600 dark:text-gray-300\">100</span>\n                        <Slider v-model=\"reverseValue\" class=\"flex-1\" :reverse=\"true\" />\n                        <span class=\"ml-2 text-sm text-gray-600 dark:text-gray-300\">0</span>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 动态效果展示 -->\n            <section class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md overflow-hidden col-span-1 lg:col-span-2\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-red-500 dark:bg-red-400 rounded-full mr-3\"></div>\n                    交互式示例\n                </h2>\n\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                    <!-- 音量控制 -->\n                    <div class=\"bg-gray-50 dark:bg-gray-700 p-6 rounded-lg\">\n                        <h3 class=\"text-lg font-medium mb-6 text-gray-800 dark:text-gray-200\">音量控制</h3>\n                        <div class=\"flex items-center space-x-3\">\n                            <button\n                                class=\"text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\"\n                                    fill=\"currentColor\">\n                                    <path fill-rule=\"evenodd\"\n                                        d=\"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM12.293 7.293a1 1 0 011.414 0L15 8.586l1.293-1.293a1 1 0 111.414 1.414L16.414 10l1.293 1.293a1 1 0 11-1.414 1.414L15 11.414l-1.293 1.293a1 1 0 01-1.414-1.414L13.586 10l-1.293-1.293a1 1 0 010-1.414z\"\n                                        clip-rule=\"evenodd\" />\n                                </svg>\n                            </button>\n                            <Slider v-model=\"volumeValue\" :tip-formatter=\"formatPercent\" />\n                            <button\n                                class=\"text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\"\n                                    fill=\"currentColor\">\n                                    <path fill-rule=\"evenodd\"\n                                        d=\"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z\"\n                                        clip-rule=\"evenodd\" />\n                                </svg>\n                            </button>\n                        </div>\n\n                        <div class=\"mt-12 flex justify-center\">\n                            <div class=\"relative w-28 h-28 sm:w-32 sm:h-32\">\n                                <!-- 外环 -->\n                                <svg class=\"w-full h-full transform rotate-180\" viewBox=\"0 0 120 120\">\n                                    <circle cx=\"60\" cy=\"60\" r=\"54\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"12\"\n                                        class=\"text-blue-100 dark:text-blue-900 transition-colors duration-300\" />\n                                    <circle cx=\"60\" cy=\"60\" r=\"54\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"12\"\n                                        stroke-dasharray=\"339.292\" :stroke-dashoffset=\"339.292 * (1 - volumeValue / 100)\"\n                                        class=\"text-blue-500 dark:text-blue-400 transition-all duration-500\" />\n                                </svg>\n                                <!-- 内圆 -->\n                                <div class=\"absolute inset-0 flex items-center justify-center\">\n                                    <div\n                                        class=\"w-16 h-16 sm:w-20 sm:h-20 rounded-full bg-white dark:bg-gray-800 flex items-center justify-center shadow-inner transition-colors duration-300\">\n                                        <span class=\"text-lg sm:text-2xl font-bold text-blue-500 dark:text-blue-400\">{{\n                                            volumeValue }}%</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- 动态点演示 -->\n                    <div class=\"bg-gray-50 dark:bg-gray-700 p-6 rounded-lg\">\n                        <h3 class=\"text-lg font-medium mb-6 text-gray-800 dark:text-gray-200\">自动动画</h3>\n                        <div class=\"px-2\">\n                            <Slider v-model=\"animatedValue\" :step=\"10\" :dots=\"true\" />\n                        </div>\n\n                        <div class=\"mt-6 flex justify-between items-center\">\n                            <span class=\"text-sm text-gray-600 dark:text-gray-300\">当前值: {{ animatedValue }}</span>\n                            <button @click=\"toggleAnimation\"\n                                class=\"px-3 py-1.5 text-sm font-medium rounded transition-colors duration-300\"\n                                :class=\"isAnimating ? 'bg-red-500 hover:bg-red-600 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'\">\n                                {{ isAnimating ? '停止' : '播放' }} 动画\n                            </button>\n                        </div>\n\n                        <div class=\"mt-8 flex justify-center\">\n                            <div class=\"grid grid-cols-10 gap-1 sm:gap-2\">\n                                <div v-for=\"i in 10\" :key=\"i\"\n                                    class=\"w-4 sm:w-5 h-8 rounded transition-all duration-300 transform\" :class=\"[\n                                        i * 10 <= animatedValue ? 'bg-blue-500 dark:bg-blue-400 scale-y-100' : 'bg-gray-200 dark:bg-gray-600 scale-y-50',\n                                        i * 10 === animatedValue ? 'scale-y-110' : ''\n                                    ]\" :style=\"{ transitionDelay: `${i * 30}ms` }\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 暗色模式适配展示 -->\n            <section class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md overflow-hidden col-span-1 lg:col-span-2\">\n                <h2 class=\"text-xl font-semibold mb-8 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-indigo-500 dark:bg-indigo-400 rounded-full mr-3\"></div>\n                    主题模式展示\n                </h2>\n\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                    <div class=\"bg-white p-6 rounded-xl shadow-sm\">\n                        <div class=\"flex justify-between items-center mb-6\">\n                            <span class=\"text-gray-800 font-medium\">亮色模式</span>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-yellow-500\" viewBox=\"0 0 20 20\"\n                                fill=\"currentColor\">\n                                <path fill-rule=\"evenodd\"\n                                    d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.707.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n                                    clip-rule=\"evenodd\" />\n                            </svg>\n                        </div>\n\n                        <div class=\"space-y-6 px-2\">\n                            <Slider v-model=\"lightThemeValue1\" class=\"slider-blue\" />\n                            <Slider v-model=\"lightThemeValue2\" :range=\"true\" class=\"slider-green\" />\n                            <div class=\"flex items-center space-x-4\">\n                                <div class=\"w-4 h-4 rounded-full bg-indigo-500\"></div>\n                                <Slider v-model=\"lightThemeValue3\" class=\"flex-1 slider-indigo\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"bg-gray-900 p-6 rounded-xl shadow-sm\">\n                        <div class=\"flex justify-between items-center mb-6\">\n                            <span class=\"text-gray-200 font-medium\">暗色模式</span>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\"\n                                fill=\"currentColor\">\n                                <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n                            </svg>\n                        </div>\n\n                        <div class=\"space-y-6 px-2\">\n                            <Slider v-model=\"darkThemeValue1\" class=\"slider-blue\" />\n                            <Slider v-model=\"darkThemeValue2\" :range=\"true\" class=\"slider-green\" />\n                            <div class=\"flex items-center space-x-4\">\n                                <div class=\"w-4 h-4 rounded-full bg-indigo-400\"></div>\n                                <Slider v-model=\"darkThemeValue3\" class=\"flex-1 slider-indigo\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n\n        <!-- 小结与最佳实践 -->\n        <section class=\"mt-16 bg-white dark:bg-gray-800 p-8 rounded-xl shadow-sm\">\n            <h2 class=\"text-2xl font-bold mb-6 text-gray-800 dark:text-white border-b pb-2 border-gray-200 dark:border-gray-700\">\n                小结与最佳实践\n            </h2>\n            <div class=\"space-y-6 text-gray-700 dark:text-gray-300\">\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n                        <span class=\"text-blue-500 dark:text-blue-400 mr-2\">•</span>何时使用滑动输入条\n                    </h3>\n                    <ul class=\"list-disc list-inside space-y-2 ml-5 text-gray-600 dark:text-gray-400\">\n                        <li>当用户需要在一个范围内调整数值时</li>\n                        <li>当需要展示某个范围的百分比或分布情况时</li>\n                        <li>适合直观、交互式的数值选择场景，尤其是数值范围较大时</li>\n                        <li>作为音量、亮度等控制器的首选组件</li>\n                    </ul>\n                </div>\n                \n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n                        <span class=\"text-green-500 dark:text-green-400 mr-2\">•</span>设计建议\n                    </h3>\n                    <ul class=\"list-disc list-inside space-y-2 ml-5 text-gray-600 dark:text-gray-400\">\n                        <li>根据数据精度合理设置步长，避免过于精细或粗糙的调节</li>\n                        <li>对于重要的数值区间，可使用 marks 属性添加标记以增强可读性</li>\n                        <li>若数值含义较为重要，建议显示提示工具 (tooltip) 以增强用户体验</li>\n                        <li>考虑移动设备使用场景，提供足够大的可点击区域</li>\n                        <li>对于专业场景，可结合输入框，让用户选择输入方式</li>\n                    </ul>\n                </div>\n                \n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n                        <span class=\"text-purple-500 dark:text-purple-400 mr-2\">•</span>无障碍设计\n                    </h3>\n                    <ul class=\"list-disc list-inside space-y-2 ml-5 text-gray-600 dark:text-gray-400\">\n                        <li>确保 Slider 组件可通过键盘进行控制（左右箭头键调整值）</li>\n                        <li>为滑块添加适当的 aria 属性，如 aria-valuenow, aria-valuemin, aria-valuemax</li>\n                        <li>使用合适的颜色对比度，确保视觉障碍用户可以辨识组件</li>\n                        <li>添加文本标签，帮助屏幕阅读器用户理解组件功能</li>\n                    </ul>\n                </div>\n                \n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n                        <span class=\"text-yellow-500 dark:text-yellow-400 mr-2\">•</span>性能考量\n                    </h3>\n                    <ul class=\"list-disc list-inside space-y-2 ml-5 text-gray-600 dark:text-gray-400\">\n                        <li>处理频繁的滑动事件时，考虑使用节流（throttle）或防抖（debounce）技术</li>\n                        <li>避免在滑动过程中进行复杂计算或频繁更新视图</li>\n                        <li>对于大量标记点或刻度线的场景，考虑使用虚拟滚动或按需渲染</li>\n                    </ul>\n                </div>\n            </div>\n        </section>\n\n        <!-- API文档 -->\n        <section class=\"mt-12 bg-white dark:bg-gray-800 p-8 rounded-xl shadow-sm mb-8\">\n            <h2 class=\"text-2xl font-bold mb-6 text-gray-800 dark:text-white border-b pb-2 border-gray-200 dark:border-gray-700\">\n                API 文档\n            </h2>\n            \n            <div class=\"overflow-x-auto\">\n                <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                属性\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                类型\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                默认值\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                说明\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                modelValue (v-model)\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                number | number[]\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                0\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                滑块的当前值。当 range 为 true 时，需要提供数组形式的值 [min, max]。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                min\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                number\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                0\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                滑块可选的最小值。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                max\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                number\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                100\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                滑块可选的最大值。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                step\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                number | null\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                1\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                滑块移动的步长。值为 null 时滑块可以任意移动。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                range\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                boolean\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                false\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                设置为范围选择模式，显示两个滑块。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                vertical\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                boolean\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                false\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                设置为垂直方向的滑块。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                disabled\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                boolean\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                false\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                设置为禁用状态。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                reverse\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                boolean\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                false\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                反向展示滑块，从右往左或从上往下。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                dots\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                boolean\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                false\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                是否在滑块轨道上显示刻度点。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                included\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                boolean\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                true\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                marks 不为空时，是否只显示标记刻度。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                marks\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                object\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                {}\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                刻度标记，格式为 {number: string | {style: object, label: string}} 的对象。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                tipFormatter\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                function | null\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                (value) => String(value)\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                格式化提示文本的函数，值为 null 时隐藏提示。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                tooltipPlacement\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                string\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                ''\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                提示气泡的位置，可选 'top', 'bottom', 'left', 'right'。为空时自动判断。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                tooltipOpen\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                boolean\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                false\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                提示气泡是否始终显示。\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                autofocus\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                boolean\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                false\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                挂载时是否获得焦点。\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            \n            <h3 class=\"text-xl font-semibold mt-8 mb-4 text-gray-800 dark:text-white\">事件</h3>\n            <div class=\"overflow-x-auto\">\n                <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                事件名称\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                说明\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                回调参数\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                update:modelValue\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                当值发生改变时触发，支持 v-model\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                value: number | number[]\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                change\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                当值发生改变时触发\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                value: number | number[]\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                afterChange\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                拖拽结束后触发\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                value: number | number[]\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            \n            <h3 class=\"text-xl font-semibold mt-8 mb-4 text-gray-800 dark:text-white\">CSS 自定义</h3>\n            <p class=\"text-gray-700 dark:text-gray-300 mb-4\">\n                Slider 组件支持通过CSS类自定义样式。以下是可以自定义的主要样式类：\n            </p>\n            <div class=\"bg-gray-50 dark:bg-gray-900 p-4 rounded-md overflow-auto\">\n                <pre class=\"text-sm text-gray-700 dark:text-gray-300\">\n.slider-blue .bg-blue-500 {\n    background-color: #3b82f6; /* 自定义活动轨道颜色 */\n}\n\n.slider-green .bg-blue-500 {\n    background-color: #22c55e; /* 自定义活动轨道颜色 */\n}\n\n/* 可以添加更多自定义样式类 */</pre>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, computed } from 'vue';\nimport Slider from './Slider';\n\n// 基础滑块\nconst basicValue = ref(30);\nconst stepValue = ref(40);\n\n// 带标记的滑块\nconst marksValue = ref(37);\nconst temperatureMarks = {\n    0: '0°C',\n    26: '26°C',\n    37: {\n        style: { color: '#3b82f6', fontWeight: '600' },\n        label: '37°C'\n    },\n    100: {\n        style: { color: '#ef4444', fontWeight: '600' },\n        label: '100°C'\n    }\n};\n\n// 带点的滑块\nconst dotsValue = ref(70);\nconst dotsMarks = {\n    0: '0%',\n    100: '100%'\n};\n\n// 范围滑块\nconst rangeValue = ref([20, 75]);\nconst priceRange = ref([100, 500]);\nconst priceMarks = {\n    0: '¥0',\n    200: '¥200',\n    500: '¥500',\n    1000: '¥1000'\n};\n\n// 产品模拟数据\nconst allProducts = [\n    { id: 1, price: 99, title: '商品1' },\n    { id: 2, price: 199, title: '商品2' },\n    { id: 3, price: 299, title: '商品3' },\n    { id: 4, price: 399, title: '商品4' },\n    { id: 5, price: 499, title: '商品5' },\n    { id: 6, price: 599, title: '商品6' },\n];\n\n// 根据价格筛选商品\nconst filteredProducts = computed(() => {\n    return allProducts.filter(product =>\n        product.price >= priceRange.value[0] && product.price <= priceRange.value[1]\n    );\n});\n\n// 垂直滑块\nconst verticalValue = ref(30);\nconst verticalMarksValue = ref(50);\nconst verticalRangeValue = ref([25, 75]);\nconst verticalMarks = {\n    0: '0',\n    50: '50',\n    100: '100'\n};\n\n// 反向滑块\nconst reverseValue = ref(70);\n\n// 音量控制示例\nconst volumeValue = ref(60);\nconst formatPercent = (value: number) => `${value}%`;\n\n// 自动动画示例\nconst animatedValue = ref(30);\nconst isAnimating = ref(false);\nlet animationTimer: number | null = null;\nlet animationDirection = 1;\n\n// 控制动画\nconst toggleAnimation = () => {\n    if (isAnimating.value) {\n        // 停止动画\n        if (animationTimer !== null) {\n            clearInterval(animationTimer);\n            animationTimer = null;\n        }\n        isAnimating.value = false;\n    } else {\n        // 开始动画\n        isAnimating.value = true;\n        animationTimer = window.setInterval(() => {\n            if (animatedValue.value >= 100) animationDirection = -1;\n            if (animatedValue.value <= 0) animationDirection = 1;\n\n            animatedValue.value += 10 * animationDirection;\n        }, 600);\n    }\n};\n\n// 组件卸载时清除定时器\nonUnmounted(() => {\n    if (animationTimer !== null) {\n        clearInterval(animationTimer);\n    }\n});\n\n// 温度颜色计算\nconst getTemperatureClass = (temp: number) => {\n    if (temp < 20) return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100';\n    if (temp < 40) return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100';\n    if (temp < 70) return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-100';\n    return 'bg-red-500 text-white dark:bg-red-600';\n};\n\n// 价格格式化\nconst formatPrice = (value: number) => `¥${value}`;\n\n// 格式化函数\nconst formatDefault = (value: number) => `${value}`;\nconst formatAge = (value: number) => `${value}岁`;\n\n// 主题展示用值\nconst lightThemeValue1 = ref(30);\nconst lightThemeValue2 = ref([20, 60]);\nconst lightThemeValue3 = ref(75);\nconst darkThemeValue1 = ref(40);\nconst darkThemeValue2 = ref([30, 70]);\nconst darkThemeValue3 = ref(85);\n</script>\n\n<style scoped>\n/* 自定义滑块颜色 - 仅修改填充部分的颜色 */\n.slider-blue .bg-blue-500 {\n    background-color: #3b82f6; /* bg-blue-500 */\n}\n\n.slider-blue .bg-blue-500.dark {\n    background-color: #60a5fa; /* dark:bg-blue-400 */\n}\n\n.slider-green .bg-blue-500 {\n    background-color: #22c55e; /* bg-green-500 */\n}\n\n.slider-green .bg-blue-500.dark {\n    background-color: #34d399; /* dark:bg-green-400 */\n}\n\n.slider-indigo .bg-blue-500 {\n    background-color: #6366f1; /* bg-indigo-500 */\n}\n\n.slider-indigo .bg-blue-500.dark {\n    background-color: #818cf8; /* dark:bg-indigo-400 */\n}\n</style>"],"names":["defineComponent","name","inheritAttrs","props","min","type","Number","default","max","step","Object","modelValue","Array","range","Boolean","vertical","disabled","reverse","dots","included","marks","tipFormatter","Function","String","value","tooltipPlacement","tooltipOpen","autofocus","emits","setup","emit","attrs","sliderRef","ref","isDragging","activeThumbIndex","hovering","tooltipVisible","currentValue","computed","isArray","valueToPercent","percentToValue","percent","Math","round","thumbPercents","map","trackStyle","bottom","height","abs","right","width","left","getThumbStyle","index","top","getTooltipPlacement","handleSliderClick","e","sliderRect","getBoundingClientRect","offsetY","clientY","offsetX","clientX","newValue","values","dist1","dist2","handleThumbMouseDown","preventDefault","onMouseMove","moveEvent","onMouseUp","document","removeEventListener","addEventListener","handleMouseEnter","handleMouseLeave","renderMarks","keys","length","markValues","minMarkValue","maxMarkValue","_createVNode","entries","markValue","mark","markNum","parseFloat","isEndPoint","markPosition","specialAlignment","marginLeft","transform","marginRight","marginTop","markContent","label","markStyle","style","markClasses","renderDots","numSteps","floor","i","isActive","minVal","maxVal","currentVal","dotPosition","dotKey","push","onMounted","nextTick","focus","watch","currentDisplay","display","offsetHeight","deep","safeTipFormatter","result","error","console","warn","computedDots","undefined","_","basicValue","stepValue","marksValue","temperatureMarks","dotsValue","dotsMarks","rangeValue","priceRange","priceMarks","allProducts","filteredProducts","product","verticalValue","verticalMarksValue","verticalRangeValue","verticalMarks","reverseValue","volumeValue","formatPercent","animatedValue","isAnimating","animationTimer","animationDirection","toggleAnimation","onUnmounted","getTemperatureClass","temp","formatPrice","formatDefault","lightThemeValue1","lightThemeValue2","lightThemeValue3","darkThemeValue1","darkThemeValue2","darkThemeValue3"],"mappings":"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"}