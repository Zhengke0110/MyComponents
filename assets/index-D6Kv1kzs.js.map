{"version":3,"file":"index-D6Kv1kzs.js","sources":["../../src/libs/Divider/Divider.tsx","../../src/libs/Divider/View.vue"],"sourcesContent":["import { defineComponent, PropType, computed, CSSProperties } from 'vue'\n\nexport type DividerType = 'horizontal' | 'vertical'\nexport type DividerAlign = 'left' | 'right' | 'center'\nexport type DividerTheme = 'light' | 'dark' | 'auto'\n\nexport interface DividerProps {\n  type?: DividerType\n  align?: DividerAlign\n  dashed?: boolean\n  plain?: boolean\n  borderWidth?: number | string\n  className?: string\n  textClassName?: string\n  borderStyle?: string\n  borderColor?: string\n  animated?: boolean | 'hover' | 'always'\n  animationDuration?: number\n  theme?: DividerTheme\n  orientation?: 'center' | 'left' | 'right'\n  orientationMargin?: string | number\n  styles?: CSSProperties\n}\n\nconst Divider = defineComponent({\n  name: 'Divider',\n  props: {\n    type: {\n      type: String as PropType<DividerType>,\n      default: 'horizontal'\n    },\n    align: {\n      type: String as PropType<DividerAlign>,\n      default: 'center'\n    },\n    dashed: {\n      type: Boolean,\n      default: false\n    },\n    plain: {\n      type: Boolean,\n      default: false\n    },\n    borderWidth: {\n      type: [Number, String],\n      default: 1\n    },\n    className: {\n      type: String,\n      default: ''\n    },\n    textClassName: {\n      type: String,\n      default: ''\n    },\n    borderStyle: {\n      type: String,\n      default: 'solid'\n    },\n    borderColor: {\n      type: String,\n      default: ''\n    },\n    animated: {\n      type: [Boolean, String] as PropType<boolean | 'hover' | 'always'>,\n      default: false\n    },\n    animationDuration: {\n      type: Number,\n      default: 300\n    },\n    theme: {\n      type: String as PropType<DividerTheme>,\n      default: 'auto'\n    },\n    orientation: {\n      type: String as PropType<'center' | 'left' | 'right'>,\n      default: 'center'\n    },\n    orientationMargin: {\n      type: [String, Number],\n      default: 0\n    },\n    styles: {\n      type: Object as PropType<CSSProperties>,\n      default: () => ({})\n    }\n  },\n  setup(props, { slots }) {\n    const hasSlots = computed(() => !!slots.default)\n    \n    // 计算分割线的主要类名\n    const dividerClass = computed(() => {\n      const classes = [\n        'divider',\n        `divider-${props.type}`,\n        props.className,\n        props.dashed ? 'border-dashed' : '',\n        'transition-all'\n      ]\n      \n      // 处理主题样式\n      if (props.theme === 'dark') {\n        classes.push('divider-dark')\n      } else if (props.theme === 'auto') {\n        classes.push('dark:border-gray-600', 'dark:text-gray-300')\n      }\n      \n      // 处理动画类\n      if (props.animated) {\n        if (props.animated === 'always') {\n          classes.push('divider-animated-always')\n        } else if (props.animated === 'hover') {\n          classes.push('divider-animated-hover')\n        } else {\n          classes.push('divider-animated')\n        }\n      }\n      \n      // 处理排版相关类\n      if (props.type === 'horizontal') {\n        classes.push('flex', 'items-center', 'w-full', 'my-4')\n        if (hasSlots.value) {\n          classes.push(`divider-text-${props.align || props.orientation}`)\n        }\n      } else {\n        classes.push('inline-block', 'h-full', 'mx-2', 'align-middle')\n      }\n      \n      return classes.filter(Boolean).join(' ')\n    })\n    \n    // 计算分割线的样式\n    const lineStyle = computed(() => {\n      const style: Record<string, string | number> = {\n        ...props.styles,\n        borderWidth: typeof props.borderWidth === 'number' ? `${props.borderWidth}px` : props.borderWidth,\n        borderStyle: props.dashed ? 'dashed' : props.borderStyle\n      }\n      \n      if (props.borderColor) {\n        style.borderColor = props.borderColor\n      }\n      \n      if (props.animated) {\n        style.transitionDuration = `${props.animationDuration}ms`\n      }\n      \n      return style\n    })\n    \n    // 计算文本部分的类名\n    const textClass = computed(() => [\n      'divider-text',\n      'px-3',\n      'text-sm',\n      props.plain ? 'font-normal' : 'font-medium',\n      'text-gray-500',\n      'dark:text-gray-400',\n      props.textClassName\n    ].filter(Boolean).join(' '))\n\n    // 计算方向边距\n    const getMarginStyle = computed(() => {\n      if (props.orientation !== 'center' && typeof props.orientationMargin === 'number') {\n        return props.orientation === 'left' \n          ? { marginLeft: `${props.orientationMargin}px` }\n          : { marginRight: `${props.orientationMargin}px` }\n      } else if (props.orientation !== 'center' && typeof props.orientationMargin === 'string') {\n        return props.orientation === 'left'\n          ? { marginLeft: props.orientationMargin }\n          : { marginRight: props.orientationMargin }\n      }\n      return {}\n    })\n\n    return () => {\n      // 水平分割线\n      if (props.type === 'horizontal') {\n        // 带文本的水平分割线\n        if (hasSlots.value) {\n          const align = props.align || props.orientation\n          return (\n            <div class={dividerClass.value} role=\"separator\" aria-orientation=\"horizontal\">\n              {align !== 'right' && (\n                <div \n                  class=\"flex-grow border-t dark:border-gray-600 transition-all\" \n                  style={{...lineStyle.value}}\n                ></div>\n              )}\n              <div class={textClass.value} style={getMarginStyle.value}>\n                {slots.default?.()}\n              </div>\n              {align !== 'left' && (\n                <div \n                  class=\"flex-grow border-t dark:border-gray-600 transition-all\" \n                  style={{...lineStyle.value}}\n                ></div>\n              )}\n            </div>\n          )\n        } \n        // 无文本的水平分割线\n        else {\n          return (\n            <div \n              class={`${dividerClass.value} border-t dark:border-gray-600`} \n              style={lineStyle.value} \n              role=\"separator\" \n              aria-orientation=\"horizontal\"\n            ></div>\n          )\n        }\n      } \n      // 垂直分割线\n      else {\n        return (\n          <div \n            class={`${dividerClass.value} border-l dark:border-gray-600`} \n            style={lineStyle.value} \n            role=\"separator\" \n            aria-orientation=\"vertical\"\n          ></div>\n        )\n      }\n    }\n  }\n})\n\nexport default Divider\n","<template>\n    <div class=\"divider-demo p-6\">\n        <h2 class=\"text-xl font-bold mb-4 dark:text-white\">基本使用</h2>\n\n        <Divider />\n\n        <h2 class=\"text-xl font-bold my-4 dark:text-white\">带文字的分割线</h2>\n\n        <Divider>默认居中</Divider>\n        <Divider align=\"left\">左对齐</Divider>\n        <Divider align=\"right\">右对齐</Divider>\n\n        <h2 class=\"text-xl font-bold my-4 dark:text-white\">自定义样式</h2>\n\n        <Divider dashed />\n        <Divider :borderWidth=\"2\" borderColor=\"#1890ff\">自定义颜色和宽度</Divider>\n        <Divider dashed plain>虚线和普通文本</Divider>\n\n        <h2 class=\"text-xl font-bold my-4 dark:text-white\">垂直分割线</h2>\n\n        <div class=\"h-10 flex items-center\">\n            文本\n            <Divider type=\"vertical\" />\n            <a href=\"#\" class=\"text-blue-500\">链接</a>\n            <Divider type=\"vertical\" />\n            <a href=\"#\" class=\"text-blue-500\">链接</a>\n        </div>\n\n        <h2 class=\"text-xl font-bold my-4 dark:text-white\">带动画效果</h2>\n\n        <Divider animated>鼠标悬停动画</Divider>\n        <Divider animated=\"always\">持续动画</Divider>\n        <Divider animated=\"hover\">交互动画</Divider>\n        \n        <h2 class=\"text-xl font-bold my-4 dark:text-white\">方向与边距</h2>\n        \n        <Divider orientation=\"left\" :orientationMargin=\"20\">左侧定制边距</Divider>\n        <Divider orientation=\"right\" orientationMargin=\"40px\">右侧定制边距</Divider>\n        \n        <h2 class=\"text-xl font-bold my-4 dark:text-white\">主题设置</h2>\n        \n        <Divider theme=\"light\">浅色主题</Divider>\n        <Divider theme=\"dark\">深色主题</Divider>\n        <Divider theme=\"auto\">自动主题（跟随系统）</Divider>\n\n        <!-- API 文档部分 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">组件API</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">属性 (Props)</h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">属性名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">类型</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">默认值</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">type</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'horizontal' | 'vertical'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'horizontal'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">分割线类型：水平或垂直</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">align</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'left' | 'right' | 'center'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'center'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">文本对齐方式（水平分割线）</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">dashed</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否使用虚线</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">plain</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">文字是否为普通样式</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">borderWidth</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">number | string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">1</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">分割线宽度</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">borderStyle</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'solid'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">边框样式</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">borderColor</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">边框颜色</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">animated</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean | 'hover' | 'always'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">动画效果类型</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">animationDuration</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">number</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">300</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">动画持续时间（毫秒）</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">theme</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'light' | 'dark' | 'auto'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'auto'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">主题样式</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">orientation</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'center' | 'left' | 'right'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'center'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">文本定位方向</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">orientationMargin</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string | number</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">0</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">文本定位边距</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">className</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义容器类名</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">textClassName</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义文本类名</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">styles</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">CSSProperties</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">{}</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义行内样式</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">插槽 (Slots)</h3>\n                <div class=\"overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">插槽名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">default</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">分割线中间的内容</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section>\n\n        <!-- 主题设置工具使用说明 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">主题设置与暗色模式</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <p class=\"mb-4 text-sm text-gray-600 dark:text-gray-300\">\n                    Divider 组件内置了对暗色模式的支持，可通过以下方式控制：\n                </p>\n\n                <div class=\"mb-4\">\n                    <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">1. 使用 theme 属性</h3>\n                    <p class=\"mb-2 text-sm text-gray-600 dark:text-gray-300\">\n                        直接在组件上设置 <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">theme</code> 属性：\n                    </p>\n                    <ul class=\"ml-5 list-disc space-y-1 text-sm text-gray-600 dark:text-gray-300\">\n                        <li><code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">light</code> - 始终使用浅色主题</li>\n                        <li><code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">dark</code> - 始终使用深色主题</li>\n                        <li><code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">auto</code> - 根据页面的 <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">dark</code> 类自动切换</li>\n                    </ul>\n                </div>\n\n                <div class=\"mb-4\">\n                    <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">2. 使用全局暗色模式</h3>\n                    <p class=\"text-sm text-gray-600 dark:text-gray-300\">\n                        当 <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">theme=\"auto\"</code> 时，组件会检测页面根元素是否有 <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">dark</code> 类，并自动应用对应样式。\n                    </p>\n                </div>\n\n                <div\n                    class=\"rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20\">\n                    <h4 class=\"mb-2 flex items-center text-blue-800 dark:text-blue-300\">\n                        <span class=\"icon-[material-symbols--info-outline-rounded] mr-2 h-5 w-5\"></span>\n                        暗色模式提示\n                    </h4>\n                    <p class=\"text-sm text-blue-700 dark:text-blue-300\">\n                        使用全局主题API可以轻松切换暗色模式：<code\n                            class=\"rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60\">toggleDark()</code>\n                        函数或 <code\n                            class=\"rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60\">isDark.value</code>\n                        响应式变量。\n                    </p>\n                </div>\n            </div>\n        </section>\n\n        <!-- 小结与最佳实践 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">小结与最佳实践</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <div class=\"space-y-4\">\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        Divider 分割线组件是一个简单但实用的布局辅助组件，可用于内容分区、视觉分隔和信息层级划分。\n                        以下是一些使用建议：\n                    </p>\n\n                    <ul class=\"ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300\">\n                        <li>使用水平分割线（<code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">type=\"horizontal\"</code>）分隔不同章节的内容</li>\n                        <li>使用垂直分割线（<code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">type=\"vertical\"</code>）分隔行内元素，如操作按钮</li>\n                        <li>为长文本内容设置带文字的分割线，提高内容的可读性和结构化</li>\n                        <li>在信息密集的界面使用<code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">dashed</code>虚线样式，减轻视觉负担</li>\n                        <li>利用<code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">align</code>或<code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800\">orientation</code>属性调整文字位置，增强布局的灵活性</li>\n                    </ul>\n\n                    <div class=\"rounded-lg border border-gray-100 bg-gray-50 p-4 dark:border-gray-700 dark:bg-gray-800/50\">\n                        <h4 class=\"mb-2 flex items-center text-gray-700 dark:text-gray-300\">\n                            <span class=\"icon-[material-symbols--tips-and-updates-outline-rounded] mr-2 h-5 w-5\"></span>\n                            设计建议\n                        </h4>\n                        <p class=\"text-sm text-gray-600 dark:text-gray-400\">\n                            保持分割线的视觉一致性对于建立清晰的信息层级至关重要。建议：\n                        </p>\n                        <ul class=\"mt-2 ml-5 list-disc space-y-1 text-sm text-gray-600 dark:text-gray-400\">\n                            <li>在同一页面中保持分割线样式的一致性</li>\n                            <li>使用细线（1px）作为默认宽度，保持界面的轻量感</li>\n                            <li>为相关内容组使用相同样式的分割线</li>\n                            <li>考虑在深色模式下适当降低分割线的对比度</li>\n                        </ul>\n                    </div>\n\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        分割线虽然简单，但在布局设计中起着重要的结构化作用。合理使用分割线可以有效提升内容的可读性和页面的整体层次感。\n                    </p>\n\n                    <div class=\"rounded-lg border border-green-100 bg-green-50 p-4 dark:border-green-900 dark:bg-green-900/20\">\n                        <h4 class=\"mb-2 flex items-center text-green-800 dark:text-green-300\">\n                            <span class=\"icon-[material-symbols--check-circle-outline-rounded] mr-2 h-5 w-5\"></span>\n                            可访问性提示\n                        </h4>\n                        <p class=\"text-sm text-green-700 dark:text-green-300\">\n                            Divider 组件已内置 <code class=\"rounded bg-green-100 px-1 py-0.5 font-mono dark:bg-green-800/60\">role=\"separator\"</code> 和 \n                            <code class=\"rounded bg-green-100 px-1 py-0.5 font-mono dark:bg-green-800/60\">aria-orientation</code> 属性，\n                            符合 WCAG 可访问性标准，帮助屏幕阅读器用户理解页面结构。\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport Divider from './Divider'\n\nexport default defineComponent({\n    name: 'DividerDemo',\n    components: {\n        Divider\n    }\n})\n</script>\n\n<style>\n.divider-animated:hover {\n    opacity: 0.8;\n    transform: scaleY(1.2);\n}\n\n.divider-animated-hover:hover {\n    opacity: 0.8;\n    transform: scaleY(1.2);\n}\n\n.divider-animated-always {\n    animation: divider-pulse 2s infinite alternate;\n}\n\n@keyframes divider-pulse {\n    0% {\n        opacity: 0.7;\n    }\n    100% {\n        opacity: 1;\n    }\n}\n\n.divider-horizontal {\n    border-top-width: 1px;\n    border-top-style: inherit;\n    border-color: rgba(0, 0, 0, 0.1);\n}\n\n.divider-vertical {\n    height: 1em;\n    border-left-width: 1px;\n    border-left-style: inherit;\n    border-color: rgba(0, 0, 0, 0.1);\n}\n\n.dark .divider-horizontal,\n.dark .divider-vertical {\n    border-color: rgba(255, 255, 255, 0.1);\n}\n\n.divider-dark {\n    border-color: rgba(255, 255, 255, 0.2);\n    color: rgba(255, 255, 255, 0.85);\n}\n\n.divider-dark .divider-text {\n    color: rgba(255, 255, 255, 0.85);\n}\n</style>\n"],"names":["Divider","defineComponent","name","props","type","String","default","align","dashed","Boolean","plain","borderWidth","Number","className","textClassName","borderStyle","borderColor","animated","animationDuration","theme","orientation","orientationMargin","styles","Object","setup","slots","hasSlots","computed","dividerClass","classes","push","value","filter","join","lineStyle","style","transitionDuration","textClass","getMarginStyle","marginLeft","marginRight","_createVNode","_sfc_main","_component_Divider","_resolveComponent","_openBlock","_createElementBlock","_hoisted_1","_cache","_createElementVNode","_withCtx","_createTextVNode","_hoisted_2"],"mappings":"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"}