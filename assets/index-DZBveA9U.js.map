{"version":3,"file":"index-DZBveA9U.js","sources":["../../node_modules/.pnpm/dayjs@1.11.13/node_modules/dayjs/plugin/customParseFormat.js","../../src/libs/TimePicker/TimePicker.tsx","../../src/libs/TimePicker/View.vue"],"sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_customParseFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},t=/(\\[[^[]*\\])|([-_:/.,()\\s]+)|(A|a|Q|YYYY|YY?|ww?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\\d/,r=/\\d\\d/,i=/\\d\\d?/,o=/\\d*[^-_:/,()\\s\\d]+/,s={},a=function(e){return(e=+e)+(e>68?1900:2e3)};var f=function(e){return function(t){this[e]=+t}},h=[/[+-]\\d\\d:?(\\d\\d)?|Z/,function(e){(this.zone||(this.zone={})).offset=function(e){if(!e)return 0;if(\"Z\"===e)return 0;var t=e.match(/([+-]|\\d\\d)/g),n=60*t[1]+(+t[2]||0);return 0===n?0:\"+\"===t[0]?-n:n}(e)}],u=function(e){var t=s[e];return t&&(t.indexOf?t:t.s.concat(t.f))},d=function(e,t){var n,r=s.meridiem;if(r){for(var i=1;i<=24;i+=1)if(e.indexOf(r(i,0,t))>-1){n=i>12;break}}else n=e===(t?\"pm\":\"PM\");return n},c={A:[o,function(e){this.afternoon=d(e,!1)}],a:[o,function(e){this.afternoon=d(e,!0)}],Q:[n,function(e){this.month=3*(e-1)+1}],S:[n,function(e){this.milliseconds=100*+e}],SS:[r,function(e){this.milliseconds=10*+e}],SSS:[/\\d{3}/,function(e){this.milliseconds=+e}],s:[i,f(\"seconds\")],ss:[i,f(\"seconds\")],m:[i,f(\"minutes\")],mm:[i,f(\"minutes\")],H:[i,f(\"hours\")],h:[i,f(\"hours\")],HH:[i,f(\"hours\")],hh:[i,f(\"hours\")],D:[i,f(\"day\")],DD:[r,f(\"day\")],Do:[o,function(e){var t=s.ordinal,n=e.match(/\\d+/);if(this.day=n[0],t)for(var r=1;r<=31;r+=1)t(r).replace(/\\[|\\]/g,\"\")===e&&(this.day=r)}],w:[i,f(\"week\")],ww:[r,f(\"week\")],M:[i,f(\"month\")],MM:[r,f(\"month\")],MMM:[o,function(e){var t=u(\"months\"),n=(u(\"monthsShort\")||t.map((function(e){return e.slice(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[o,function(e){var t=u(\"months\").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\\d+/,f(\"year\")],YY:[r,function(e){this.year=a(e)}],YYYY:[/\\d{4}/,f(\"year\")],Z:h,ZZ:h};function l(n){var r,i;r=n,i=s&&s.formats;for(var o=(n=r.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var o=r&&r.toUpperCase();return n||i[r]||e[r]||i[o].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}))).match(t),a=o.length,f=0;f<a;f+=1){var h=o[f],u=c[h],d=u&&u[0],l=u&&u[1];o[f]=l?{regex:d,parser:l}:h.replace(/^\\[|\\]$/g,\"\")}return function(e){for(var t={},n=0,r=0;n<a;n+=1){var i=o[n];if(\"string\"==typeof i)r+=i.length;else{var s=i.regex,f=i.parser,h=e.slice(r),u=s.exec(h)[0];f.call(t,u),e=e.replace(u,\"\")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}return function(e,t,n){n.p.customParseFormat=!0,e&&e.parseTwoDigitYear&&(a=e.parseTwoDigitYear);var r=t.prototype,i=r.parse;r.parse=function(e){var t=e.date,r=e.utc,o=e.args;this.$u=r;var a=o[1];if(\"string\"==typeof a){var f=!0===o[2],h=!0===o[3],u=f||h,d=o[2];h&&(d=o[2]),s=this.$locale(),!f&&d&&(s=n.Ls[d]),this.$d=function(e,t,n,r){try{if([\"x\",\"X\"].indexOf(t)>-1)return new Date((\"X\"===t?1e3:1)*e);var i=l(t)(e),o=i.year,s=i.month,a=i.day,f=i.hours,h=i.minutes,u=i.seconds,d=i.milliseconds,c=i.zone,m=i.week,M=new Date,Y=a||(o||s?1:M.getDate()),p=o||M.getFullYear(),v=0;o&&!s||(v=s>0?s-1:M.getMonth());var D,w=f||0,g=h||0,y=u||0,L=d||0;return c?new Date(Date.UTC(p,v,Y,w,g,y,L+60*c.offset*1e3)):n?new Date(Date.UTC(p,v,Y,w,g,y,L)):(D=new Date(p,v,Y,w,g,y,L),m&&(D=r(D).week(m).toDate()),D)}catch(e){return new Date(\"\")}}(t,a,r,n),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),u&&t!=this.format(a)&&(this.$d=new Date(\"\")),s={}}else if(a instanceof Array)for(var c=a.length,m=1;m<=c;m+=1){o[1]=a[m-1];var M=n.apply(this,o);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===c&&(this.$d=new Date(\"\"))}else i.call(this,e)}}}));","import { defineComponent, ref, computed, watch, PropType, onMounted, onBeforeUnmount, Teleport, Transition, h, nextTick } from 'vue';\nimport dayjs, { Dayjs } from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\n\n// 注册 dayjs 插件\ndayjs.extend(customParseFormat);\n\n// 禁用时间类型\ntype DisabledTime = (now: Dayjs) => {\n    disabledHours?: () => number[];\n    disabledMinutes?: (selectedHour: number) => number[];\n    disabledSeconds?: (selectedHour: number, selectedMinute: number) => number[];\n};\n\n// 时间单位类型\ntype TimeUnit = 'hour' | 'minute' | 'second' | 'ampm';\n\n// 弹出位置类型\ntype Placement = 'bottomLeft' | 'bottomRight' | 'topLeft' | 'topRight';\n\n// 状态类型\ntype Status = 'error' | 'warning' | '';\n\n// 时间选项接口\ninterface TimeOption {\n    label: string;\n    value: number;\n    disabled: boolean;\n}\n\n/**\n * TimePicker 组件\n */\nexport const TimePicker = defineComponent({\n    name: 'TimePicker',\n    props: {\n        // 是否展示清除按钮\n        allowClear: {\n            type: Boolean,\n            default: true,\n        },\n        // 自动获取焦点\n        autofocus: {\n            type: Boolean,\n            default: false,\n        },\n        // 是否有边框\n        bordered: {\n            type: Boolean,\n            default: true,\n        },\n        // 清除按钮的提示文案\n        clearText: {\n            type: String,\n            default: '清除',\n        },\n        // 是否禁用\n        disabled: {\n            type: Boolean,\n            default: false,\n        },\n        // 不可选择的时间\n        disabledTime: {\n            type: Function as PropType<DisabledTime>,\n            default: undefined,\n        },\n        // 展示的时间格式\n        format: {\n            type: String,\n            default: 'HH:mm:ss',\n        },\n        // 定义浮层的容器\n        getPopupContainer: {\n            type: Function as PropType<(trigger: HTMLElement) => HTMLElement>,\n            default: undefined,\n        },\n        // 隐藏禁止选择的选项\n        hideDisabledOptions: {\n            type: Boolean,\n            default: false,\n        },\n        // 小时选项间隔\n        hourStep: {\n            type: Number,\n            default: 1,\n        },\n        // 设置输入框为只读\n        inputReadOnly: {\n            type: Boolean,\n            default: false,\n        },\n        // 分钟选项间隔\n        minuteStep: {\n            type: Number,\n            default: 1,\n        },\n        // 面板是否打开\n        open: {\n            type: Boolean,\n            default: undefined,\n        },\n        // 占位符\n        placeholder: {\n            type: String,\n            default: '请选择时间',\n        },\n        // 选择框弹出的位置\n        placement: {\n            type: String as PropType<Placement>,\n            default: 'bottomLeft',\n        },\n        // 弹出层类名\n        popupClassName: {\n            type: String,\n            default: '',\n        },\n        // 弹出层样式对象\n        popupStyle: {\n            type: Object,\n            default: () => ({}),\n        },\n        // 秒选项间隔\n        secondStep: {\n            type: Number,\n            default: 1,\n        },\n        // 面板是否显示\"此刻\"按钮\n        showNow: {\n            type: Boolean,\n            default: true,\n        },\n        // 设置校验状态\n        status: {\n            type: String as PropType<Status>,\n            default: '',\n        },\n        // 使用 12 小时制\n        use12Hours: {\n            type: Boolean,\n            default: false,\n        },\n        // 当前时间\n        value: {\n            type: [Object, String] as PropType<Dayjs | string>,\n            default: undefined,\n        },\n        // 绑定值的格式\n        valueFormat: {\n            type: String,\n            default: '',\n        },\n        // v-model 绑定值\n        modelValue: {\n            type: [Object, String] as PropType<Dayjs | string>,\n            default: undefined,\n        },\n    },\n    emits: ['change', 'update:modelValue', 'openChange'],\n    setup(props, { emit, slots, expose }) {\n        // 内部状态\n        const innerOpen = ref(false);\n        const innerValue = ref<Dayjs | null>(null);\n        const inputRef = ref<HTMLInputElement | null>(null);\n        const timePickerRef = ref<HTMLDivElement | null>(null);\n        const popperRef = ref<HTMLDivElement | null>(null);\n        const activePanel = ref<TimeUnit>('hour');\n        const hoveredValue = ref<string | null>(null);\n\n        // 计算是否使用受控模式打开弹窗\n        const isOpenControlled = computed(() => props.open !== undefined);\n\n        // 计算实际的 open 状态\n        const isOpen = computed(() => (isOpenControlled.value ? props.open : innerOpen.value));\n\n        // 计算格式化字符串\n        const formatString = computed(() => {\n            if (props.use12Hours && props.format === 'HH:mm:ss') {\n                return 'hh:mm:ss a';\n            }\n            return props.format;\n        });\n\n        // 初始化值\n        watch(\n            () => props.modelValue || props.value,\n            (val) => {\n                if (val) {\n                    try {\n                        if (typeof val === 'string') {\n                            innerValue.value = props.valueFormat\n                                ? dayjs(val, props.valueFormat)\n                                : dayjs(val, formatString.value);\n                        } else {\n                            innerValue.value = val;\n                        }\n                    } catch (e) {\n                        console.error('Invalid time value:', val);\n                        innerValue.value = null;\n                    }\n                } else {\n                    innerValue.value = null;\n                }\n            },\n            { immediate: true }\n        );\n\n        // 生成时间选项\n        const generateOptions = (\n            unit: 'hour' | 'minute' | 'second',\n            step: number = 1,\n            disabledFn?: (value: number) => boolean\n        ): TimeOption[] => {\n            const options: TimeOption[] = [];\n\n            const max = unit === 'hour' ? (props.use12Hours ? 11 : 23) : 59;\n            const min = unit === 'hour' && props.use12Hours ? 0 : 0;\n\n            for (let i = min; i <= max; i += step) {\n                const disabled = disabledFn ? disabledFn(i) : false;\n\n                if (props.hideDisabledOptions && disabled) {\n                    continue;\n                }\n\n                let label = i.toString().padStart(2, '0');\n                if (unit === 'hour' && props.use12Hours) {\n                    label = i === 0 ? '12' : i.toString();\n                }\n\n                options.push({\n                    label,\n                    value: i,\n                    disabled,\n                });\n            }\n\n            return options;\n        };\n\n        // 计算小时选项\n        const hourOptions = computed(() => {\n            let disabledHours: number[] = [];\n\n            if (props.disabledTime && innerValue.value) {\n                const disabledTimeFn = props.disabledTime(innerValue.value);\n                if (disabledTimeFn.disabledHours) {\n                    disabledHours = disabledTimeFn.disabledHours();\n                }\n            }\n\n            return generateOptions(\n                'hour',\n                props.hourStep,\n                (hour) => disabledHours.includes(hour)\n            );\n        });\n\n        // 计算分钟选项\n        const minuteOptions = computed(() => {\n            let disabledMinutes: number[] = [];\n\n            if (props.disabledTime && innerValue.value) {\n                const hour = innerValue.value.hour();\n                const disabledTimeFn = props.disabledTime(innerValue.value);\n                if (disabledTimeFn.disabledMinutes) {\n                    disabledMinutes = disabledTimeFn.disabledMinutes(hour);\n                }\n            }\n\n            return generateOptions(\n                'minute',\n                props.minuteStep,\n                (minute) => disabledMinutes.includes(minute)\n            );\n        });\n\n        // 计算秒选项\n        const secondOptions = computed(() => {\n            let disabledSeconds: number[] = [];\n\n            if (props.disabledTime && innerValue.value) {\n                const hour = innerValue.value.hour();\n                const minute = innerValue.value.minute();\n                const disabledTimeFn = props.disabledTime(innerValue.value);\n                if (disabledTimeFn.disabledSeconds) {\n                    disabledSeconds = disabledTimeFn.disabledSeconds(hour, minute);\n                }\n            }\n\n            return generateOptions(\n                'second',\n                props.secondStep,\n                (second) => disabledSeconds.includes(second)\n            );\n        });\n\n        // 计算上午/下午选项\n        const ampmOptions = computed(() => {\n            return [\n                { label: '上午', value: 0, disabled: false },\n                { label: '下午', value: 1, disabled: false },\n            ];\n        });\n\n        // 格式化显示值\n        const displayValue = computed(() => {\n            if (!innerValue.value) return '';\n            return innerValue.value.format(formatString.value);\n        });\n\n        // 处理输入框点击\n        const handleInputClick = () => {\n            if (props.disabled) return;\n            if (!isOpenControlled.value) {\n                innerOpen.value = true;\n            }\n            emit('openChange', true);\n        };\n\n        // 处理聚焦\n        const handleFocus = () => {\n            if (props.disabled || props.inputReadOnly) return;\n            if (props.autofocus && !isOpen.value) {\n                handleInputClick();\n            }\n        };\n\n        // 处理清除\n        const handleClear = (e: Event) => {\n            e.stopPropagation();\n\n            const prevValue = innerValue.value;\n            innerValue.value = null;\n\n            // 触发变更事件\n            emitChange(null);\n\n            if (!isOpenControlled.value) {\n                innerOpen.value = false;\n            }\n            emit('openChange', false);\n        };\n\n        // 处理时间选择\n        const handleTimeSelect = (value: number, unit: TimeUnit) => {\n            if (!innerValue.value) {\n                innerValue.value = dayjs();\n            }\n\n            let newValue = innerValue.value.clone();\n\n            if (unit === 'hour') {\n                if (props.use12Hours) {\n                    const isPM = newValue.hour() >= 12;\n                    const hour = value + (isPM ? 12 : 0);\n                    newValue = newValue.hour(hour);\n                } else {\n                    newValue = newValue.hour(value);\n                }\n                activePanel.value = 'minute';\n            } else if (unit === 'minute') {\n                newValue = newValue.minute(value);\n                activePanel.value = 'second';\n            } else if (unit === 'second') {\n                newValue = newValue.second(value);\n                activePanel.value = props.use12Hours ? 'ampm' : 'hour';\n            } else if (unit === 'ampm') {\n                const hour = newValue.hour() % 12;\n                newValue = newValue.hour(value === 1 ? hour + 12 : hour);\n                activePanel.value = 'hour';\n            }\n\n            innerValue.value = newValue;\n\n            // 如果所有面板都已选择，自动关闭面板并触发变更事件\n            if (unit === 'second' && !props.use12Hours) {\n                closePanel();\n                emitChange(newValue);\n            } else if (unit === 'ampm' && props.use12Hours) {\n                closePanel();\n                emitChange(newValue);\n            }\n        };\n\n        // 处理当前时间选择\n        const handleNowClick = () => {\n            const now = dayjs();\n            innerValue.value = now;\n            emitChange(now);\n            closePanel();\n        };\n\n        // 处理面板确认\n        const handleConfirm = () => {\n            if (innerValue.value) {\n                emitChange(innerValue.value);\n            }\n            closePanel();\n        };\n\n        // 关闭面板\n        const closePanel = () => {\n            if (!isOpenControlled.value) {\n                innerOpen.value = false;\n            }\n            emit('openChange', false);\n        };\n\n        // 触发变更事件\n        const emitChange = (value: Dayjs | null) => {\n            if (value === null) {\n                emit('change', null, '');\n                emit('update:modelValue', null);\n                return;\n            }\n\n            const timeString = value.format(formatString.value);\n\n            if (props.valueFormat) {\n                const formattedValue = value.format(props.valueFormat);\n                emit('change', formattedValue, timeString);\n                emit('update:modelValue', formattedValue);\n            } else {\n                emit('change', value, timeString);\n                emit('update:modelValue', value);\n            }\n        };\n\n        // 处理点击外部事件\n        const handleClickOutside = (e: MouseEvent) => {\n            if (\n                isOpen.value &&\n                timePickerRef.value &&\n                !timePickerRef.value.contains(e.target as Node) &&\n                popperRef.value &&\n                !popperRef.value.contains(e.target as Node)\n            ) {\n                closePanel();\n            }\n        };\n\n        // 计算弹窗位置样式\n        const popupPositionStyle = computed(() => {\n            if (!timePickerRef.value || !isOpen.value) return {};\n\n            const rect = timePickerRef.value.getBoundingClientRect();\n            const style: Record<string, any> = { ...props.popupStyle };\n\n            // 基本位置设置\n            if (props.placement.startsWith('bottom')) {\n                style.top = `${rect.bottom}px`;\n            } else {\n                style.bottom = `${window.innerHeight - rect.top}px`;\n            }\n\n            if (props.placement.endsWith('Left')) {\n                style.left = `${rect.left}px`;\n            } else {\n                style.right = `${window.innerWidth - rect.right}px`;\n            }\n\n            return style;\n        });\n\n        // 计算状态类名\n        const statusClass = computed(() => {\n            if (!props.status) return '';\n            return `time-picker-${props.status}`;\n        });\n\n        // 计算选中时间在面板中的位置以滚动到可视区域\n        const scrollToSelected = (unit: TimeUnit) => {\n            if (!innerValue.value) return;\n\n            nextTick(() => {\n                const containerSelector = `.time-panel-${unit}`;\n                const itemSelector = `.time-option-${unit}-selected`;\n\n                const container = popperRef.value?.querySelector(containerSelector);\n                const selectedItem = popperRef.value?.querySelector(itemSelector);\n\n                if (container && selectedItem) {\n                    const containerRect = container.getBoundingClientRect();\n                    const selectedRect = selectedItem.getBoundingClientRect();\n\n                    container.scrollTop = selectedRect.top - containerRect.top - containerRect.height / 2 + selectedRect.height / 2;\n                }\n            });\n        };\n\n        // 监听面板激活状态变化，自动滚动到选中项\n        watch(activePanel, (panel) => {\n            scrollToSelected(panel);\n        });\n\n        // 监听弹窗开关状态变化\n        watch(isOpen, (open) => {\n            if (open) {\n                // 打开时，默认显示小时面板\n                activePanel.value = 'hour';\n\n                // 添加点击外部事件监听\n                document.addEventListener('mousedown', handleClickOutside);\n\n                // 延迟滚动到选中项\n                nextTick(() => {\n                    scrollToSelected(activePanel.value);\n                });\n            } else {\n                // 关闭时，移除点击外部事件监听\n                document.removeEventListener('mousedown', handleClickOutside);\n            }\n        });\n\n        // 生命周期钩子\n        onMounted(() => {\n            if (props.autofocus && inputRef.value) {\n                inputRef.value.focus();\n            }\n\n            // 初始添加点击外部事件监听\n            if (isOpen.value) {\n                document.addEventListener('mousedown', handleClickOutside);\n            }\n        });\n\n        onBeforeUnmount(() => {\n            // 移除点击外部事件监听\n            document.removeEventListener('mousedown', handleClickOutside);\n        });\n\n        // 暴露方法\n        expose({\n            focus: () => {\n                inputRef.value?.focus();\n            },\n            blur: () => {\n                inputRef.value?.blur();\n            }\n        });\n\n        // 渲染小时面板\n        const renderHourPanel = () => {\n            return (\n                <div\n                    class={`time-panel time-panel-hour max-h-56 overflow-y-auto ${activePanel.value === 'hour' ? 'block' : 'hidden'}`}\n                >\n                    <div class=\"time-panel-inner p-1\">\n                        {hourOptions.value.map(option => (\n                            <div\n                                key={`hour-${option.value}`}\n                                class={`\n                  time-option time-option-hour\n                  px-3 py-1 rounded-md mb-1 cursor-pointer text-center text-sm\n                  ${option.disabled ? 'opacity-40 cursor-not-allowed' : 'hover:bg-blue-50 dark:hover:bg-blue-900/20 hover:text-blue-600 dark:hover:text-blue-400'}\n                  ${innerValue.value && (props.use12Hours ? innerValue.value.hour() % 12 : innerValue.value.hour()) === option.value ?\n                                        'time-option-hour-selected bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 font-medium' : 'text-gray-700 dark:text-gray-300'}\n                  transition-all duration-200 transform hover:scale-[1.02]\n                `}\n                                onClick={() => !option.disabled && handleTimeSelect(option.value, 'hour')}\n                                onMouseenter={() => hoveredValue.value = `小时: ${option.label}`}\n                                onMouseleave={() => hoveredValue.value = null}\n                            >\n                                {option.label}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            );\n        };\n\n        // 渲染分钟面板\n        const renderMinutePanel = () => {\n            return (\n                <div\n                    class={`time-panel time-panel-minute max-h-56 overflow-y-auto ${activePanel.value === 'minute' ? 'block' : 'hidden'}`}\n                >\n                    <div class=\"time-panel-inner p-1\">\n                        {minuteOptions.value.map(option => (\n                            <div\n                                key={`minute-${option.value}`}\n                                class={`\n                  time-option time-option-minute\n                  px-3 py-1 rounded-md mb-1 cursor-pointer text-center text-sm\n                  ${option.disabled ? 'opacity-40 cursor-not-allowed' : 'hover:bg-blue-50 dark:hover:bg-blue-900/20 hover:text-blue-600 dark:hover:text-blue-400'}\n                  ${innerValue.value && innerValue.value.minute() === option.value ?\n                                        'time-option-minute-selected bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 font-medium' : 'text-gray-700 dark:text-gray-300'}\n                  transition-all duration-200 transform hover:scale-[1.02]\n                `}\n                                onClick={() => !option.disabled && handleTimeSelect(option.value, 'minute')}\n                                onMouseenter={() => hoveredValue.value = `分钟: ${option.label}`}\n                                onMouseleave={() => hoveredValue.value = null}\n                            >\n                                {option.label}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            );\n        };\n\n        // 渲染秒面板\n        const renderSecondPanel = () => {\n            return (\n                <div\n                    class={`time-panel time-panel-second max-h-56 overflow-y-auto ${activePanel.value === 'second' ? 'block' : 'hidden'}`}\n                >\n                    <div class=\"time-panel-inner p-1\">\n                        {secondOptions.value.map(option => (\n                            <div\n                                key={`second-${option.value}`}\n                                class={`\n                  time-option time-option-second\n                  px-3 py-1 rounded-md mb-1 cursor-pointer text-center text-sm\n                  ${option.disabled ? 'opacity-40 cursor-not-allowed' : 'hover:bg-blue-50 dark:hover:bg-blue-900/20 hover:text-blue-600 dark:hover:text-blue-400'}\n                  ${innerValue.value && innerValue.value.second() === option.value ?\n                                        'time-option-second-selected bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 font-medium' : 'text-gray-700 dark:text-gray-300'}\n                  transition-all duration-200 transform hover:scale-[1.02]\n                `}\n                                onClick={() => !option.disabled && handleTimeSelect(option.value, 'second')}\n                                onMouseenter={() => hoveredValue.value = `秒: ${option.label}`}\n                                onMouseleave={() => hoveredValue.value = null}\n                            >\n                                {option.label}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            );\n        };\n\n        // 渲染上午/下午面板\n        const renderAmPmPanel = () => {\n            if (!props.use12Hours) return null;\n\n            return (\n                <div\n                    class={`time-panel time-panel-ampm max-h-56 overflow-y-auto ${activePanel.value === 'ampm' ? 'block' : 'hidden'}`}\n                >\n                    <div class=\"time-panel-inner p-1\">\n                        {ampmOptions.value.map(option => (\n                            <div\n                                key={`ampm-${option.value}`}\n                                class={`\n                  time-option time-option-ampm\n                  px-3 py-1 rounded-md mb-1 cursor-pointer text-center text-sm\n                  ${option.disabled ? 'opacity-40 cursor-not-allowed' : 'hover:bg-blue-50 dark:hover:bg-blue-900/20 hover:text-blue-600 dark:hover:text-blue-400'}\n                  ${innerValue.value && (innerValue.value.hour() >= 12 ? 1 : 0) === option.value ?\n                                        'time-option-ampm-selected bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 font-medium' : 'text-gray-700 dark:text-gray-300'}\n                  transition-all duration-200 transform hover:scale-[1.02]\n                `}\n                                onClick={() => !option.disabled && handleTimeSelect(option.value, 'ampm')}\n                                onMouseenter={() => hoveredValue.value = option.label}\n                                onMouseleave={() => hoveredValue.value = null}\n                            >\n                                {option.label}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            );\n        };\n\n        // 渲染顶部选项卡\n        const renderTabs = () => {\n            return (\n                <div class=\"time-tabs flex border-b border-gray-200 dark:border-gray-700 mb-2\">\n                    <div\n                        class={`\n              time-tab time-tab-hour \n              px-3 py-2 font-medium text-sm cursor-pointer relative\n              ${activePanel.value === 'hour' ? 'text-blue-600 dark:text-blue-400' : 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100'}\n              transition-colors duration-200\n            `}\n                        onClick={() => (activePanel.value = 'hour')}\n                    >\n                        时\n                        {activePanel.value === 'hour' && (\n                            <div class=\"absolute bottom-0 left-0 w-full h-0.5 bg-blue-500 dark:bg-blue-400 rounded-t transition-all duration-300\"></div>\n                        )}\n                    </div>\n                    <div\n                        class={`\n              time-tab time-tab-minute \n              px-3 py-2 font-medium text-sm cursor-pointer relative\n              ${activePanel.value === 'minute' ? 'text-blue-600 dark:text-blue-400' : 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100'}\n              transition-colors duration-200\n            `}\n                        onClick={() => (activePanel.value = 'minute')}\n                    >\n                        分\n                        {activePanel.value === 'minute' && (\n                            <div class=\"absolute bottom-0 left-0 w-full h-0.5 bg-blue-500 dark:bg-blue-400 rounded-t transition-all duration-300\"></div>\n                        )}\n                    </div>\n                    <div\n                        class={`\n              time-tab time-tab-second \n              px-3 py-2 font-medium text-sm cursor-pointer relative\n              ${activePanel.value === 'second' ? 'text-blue-600 dark:text-blue-400' : 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100'}\n              transition-colors duration-200\n            `}\n                        onClick={() => (activePanel.value = 'second')}\n                    >\n                        秒\n                        {activePanel.value === 'second' && (\n                            <div class=\"absolute bottom-0 left-0 w-full h-0.5 bg-blue-500 dark:bg-blue-400 rounded-t transition-all duration-300\"></div>\n                        )}\n                    </div>\n                    {props.use12Hours && (\n                        <div\n                            class={`\n                time-tab time-tab-ampm \n                px-3 py-2 font-medium text-sm cursor-pointer relative\n                ${activePanel.value === 'ampm' ? 'text-blue-600 dark:text-blue-400' : 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100'}\n                transition-colors duration-200\n              `}\n                            onClick={() => (activePanel.value = 'ampm')}\n                        >\n                            {innerValue.value && innerValue.value.hour() >= 12 ? '下午' : '上午'}\n                            {activePanel.value === 'ampm' && (\n                                <div class=\"absolute bottom-0 left-0 w-full h-0.5 bg-blue-500 dark:bg-blue-400 rounded-t transition-all duration-300\"></div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            );\n        };\n\n        // 渲染底部操作按钮\n        const renderFooter = () => {\n            return (\n                <div class=\"time-footer flex justify-between items-center pt-2 pb-1 px-2 border-t border-gray-200 dark:border-gray-700 mt-2\">\n                    {props.showNow && (\n                        <button\n                            type=\"button\"\n                            class=\"time-now-btn text-xs px-2 py-1 rounded text-blue-600 dark:text-blue-400 hover:bg-blue-50 dark:hover:bg-blue-900/20 transition-all duration-200\"\n                            onClick={handleNowClick}\n                        >\n                            <i class=\"icon-[carbon--time] mr-1 text-xs\" />\n                            此刻\n                        </button>\n                    )}\n\n                    {slots.renderExtraFooter && (\n                        <div class=\"time-extra-footer\">\n                            {slots.renderExtraFooter()}\n                        </div>\n                    )}\n\n                    <div class=\"ml-auto\">\n                        <button\n                            type=\"button\"\n                            class=\"time-ok-btn px-3 py-1 bg-blue-500 hover:bg-blue-600 active:bg-blue-700 text-white text-xs rounded shadow-sm hover:shadow transition-all duration-200\"\n                            onClick={handleConfirm}\n                        >\n                            确定\n                        </button>\n                    </div>\n                </div>\n            );\n        };\n\n        // 渲染面板的悬停提示\n        const renderHoverTip = () => {\n            if (!hoveredValue.value) return null;\n\n            return (\n                <div class=\"absolute top-1 right-2 text-xs bg-gray-100 dark:bg-gray-700 px-1.5 py-0.5 rounded text-gray-500 dark:text-gray-400 transition-opacity duration-200 opacity-80\">\n                    {hoveredValue.value}\n                </div>\n            );\n        };\n\n        // 渲染弹出内容\n        const renderPopup = () => {\n            if (!isOpen.value) return null;\n\n            const container = props.getPopupContainer\n                ? props.getPopupContainer(timePickerRef.value as HTMLElement)\n                : document.body;\n\n            return (\n                <Teleport to={container}>\n                    <Transition name=\"time-picker-dropdown\">\n                        <div\n                            v-show={isOpen.value}\n                            ref={popperRef}\n                            class={`\n                time-picker-dropdown \n                absolute z-50 bg-white dark:bg-gray-800 rounded-md shadow-lg border border-gray-200 dark:border-gray-700\n                min-w-[180px] w-max py-2 px-2\n                transition-all duration-300 transform\n                ${props.popupClassName}\n              `}\n                            style={popupPositionStyle.value}\n                        >\n                            {renderHoverTip()}\n                            {renderTabs()}\n                            <div class=\"time-panels-container relative\">\n                                {renderHourPanel()}\n                                {renderMinutePanel()}\n                                {renderSecondPanel()}\n                                {renderAmPmPanel()}\n                            </div>\n                            {renderFooter()}\n                        </div>\n                    </Transition>\n                </Teleport>\n            );\n        };\n\n        return () => (\n            <div\n                ref={timePickerRef}\n                class={`\n          time-picker \n          inline-flex relative\n          ${props.disabled ? 'opacity-60 cursor-not-allowed' : ''}\n          ${statusClass.value}\n        `}\n            >\n                <div\n                    class={`\n            time-picker-input-wrapper \n            relative flex items-center w-full\n            ${props.bordered ? 'border rounded' : ''}\n            ${props.disabled ? 'bg-gray-100 dark:bg-gray-800' : 'bg-white dark:bg-gray-900'}\n            ${isOpen.value && !props.disabled ? 'border-blue-500 dark:border-blue-500 ring-1 ring-blue-500 shadow-sm' : 'border-gray-300 dark:border-gray-600 hover:border-blue-400 dark:hover:border-blue-500'}\n            ${props.status === 'error' ? 'border-red-500 dark:border-red-500 hover:border-red-600 dark:hover:border-red-600' : ''}\n            ${props.status === 'warning' ? 'border-yellow-500 dark:border-yellow-500 hover:border-yellow-600 dark:hover:border-yellow-600' : ''}\n            transition-all duration-200\n          `}\n                    onClick={handleInputClick}\n                >\n                    <input\n                        ref={inputRef}\n                        type=\"text\"\n                        class={`\n              time-picker-input\n              py-1.5 px-3 w-full outline-none text-sm rounded\n              ${props.disabled ? 'bg-gray-100 dark:bg-gray-800 cursor-not-allowed' : 'bg-white dark:bg-gray-900'}\n              ${props.disabled ? 'text-gray-500 dark:text-gray-500' : 'text-gray-900 dark:text-gray-100'}\n              transition-colors duration-200\n            `}\n                        value={displayValue.value}\n                        placeholder={props.placeholder}\n                        disabled={props.disabled}\n                        readonly={true}\n                        onFocus={handleFocus}\n                    />\n\n                    <div class=\"time-picker-suffix flex items-center pr-2\">\n                        {props.allowClear && innerValue.value && !props.disabled && (\n                            <span\n                                class=\"time-picker-clear-btn flex items-center justify-center p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 cursor-pointer mr-1 transition-colors duration-200\"\n                                onClick={handleClear}\n                                title={props.clearText}\n                            >\n                                {slots.clearIcon ? (\n                                    slots.clearIcon()\n                                ) : (\n                                    <i class=\"icon-[carbon--close] text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 text-xs\" />\n                                )}\n                            </span>\n                        )}\n\n                        <span class=\"time-picker-suffix-icon text-gray-400 dark:text-gray-500\">\n                            {slots.suffixIcon ? (\n                                slots.suffixIcon()\n                            ) : (\n                                <i class=\"icon-[carbon--time] text-sm\" />\n                            )}\n                        </span>\n                    </div>\n                </div>\n\n                {renderPopup()}\n            </div>\n        );\n    },\n});\n\n// 添加 CSS 过渡效果样式\nconst timePickerStyles = `\n.time-picker-dropdown-enter-active,\n.time-picker-dropdown-leave-active {\n  transition: opacity 0.3s, transform 0.3s;\n}\n\n.time-picker-dropdown-enter-from,\n.time-picker-dropdown-leave-to {\n  opacity: 0;\n  transform: translateY(10px);\n}\n\n/* 优化滚动条样式 */\n.time-panel::-webkit-scrollbar {\n  width: 5px;\n}\n\n.time-panel::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.time-panel::-webkit-scrollbar-thumb {\n  background-color: rgba(156, 163, 175, 0.5);\n  border-radius: 3px;\n}\n\n.dark .time-panel::-webkit-scrollbar-thumb {\n  background-color: rgba(75, 85, 99, 0.5);\n}\n\n/* 添加选中项的动画效果 */\n.time-option.time-option-hour-selected,\n.time-option.time-option-minute-selected,\n.time-option.time-option-second-selected,\n.time-option.time-option-ampm-selected {\n  animation: pulse 0.8s ease-in-out;\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.3);\n  }\n  50% {\n    transform: scale(1.05);\n    box-shadow: 0 0 0 5px rgba(59, 130, 246, 0);\n  }\n  100% {\n    transform: scale(1);\n    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);\n  }\n}\n\n/* 时间选项区域的动画和过渡效果 */\n.time-panel {\n  transition: opacity 0.3s, transform 0.3s;\n}\n\n.time-panel:not(.block) {\n  opacity: 0;\n  transform: translateX(10px);\n  pointer-events: none;\n}\n\n.time-panel.block {\n  opacity: 1;\n  transform: translateX(0);\n}\n\n/* 时间选项悬停效果 */\n.time-option:hover {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.dark .time-option:hover {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n}\n\n/* 错误和警告状态样式 */\n.time-picker-error .time-picker-input-wrapper {\n  border-color: #ef4444;\n}\n\n.time-picker-warning .time-picker-input-wrapper {\n  border-color: #f59e0b;\n}\n\n.dark .time-picker-error .time-picker-input-wrapper {\n  border-color: #f87171;\n}\n\n.dark .time-picker-warning .time-picker-input-wrapper {\n  border-color: #fbbf24;\n}\n\n/* 增强面板阴影效果 */\n.time-picker-dropdown {\n  box-shadow: 0 6px 16px -8px rgba(0, 0, 0, 0.08),\n              0 9px 28px 0 rgba(0, 0, 0, 0.05),\n              0 12px 48px 16px rgba(0, 0, 0, 0.03);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.dark .time-picker-dropdown {\n  box-shadow: 0 6px 16px -8px rgba(0, 0, 0, 0.4),\n              0 9px 28px 0 rgba(0, 0, 0, 0.3),\n              0 12px 48px 16px rgba(0, 0, 0, 0.2);\n}\n\n/* 提高选项触感和可视度 */\n.time-option {\n  position: relative;\n  z-index: 1;\n}\n\n.time-option::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 0.375rem;\n  z-index: -1;\n  opacity: 0;\n  transition: opacity 0.2s;\n}\n\n.time-option:hover::after {\n  opacity: 1;\n}\n\n/* 改进tab切换样式 */\n.time-tab {\n  position: relative;\n  overflow: hidden;\n}\n\n.time-tab::before {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background-color: transparent;\n  transition: all 0.3s;\n  transform: translateY(2px);\n}\n\n.time-tab:hover::before {\n  background-color: rgba(59, 130, 246, 0.3);\n  transform: translateY(0);\n}\n\n.dark .time-tab:hover::before {\n  background-color: rgba(96, 165, 250, 0.3);\n}\n`;\n\n// 将样式添加到文档头部\nif (typeof document !== 'undefined') {\n    const styleElement = document.createElement('style');\n    styleElement.innerHTML = timePickerStyles;\n    document.head.appendChild(styleElement);\n}\n\n// 导出组件\nexport default {\n    TimePicker\n};\n","<template>\n    <div class=\"time-picker-demo-container p-6 transition-colors duration-300\">\n        <h1 class=\"text-2xl font-bold mb-8 text-gray-800 dark:text-white transition-colors duration-300\">\n            TimePicker 时间选择器\n        </h1>\n\n        <!-- 基本用法 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                基本用法\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">基本时间选择</p>\n                        <TimePicker v-model=\"basicValue\" @change=\"handleTimeChange\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">默认格式：HH:mm:ss</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">禁用状态</p>\n                        <TimePicker v-model=\"basicValue\" disabled />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">设置 disabled 属性禁用</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">无边框模式</p>\n                        <TimePicker v-model=\"basicValue\" :bordered=\"false\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">设置 bordered=false 去除边框</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">自动获焦</p>\n                        <TimePicker v-model=\"basicValue\" autofocus />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">设置 autofocus 自动聚焦</p>\n                    </div>\n                </div>\n\n                <div\n                    class=\"mt-6 p-4 bg-gray-50 dark:bg-gray-900/30 rounded border border-gray-200 dark:border-gray-700 transition-colors duration-300\">\n                    <div class=\"flex items-center\">\n                        <span class=\"text-gray-600 dark:text-gray-300 font-medium\">当前选择时间：</span>\n                        <span\n                            class=\"ml-2 px-3 py-1 bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 rounded-md transition-colors duration-300\">\n                            {{ basicValue || '未选择' }}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 不同格式 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                时间格式\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">默认格式</p>\n                        <TimePicker v-model=\"formatValue1\" format=\"HH:mm:ss\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">HH:mm:ss</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">小时与分钟</p>\n                        <TimePicker v-model=\"formatValue2\" format=\"HH:mm\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">HH:mm</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">12小时制</p>\n                        <TimePicker v-model=\"formatValue3\" format=\"hh:mm:ss a\" use12Hours />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">hh:mm:ss a（带上午/下午）</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">自定义格式</p>\n                        <TimePicker v-model=\"formatValue4\" format=\"HH时mm分\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">HH时mm分</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 步长设置 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                步长选项\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">小时步长</p>\n                        <TimePicker v-model=\"stepValue1\" :hour-step=\"2\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">hourStep=2</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">分钟步长</p>\n                        <TimePicker v-model=\"stepValue2\" :minute-step=\"15\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">minuteStep=15</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">秒步长</p>\n                        <TimePicker v-model=\"stepValue3\" :second-step=\"10\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">secondStep=10</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">综合设置</p>\n                        <TimePicker v-model=\"stepValue4\" :hour-step=\"2\" :minute-step=\"5\" :second-step=\"10\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">小时:2，分钟:5，秒:10</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 禁用选项 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                禁用选项\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">工作时间 (9:00-18:00)</p>\n                        <TimePicker v-model=\"disabledValue1\" :disabled-time=\"disabledWorkTime\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">仅能选择 9-18 点之间的时间</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">隐藏禁用选项</p>\n                        <TimePicker v-model=\"disabledValue2\" :disabled-time=\"disabledWorkTime\" hide-disabled-options />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">不显示禁用的时间选项</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">午休时间 (12:00-13:00)</p>\n                        <TimePicker v-model=\"disabledValue3\" :disabled-time=\"disabledLunchTime\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">禁用午休时间 12:00-13:00</p>\n                    </div>\n                </div>\n\n                <div\n                    class=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded border border-blue-100 dark:border-blue-800/50 transition-colors duration-300\">\n                    <div class=\"flex items-start\">\n                        <i class=\"icon-[carbon--information] text-blue-500 dark:text-blue-400 mt-0.5 mr-2\"></i>\n                        <div>\n                            <p class=\"text-sm text-gray-700 dark:text-gray-300\">\n                                可以通过 <code\n                                    class=\"px-1.5 py-0.5 bg-gray-100 dark:bg-gray-800 rounded text-xs\">disabledTime</code>\n                                属性自定义禁用逻辑，返回不可选择的小时、分钟和秒数组。\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 不同位置 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                弹出位置\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">左下方 (bottomLeft)</p>\n                        <TimePicker v-model=\"placementValue1\" placement=\"bottomLeft\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">默认位置</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">右下方 (bottomRight)</p>\n                        <TimePicker v-model=\"placementValue2\" placement=\"bottomRight\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">右侧对齐</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">左上方 (topLeft)</p>\n                        <TimePicker v-model=\"placementValue3\" placement=\"topLeft\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">向上展开，左侧对齐</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">右上方 (topRight)</p>\n                        <TimePicker v-model=\"placementValue4\" placement=\"topRight\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">向上展开，右侧对齐</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 状态展示 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                状态与自定义图标\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">错误状态</p>\n                        <TimePicker v-model=\"statusValue1\" status=\"error\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">status=\"error\"</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">警告状态</p>\n                        <TimePicker v-model=\"statusValue2\" status=\"warning\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">status=\"warning\"</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">自定义图标</p>\n                        <TimePicker v-model=\"statusValue3\">\n                            <template #suffixIcon>\n                                <i class=\"icon-[carbon--calendar] text-blue-500 animate-pulse\"></i>\n                            </template>\n                        </TimePicker>\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">使用 #suffixIcon 插槽</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">自定义清除图标</p>\n                        <TimePicker v-model=\"statusValue4\">\n                            <template #clearIcon>\n                                <i\n                                    class=\"icon-[carbon--trash-can] text-red-500 hover:text-red-600 transition-colors duration-200\"></i>\n                            </template>\n                        </TimePicker>\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">使用 #clearIcon 插槽</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 额外的页脚 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                自定义页脚\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">带额外页脚信息</p>\n                        <TimePicker v-model=\"footerValue1\">\n                            <template #renderExtraFooter>\n                                <span class=\"text-xs text-gray-500 dark:text-gray-400\">请选择工作时间</span>\n                            </template>\n                        </TimePicker>\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">使用 #renderExtraFooter 插槽</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">隐藏\"此刻\"按钮</p>\n                        <TimePicker v-model=\"footerValue2\" :show-now=\"false\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">设置 showNow=false</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 受控模式 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                受控模式与交互\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div class=\"space-y-4\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">受控打开状态</p>\n                        <div class=\"flex flex-wrap gap-3 items-center\">\n                            <TimePicker v-model=\"controlledValue\" :open=\"controlledOpen\"\n                                @open-change=\"handleOpenChange\" />\n                            <button\n                                class=\"py-1.5 px-4 text-sm rounded transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-800\"\n                                :class=\"controlledOpen\n                                    ? 'bg-red-500 hover:bg-red-600 text-white'\n                                    : 'bg-blue-500 hover:bg-blue-600 text-white'\" @click=\"toggleControlledOpen\">\n                                {{ controlledOpen ? '关闭面板' : '打开面板' }}\n                            </button>\n                        </div>\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400\">通过 open 属性控制面板的显示</p>\n                    </div>\n\n                    <div class=\"space-y-4\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">交互反馈</p>\n                        <div\n                            class=\"p-4 bg-gray-50 dark:bg-gray-900/30 rounded border border-gray-200 dark:border-gray-700\">\n                            <div class=\"flex flex-col gap-2\">\n                                <div class=\"flex items-center\">\n                                    <span\n                                        class=\"text-gray-600 dark:text-gray-300 font-medium min-w-[100px]\">面板状态：</span>\n                                    <span class=\"ml-2 px-2 py-1 rounded-md text-sm\" :class=\"controlledOpen\n                                        ? 'bg-green-50 dark:bg-green-900/20 text-green-600 dark:text-green-400'\n                                        : 'bg-red-50 dark:bg-red-900/20 text-red-600 dark:text-red-400'\">\n                                        {{ controlledOpen ? '打开' : '关闭' }}\n                                    </span>\n                                </div>\n                                <div class=\"flex items-center\">\n                                    <span class=\"text-gray-600 dark:text-gray-300 font-medium min-w-[100px]\">当前值：</span>\n                                    <span\n                                        class=\"ml-2 px-2 py-1 bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 rounded-md text-sm\">\n                                        {{ controlledValue || '未选择' }}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 字符串绑定 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                字符串绑定与格式\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">使用字符串值</p>\n                        <TimePicker v-model=\"stringValue\" value-format=\"HH:mm:ss\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">设置 value-format=\"HH:mm:ss\"</p>\n                    </div>\n                    <div class=\"space-y-2\">\n                        <p class=\"text-gray-600 dark:text-gray-300\">自定义显示与存储格式</p>\n                        <TimePicker v-model=\"stringValue2\" format=\"HH时mm分ss秒\" value-format=\"HH:mm:ss\" />\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">显示格式：\"HH时mm分ss秒\"，存储格式：\"HH:mm:ss\"</p>\n                    </div>\n                </div>\n\n                <div\n                    class=\"mt-6 p-4 bg-gray-50 dark:bg-gray-900/30 rounded border border-gray-200 dark:border-gray-700 transition-colors duration-300\">\n                    <p class=\"text-gray-600 dark:text-gray-300 mb-2 font-medium\">字符串值绑定示例：</p>\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div class=\"flex items-center\">\n                            <span class=\"text-gray-600 dark:text-gray-300 mr-2\">默认格式：</span>\n                            <code\n                                class=\"px-2 py-1 bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 rounded font-mono text-sm\">\n                        {{ stringValue || '未选择' }}\n                    </code>\n                        </div>\n                        <div class=\"flex items-center\">\n                            <span class=\"text-gray-600 dark:text-gray-300 mr-2\">自定义格式：</span>\n                            <code\n                                class=\"px-2 py-1 bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 rounded font-mono text-sm\">\n                        {{ stringValue2 || '未选择' }}\n                    </code>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 高级示例 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                高级示例\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div class=\"space-y-4\">\n                        <h3 class=\"font-medium text-gray-700 dark:text-gray-200\">预设时间快速选择</h3>\n                        <div class=\"flex flex-wrap gap-2\">\n                            <button v-for=\"(time, index) in presetTimes\" :key=\"index\"\n                                class=\"px-3 py-1.5 text-sm rounded-md transition-all duration-200 hover:scale-105\"\n                                :class=\"advancedValue === time.value\n                                    ? 'bg-blue-500 text-white'\n                                    : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\"\n                                @click=\"setPresetTime(time.value)\">\n                                {{ time.label }}\n                            </button>\n                        </div>\n                        <div class=\"mt-4\">\n                            <TimePicker v-model=\"advancedValue\" value-format=\"HH:mm:ss\"\n                                @change=\"handleAdvancedChange\" />\n                        </div>\n                    </div>\n\n                    <div class=\"space-y-4\">\n                        <h3 class=\"font-medium text-gray-700 dark:text-gray-200\">范围限制</h3>\n                        <div class=\"grid grid-cols-1 gap-4\">\n                            <div class=\"space-y-2\">\n                                <p class=\"text-gray-600 dark:text-gray-300 text-sm\">仅工作时间 (9:00 - 18:00)</p>\n                                <TimePicker v-model=\"workTimeValue\" :disabled-time=\"disabledNonWorkTime\"\n                                    @change=\"handleWorkTimeChange\" />\n                                <div class=\"flex items-center justify-between\">\n                                    <span class=\"text-xs text-gray-500 dark:text-gray-400\">09:00 - 18:00</span>\n                                    <span v-if=\"workTimeValue\" class=\"text-xs px-2 py-0.5 rounded\"\n                                        :class=\"isValidWorkTime ? 'bg-green-100 dark:bg-green-900/20 text-green-600 dark:text-green-400' : 'bg-red-100 dark:bg-red-900/20 text-red-600 dark:text-red-400'\">\n                                        {{ isValidWorkTime ? '有效工作时间' : '非工作时间' }}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- API 文档 -->\n        <section class=\"mb-12\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                API 文档\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"prose dark:prose-invert max-w-none\">\n                    <h3 class=\"text-lg font-medium mb-4\">TimePicker 属性</h3>\n                    <div class=\"overflow-x-auto\">\n                        <table class=\"min-w-full border-collapse\">\n                            <thead>\n                                <tr class=\"bg-gray-100 dark:bg-gray-800 text-left\">\n                                    <th class=\"py-2 px-4 font-medium border dark:border-gray-700\">参数</th>\n                                    <th class=\"py-2 px-4 font-medium border dark:border-gray-700\">说明</th>\n                                    <th class=\"py-2 px-4 font-medium border dark:border-gray-700\">类型</th>\n                                    <th class=\"py-2 px-4 font-medium border dark:border-gray-700\">默认值</th>\n                                </tr>\n                            </thead>\n                            <tbody class=\"divide-y dark:divide-gray-700\">\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">allowClear</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">是否展示清除按钮</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">boolean</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">true</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">autofocus</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">自动获取焦点</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">boolean</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">false</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">bordered</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">是否有边框</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">boolean</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">true</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">clearText</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">清除按钮的提示文案</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">string</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">清除</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">disabled</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">禁用全部操作</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">boolean</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">false</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">disabledTime</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">不可选择的时间</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">函数</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">-</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">format</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">展示的时间格式</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">string</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">HH:mm:ss</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">hideDisabledOptions</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">隐藏禁止选择的选项</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">boolean</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">false</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">hourStep</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">小时选项间隔</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">number</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">1</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">minuteStep</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">分钟选项间隔</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">number</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">1</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">open</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">面板是否打开</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">boolean</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">-</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">placement</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">选择框弹出的位置</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">bottomLeft | bottomRight | topLeft\n                                        |\n                                        topRight</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">bottomLeft</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">showNow</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">面板是否显示\"此刻\"按钮</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">boolean</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">true</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">status</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">设置校验状态</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">'error' | 'warning'</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">-</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">use12Hours</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">使用 12 小时制</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">boolean</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">false</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">valueFormat</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">绑定值的格式</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">string</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">-</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h3 class=\"text-lg font-medium mt-8 mb-4\">TimePicker 事件</h3>\n                    <div class=\"overflow-x-auto\">\n                        <table class=\"min-w-full border-collapse\">\n                            <thead>\n                                <tr class=\"bg-gray-100 dark:bg-gray-800 text-left\">\n                                    <th class=\"py-2 px-4 font-medium border dark:border-gray-700\">事件名称</th>\n                                    <th class=\"py-2 px-4 font-medium border dark:border-gray-700\">说明</th>\n                                    <th class=\"py-2 px-4 font-medium border dark:border-gray-700\">回调参数</th>\n                                </tr>\n                            </thead>\n                            <tbody class=\"divide-y dark:divide-gray-700\">\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">change</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">时间发生变化的回调</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">function(time: dayjs | string,\n                                        timeString:\n                                        string): void</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">openChange</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">面板打开/关闭时的回调</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">(open: boolean): void</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h3 class=\"text-lg font-medium mt-8 mb-4\">TimePicker 插槽</h3>\n                    <div class=\"overflow-x-auto\">\n                        <table class=\"min-w-full border-collapse\">\n                            <thead>\n                                <tr class=\"bg-gray-100 dark:bg-gray-800 text-left\">\n                                    <th class=\"py-2 px-4 font-medium border dark:border-gray-700\">插槽名称</th>\n                                    <th class=\"py-2 px-4 font-medium border dark:border-gray-700\">说明</th>\n                                </tr>\n                            </thead>\n                            <tbody class=\"divide-y dark:divide-gray-700\">\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">clearIcon</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">自定义的清除图标</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">suffixIcon</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">自定义的选择框后缀图标</td>\n                                </tr>\n                                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">renderExtraFooter</td>\n                                    <td class=\"py-2 px-4 border dark:border-gray-700\">选择框底部显示自定义的内容</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 小结与最佳实践 -->\n        <section class=\"mb-12 transform transition-all duration-300 hover:translate-y-[-5px]\">\n            <h2 class=\"text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200 transition-colors duration-300\">\n                小结与最佳实践\n            </h2>\n            <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md transition-all duration-300\">\n                <div class=\"prose dark:prose-invert max-w-none\">\n                    <h3 class=\"text-lg font-medium mb-3 text-blue-600 dark:text-blue-400\">使用场景</h3>\n                    <p class=\"mb-4 text-gray-700 dark:text-gray-300\">\n                        TimePicker 时间选择器适用于需要用户输入或选择具体时间的场景，常见于：\n                    </p>\n                    <ul class=\"list-disc pl-6 space-y-1 mb-6 text-gray-700 dark:text-gray-300\">\n                        <li>预约系统中的时间段选择</li>\n                        <li>工作日程或会议安排</li>\n                        <li>倒计时设置</li>\n                        <li>各类表单中的时间输入字段</li>\n                        <li>系统定时任务的时间设置</li>\n                    </ul>\n\n                    <h3 class=\"text-lg font-medium mb-3 text-blue-600 dark:text-blue-400\">最佳实践</h3>\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                        <div\n                            class=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border border-green-100 dark:border-green-800/50\">\n                            <h4 class=\"text-base font-medium text-green-700 dark:text-green-400 mb-2 flex items-center\">\n                                <i class=\"icon-[carbon--checkmark] mr-2\"></i>推荐做法\n                            </h4>\n                            <ul class=\"list-disc pl-5 space-y-1 text-gray-700 dark:text-gray-300\">\n                                <li>根据业务场景选择合适的时间格式，比如12小时制或24小时制</li>\n                                <li>为时间选择器设置合理的默认值，减少用户输入操作</li>\n                                <li>使用 <code\n                                        class=\"px-1 py-0.5 bg-gray-100 dark:bg-gray-800 rounded text-xs\">disabledTime</code>\n                                    限制非法时间，提高用户体验</li>\n                                <li>在表单中使用时，配合表单验证规则使用</li>\n                                <li>为时间选择器添加清晰的标签和占位符文本</li>\n                                <li>根据需要使用不同的步长设置，简化用户选择</li>\n                            </ul>\n                        </div>\n                        <div\n                            class=\"bg-red-50 dark:bg-red-900/20 p-4 rounded-lg border border-red-100 dark:border-red-800/50\">\n                            <h4 class=\"text-base font-medium text-red-700 dark:text-red-400 mb-2 flex items-center\">\n                                <i class=\"icon-[carbon--close] mr-2\"></i>避免做法\n                            </h4>\n                            <ul class=\"list-disc pl-5 space-y-1 text-gray-700 dark:text-gray-300\">\n                                <li>避免在不必要的场景使用复杂的时间格式</li>\n                                <li>避免设置过小的步长，增加用户选择的复杂度</li>\n                                <li>避免不提供任何时间范围限制，导致用户选择无效时间</li>\n                                <li>避免在移动设备上使用过小的点击区域</li>\n                                <li>避免不提供清晰的时间格式提示</li>\n                                <li>避免在高频操作界面使用过多的时间选择器</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <h3 class=\"text-lg font-medium mb-3 text-blue-600 dark:text-blue-400\">性能考虑</h3>\n                    <div\n                        class=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg border border-blue-100 dark:border-blue-800/50 mb-6\">\n                        <ul class=\"list-disc pl-5 space-y-1 text-gray-700 dark:text-gray-300\">\n                            <li>TimePicker 组件内部使用 dayjs 处理时间格式，体积较小且性能良好</li>\n                            <li>通过使用 Teleport 将弹出层移至 body，避免嵌套结构中的样式问题</li>\n                            <li>组件使用虚拟化渲染，即使有大量选项也不会影响性能</li>\n                            <li>使用 computed 属性和缓存优化重复计算</li>\n                            <li>懒加载面板内容，仅在打开面板时才渲染相关选项</li>\n                        </ul>\n                    </div>\n\n                    <h3 class=\"text-lg font-medium mb-3 text-blue-600 dark:text-blue-400\">无障碍设计</h3>\n                    <div\n                        class=\"bg-purple-50 dark:bg-purple-900/20 p-4 rounded-lg border border-purple-100 dark:border-purple-800/50\">\n                        <ul class=\"list-disc pl-5 space-y-1 text-gray-700 dark:text-gray-300\">\n                            <li>组件支持键盘导航，可通过Tab键切换焦点</li>\n                            <li>时间输入框的标签清晰易懂，便于屏幕阅读器识别</li>\n                            <li>色彩对比度符合WCAG 2.0标准，确保视力障碍用户可用</li>\n                            <li>时间选项有足够大的点击区域，方便精细运动障碍用户操作</li>\n                            <li>支持添加aria属性，提高屏幕阅读器的兼容性</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue';\nimport { TimePicker } from './TimePicker';\nimport dayjs, { Dayjs } from 'dayjs';\n\n// 基本用法\nconst basicValue = ref<string | undefined>(undefined);\n\n// 不同格式\nconst formatValue1 = ref<string | undefined>(undefined);\nconst formatValue2 = ref<string | undefined>(undefined);\nconst formatValue3 = ref<string | undefined>(undefined);\nconst formatValue4 = ref<string | undefined>(undefined);\n\n// 步长设置\nconst stepValue1 = ref<string | undefined>(undefined);\nconst stepValue2 = ref<string | undefined>(undefined);\nconst stepValue3 = ref<string | undefined>(undefined);\nconst stepValue4 = ref<string | undefined>(undefined);\n\n// 禁用选项\nconst disabledValue1 = ref<string | undefined>(undefined);\nconst disabledValue2 = ref<string | undefined>(undefined);\nconst disabledValue3 = ref<string | undefined>(undefined);\n\n// 不同位置\nconst placementValue1 = ref<string | undefined>(undefined);\nconst placementValue2 = ref<string | undefined>(undefined);\nconst placementValue3 = ref<string | undefined>(undefined);\nconst placementValue4 = ref<string | undefined>(undefined);\n\n// 状态展示\nconst statusValue1 = ref<string | undefined>(undefined);\nconst statusValue2 = ref<string | undefined>(undefined);\nconst statusValue3 = ref<string | undefined>(undefined);\nconst statusValue4 = ref<string | undefined>(undefined);\n\n// 额外的页脚\nconst footerValue1 = ref<string | undefined>(undefined);\nconst footerValue2 = ref<string | undefined>(undefined);\n\n// 受控模式\nconst controlledValue = ref<string | undefined>(undefined);\nconst controlledOpen = ref(false);\n\n// 字符串绑定\nconst stringValue = ref<string | undefined>(undefined);\nconst stringValue2 = ref<string | undefined>(undefined);\n\n// 高级示例\nconst advancedValue = ref<string | undefined>(undefined);\nconst workTimeValue = ref<string | undefined>(undefined);\nconst isValidWorkTime = ref(true);\n\n// 预设时间选项\nconst presetTimes = [\n    { label: '上班', value: '09:00:00' },\n    { label: '午休', value: '12:00:00' },\n    { label: '下午茶', value: '15:30:00' },\n    { label: '下班', value: '18:00:00' }\n];\n\n// 禁用工作时间外的选项\nconst disabledWorkTime = (now: Dayjs) => {\n    return {\n        disabledHours: () => [...Array(9).keys(), ...Array(24 - 18).keys().map(i => i + 18)],\n    };\n};\n\n// 禁用午休时间\nconst disabledLunchTime = (now: Dayjs) => {\n    return {\n        disabledHours: () => [],\n        disabledMinutes: (selectedHour: number) => {\n            if (selectedHour === 12) {\n                return [...Array(60).keys()];\n            }\n            return [];\n        },\n    };\n};\n\n// 禁用非工作时间 (9:00-18:00)\nconst disabledNonWorkTime = (now: Dayjs) => {\n    return {\n        disabledHours: () => [...Array(9).keys(), ...Array(24 - 18).keys().map(i => i + 18)],\n        disabledMinutes: (selectedHour: number) => {\n            if (selectedHour < 9 || selectedHour >= 18) {\n                return [...Array(60).keys()];\n            }\n            return [];\n        },\n    };\n};\n\n// 事件处理函数\nconst handleTimeChange = (time: any, timeString: string) => {\n    console.log('选择的时间:', time, timeString);\n    // 确保显示格式化的时间字符串\n    basicValue.value = timeString;\n};\n\nconst handleOpenChange = (open: boolean) => {\n    console.log('面板状态变化:', open);\n    controlledOpen.value = open;\n};\n\nconst toggleControlledOpen = () => {\n    controlledOpen.value = !controlledOpen.value;\n};\n\nconst setPresetTime = (time: string) => {\n    advancedValue.value = time;\n};\n\nconst handleAdvancedChange = (time: string, timeString: string) => {\n    console.log('高级示例时间变化:', time, timeString);\n};\n\nconst handleWorkTimeChange = (time: string, timeString: string) => {\n    if (!time) {\n        isValidWorkTime.value = true;\n        return;\n    }\n\n    const timeParts = timeString.split(':');\n    const hour = parseInt(timeParts[0], 10);\n\n    isValidWorkTime.value = hour >= 9 && hour < 18;\n};\n\n// 初始化一些默认值\nsetTimeout(() => {\n    // 使用格式化的时间字符串\n    basicValue.value = '12:30:00';\n    formatValue1.value = '09:15:30';\n    formatValue2.value = '10:45';\n    formatValue3.value = '02:30:00 PM';\n    formatValue4.value = '14时30分';\n    controlledValue.value = '10:00:00';\n    statusValue3.value = '14:00:00';\n    statusValue4.value = '16:30:00';\n}, 500);\n</script>\n\n<style scoped>\n/* 自定义组件的一些额外样式 */\n.time-picker-demo-container section {\n    position: relative;\n    overflow: hidden;\n}\n\n.time-picker-demo-container section::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background: linear-gradient(90deg, rgba(59, 130, 246, 0), rgba(59, 130, 246, 0.6), rgba(59, 130, 246, 0));\n    transform: translateY(2px);\n    opacity: 0;\n    transition: opacity 0.3s, transform 0.3s;\n}\n\n.time-picker-demo-container section:hover::after {\n    opacity: 1;\n    transform: translateY(0);\n}\n\n.dark .time-picker-demo-container section::after {\n    background: linear-gradient(90deg, rgba(96, 165, 250, 0), rgba(96, 165, 250, 0.6), rgba(96, 165, 250, 0));\n}\n\n/* 表格样式优化 */\ntable {\n    border-radius: 0.5rem;\n    overflow: hidden;\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n}\n\n/* 高级动画效果 */\n@keyframes shine {\n    0% {\n        background-position: -100% 0;\n    }\n\n    100% {\n        background-position: 200% 0;\n    }\n}\n\n.text-blue-500,\n.text-blue-600 {\n    background: linear-gradient(90deg, currentColor, #60a5fa, currentColor);\n    background-size: 200% 100%;\n    background-clip: text;\n    -webkit-background-clip: text;\n    animation: shine 8s linear infinite;\n}\n\n/* 适应性响应设计 */\n@media (max-width: 640px) {\n    .grid-cols-4 {\n        grid-template-columns: repeat(1, minmax(0, 1fr));\n    }\n\n    .grid-cols-3 {\n        grid-template-columns: repeat(1, minmax(0, 1fr));\n    }\n\n    .grid-cols-2 {\n        grid-template-columns: repeat(1, minmax(0, 1fr));\n    }\n}\n</style>\n"],"names":["e","t","module","this","n","r","i","o","s","a","f","h","u","d","c","l","m","M","Y","p","v","D","w","g","y","L","dayjs","extend","customParseFormat","TimePicker","defineComponent","name","props","allowClear","type","Boolean","default","autofocus","bordered","clearText","String","disabled","disabledTime","Function","undefined","format","getPopupContainer","hideDisabledOptions","hourStep","Number","inputReadOnly","minuteStep","open","placeholder","placement","popupClassName","popupStyle","Object","secondStep","showNow","status","use12Hours","value","valueFormat","modelValue","emits","setup","emit","slots","expose","innerOpen","ref","innerValue","inputRef","timePickerRef","popperRef","activePanel","hoveredValue","isOpenControlled","computed","isOpen","formatString","watch","val","console","error","immediate","generateOptions","unit","step","disabledFn","options","max","min","label","toString","padStart","push","hourOptions","disabledHours","disabledTimeFn","hour","includes","minuteOptions","disabledMinutes","minute","secondOptions","disabledSeconds","second","ampmOptions","displayValue","handleInputClick","handleFocus","handleClear","stopPropagation","emitChange","handleTimeSelect","newValue","clone","isPM","closePanel","handleNowClick","now","handleConfirm","timeString","formattedValue","handleClickOutside","contains","target","popupPositionStyle","rect","getBoundingClientRect","style","startsWith","top","bottom","window","innerHeight","endsWith","left","right","innerWidth","statusClass","scrollToSelected","nextTick","containerSelector","itemSelector","container","querySelector","selectedItem","containerRect","selectedRect","scrollTop","height","panel","document","addEventListener","removeEventListener","onMounted","focus","onBeforeUnmount","blur","renderHourPanel","_createVNode","map","option","onClick","onMouseenter","onMouseleave","renderMinutePanel","renderSecondPanel","renderAmPmPanel","renderTabs","_createTextVNode","renderFooter","renderExtraFooter","renderHoverTip","renderPopup","body","Teleport","Transition","_withDirectives","_vShow","clearIcon","suffixIcon","timePickerStyles","styleElement","createElement","innerHTML","head","appendChild","basicValue","formatValue1","formatValue2","formatValue3","formatValue4","stepValue1","stepValue2","stepValue3","stepValue4","disabledValue1","disabledValue2","disabledValue3","placementValue1","placementValue2","placementValue3","placementValue4","statusValue1","statusValue2","statusValue3","statusValue4","footerValue1","footerValue2","controlledValue","controlledOpen","stringValue","stringValue2","advancedValue","workTimeValue","isValidWorkTime","presetTimes","disabledWorkTime","disabledLunchTime","selectedHour","disabledNonWorkTime","handleTimeChange","time","handleOpenChange","toggleControlledOpen","setPresetTime","handleAdvancedChange","handleWorkTimeChange","timeParts"],"mappings":"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","x_google_ignoreList":[0]}