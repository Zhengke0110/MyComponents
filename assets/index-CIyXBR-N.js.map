{"version":3,"file":"index-CIyXBR-N.js","sources":["../../src/libs/Alert/code.ts","../../src/libs/Alert/View.vue"],"sourcesContent":["// 基础用法示例代码\nexport const basicAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert message=\"这是一个基础的信息提示框\" />\n</template>\n\\`\\`\\``;\n\n// 不同类型示例代码\nexport const typeAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert type=\"info\" message=\"这是一个信息提示框\" />\n  <Alert type=\"success\" message=\"这是一个成功提示框\" />\n  <Alert type=\"warning\" message=\"这是一个警告提示框\" />\n  <Alert type=\"danger\" message=\"这是一个危险提示框\" />\n</template>\n\\`\\`\\``;\n\n// 带标题的提示框示例代码\nexport const titleAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert type=\"success\" title=\"成功\" message=\"操作已成功完成\" />\n  <Alert type=\"warning\" title=\"注意\" message=\"此操作需要谨慎处理\" />\n</template>\n\\`\\`\\``;\n\n// 带动画的提示框示例代码\nexport const animatedAlertCode = `\\`\\`\\`vue\n<template>\n  <transition \n    enter-from-class=\"opacity-0 -translate-y-4\"\n    enter-active-class=\"transition-all duration-300 ease-out\"\n    enter-to-class=\"opacity-100 translate-y-0\"\n    leave-from-class=\"opacity-100 translate-y-0\"\n    leave-active-class=\"transition-all duration-300 ease-in\"\n    leave-to-class=\"opacity-0 translate-y-4\">\n    <Alert v-if=\"showAnimatedAlert\" type=\"info\" title=\"动画提示\" message=\"这个提示框有淡入上滑的动画效果\" />\n  </transition>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nconst showAnimatedAlert = ref(true);\n</script>\n\\`\\`\\``;\n\n// 自定义颜色示例代码\nexport const colorAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert color=\"purple\" message=\"这是紫色提示框\" />\n  <Alert color=\"teal\" message=\"这是蓝绿色提示框\" />\n  <Alert color=\"pink\" message=\"这是粉色提示框\" />\n</template>\n\\`\\`\\``;\n\n// 可关闭与不可关闭示例代码\nexport const closableAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert message=\"这是可关闭的提示框（默认）\" @close=\"handleClose\" />\n  <Alert message=\"这是不可关闭的提示框\" :closable=\"false\" />\n</template>\n\n<script setup>\nconst handleClose = () => {\n  console.log('Alert closed');\n};\n</script>\n\\`\\`\\``;\n\n// 无图标示例代码\nexport const noIconAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert message=\"这是没有图标的提示框\" :showIcon=\"false\" />\n</template>\n\\`\\`\\``;\n\n// 无边框示例代码\nexport const noBorderAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert message=\"这是没有边框的提示框\" :bordered=\"false\" />\n</template>\n\\`\\`\\``;\n\n// 自定义样式示例代码\nexport const customStyleAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert \n    message=\"这是应用了渐变背景的提示框\" \n    customClass=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-800 dark:to-blue-900\" \n  />\n  <Alert \n    message=\"这是应用了阴影效果的提示框\" \n    customClass=\"shadow-lg border-indigo-300 dark:border-indigo-700\" \n  />\n</template>\n\\`\\`\\``;\n\n// 悬浮效果示例代码\nexport const hoverAlertCode = `\\`\\`\\`vue\n<template>\n  <div class=\"group cursor-pointer\">\n    <Alert \n      message=\"鼠标悬浮在此处查看效果\" \n      customClass=\"transition-all duration-300 ease-in-out group-hover:scale-[1.02] group-hover:shadow-lg\" \n    />\n  </div>\n</template>\n\\`\\`\\``;\n\n// 自定义图标示例代码\nexport const customIconAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert type=\"info\" message=\"这是自定义图标的提示框\">\n    <template #icon>\n      <i class=\"icon-[mdi--star] size-5 text-amber-500 animate-spin-slow\"></i>\n    </template>\n  </Alert>\n</template>\n\n<style>\n@keyframes spin-slow {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.animate-spin-slow {\n  animation: spin-slow 3s linear infinite;\n}\n</style>\n\\`\\`\\``;\n\n// 使用默认插槽示例代码\nexport const defaultSlotAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert type=\"info\">\n    <div>\n      这是通过<span class=\"font-bold\">默认插槽</span>定义的内容\n      <a href=\"#\" class=\"underline text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors\">\n        点击这里\n      </a>\n      了解更多信息\n    </div>\n  </Alert>\n</template>\n\\`\\`\\``;\n\n// 使用额外内容插槽示例代码\nexport const extraSlotAlertCode = `\\`\\`\\`vue\n<template>\n  <Alert type=\"warning\" title=\"提示\" message=\"您的账户即将到期\">\n    <template #extra>\n      <div class=\"flex space-x-2\">\n        <button class=\"px-4 py-1 bg-amber-100 hover:bg-amber-200 dark:bg-amber-900 dark:hover:bg-amber-800 rounded text-amber-800 dark:text-amber-200 transition-colors\">\n          立即续费\n        </button>\n        <button class=\"px-4 py-1 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 rounded transition-colors\">\n          了解详情\n        </button>\n      </div>\n    </template>\n  </Alert>\n</template>\n\\`\\`\\``;\n\n// 自动关闭示例代码\nexport const autoCloseAlertCode = `\\`\\`\\`vue\n<template>\n  <transition \n    enter-from-class=\"opacity-0 translate-y-4\"\n    enter-active-class=\"transition-all duration-500 ease-out\"\n    enter-to-class=\"opacity-100 translate-y-0\"\n    leave-from-class=\"opacity-100 translate-y-0\"\n    leave-active-class=\"transition-all duration-300 ease-in\"\n    leave-to-class=\"opacity-0 translate-y-4\">\n    <Alert \n      v-if=\"autoCloseVisible\" \n      type=\"success\" \n      message=\"这个提示框将在3秒后自动关闭\" \n      :duration=\"3000\"\n      @close=\"autoCloseVisible = false\" \n    />\n  </transition>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nconst autoCloseVisible = ref(true);\n</script>\n\\`\\`\\``;\n\n// 交互式动画示例代码\nexport const shakeAlertCode = `\\`\\`\\`vue\n<template>\n  <div class=\"cursor-pointer\" @click=\"shakeAlert\">\n    <Alert \n      ref=\"shakingAlert\" \n      type=\"danger\" \n      title=\"互动提示\" \n      message=\"点击这个提示框会产生晃动效果！\" \n      :closable=\"false\" \n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst shakingAlert = ref(null);\nlet shakeTimer = null;\n\nconst shakeAlert = () => {\n  if (shakingAlert.value && shakingAlert.value.$el) {\n    // 先清除之前可能存在的定时器\n    if (shakeTimer !== null) {\n      clearTimeout(shakeTimer);\n    }\n\n    // 添加动画类名\n    shakingAlert.value.$el.classList.add('animate-shake');\n\n    // 设置新的定时器并保存引用\n    shakeTimer = setTimeout(() => {\n      shakingAlert.value.$el.classList.remove('animate-shake');\n      shakeTimer = null;\n    }, 500);\n  }\n};\n</script>\n\n<style scoped>\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  20% { transform: translateX(-8px); }\n  40% { transform: translateX(8px); }\n  60% { transform: translateX(-5px); }\n  80% { transform: translateX(5px); }\n}\n\n.animate-shake {\n  animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n}\n</style>\n\\`\\`\\``;\n\n// 多重组合效果示例代码\nexport const notificationStackCode = `\\`\\`\\`vue\n<template>\n  <!-- 控制按钮 -->\n  <div class=\"mb-4 flex flex-wrap gap-2\">\n    <button \n      v-for=\"(type, index) in ['info', 'success', 'warning', 'danger']\"\n      :key=\"index\" \n      @click=\"triggerNotification(type)\"\n      class=\"px-3 py-1.5 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n      显示{{ typeLabels[type] }}通知\n    </button>\n  </div>\n  \n  <!-- 通知容器 -->\n  <div class=\"notification-container fixed bottom-4 right-4 z-10 space-y-2 w-80\">\n    <transition-group \n      enter-from-class=\"opacity-0 translate-x-8\"\n      enter-active-class=\"transition-all duration-300 ease-out\"\n      enter-to-class=\"opacity-100 translate-x-0\"\n      leave-from-class=\"opacity-100 translate-x-0\"\n      leave-active-class=\"transition-all duration-200 ease-in\"\n      leave-to-class=\"opacity-0 translate-x-8\">\n      <Alert \n        v-for=\"alert in notifications\" \n        :key=\"alert.id\" \n        :type=\"alert.type\" \n        :message=\"alert.message\"\n        @close=\"removeNotification(alert.id)\" \n      />\n    </transition-group>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\n// 类型标签映射\nconst typeLabels = {\n  'info': '信息',\n  'success': '成功',\n  'warning': '警告',\n  'danger': '危险'\n};\n\n// 通知栈\nconst notifications = ref([]);\nlet notificationId = 0;\n\nconst triggerNotification = (type) => {\n  const messages = {\n    'info': '这是一条信息通知',\n    'success': '操作已成功完成',\n    'warning': '请注意此操作的风险',\n    'danger': '系统检测到错误'\n  };\n\n  // 添加新通知\n  notifications.value.push({\n    id: notificationId++,\n    type,\n    message: messages[type]\n  });\n\n  // 5秒后自动移除\n  setTimeout(() => {\n    removeNotification(notificationId - 1);\n  }, 5000);\n};\n\nconst removeNotification = (id) => {\n  notifications.value = notifications.value.filter(alert => alert.id !== id);\n};\n</script>\n\\`\\`\\``;\n","<template>\n    <div\n        class=\"alert-examples p-6 space-y-12 bg-white dark:bg-gray-900 text-gray-900 dark:text-white transition-colors duration-300\">\n        <header class=\"mb-8\">\n            <h1 class=\"text-3xl font-bold mb-3\">Alert 提示组件</h1>\n            <p class=\"text-gray-600 dark:text-gray-400\">\n                用于向用户显示重要提示信息的组件，支持多种类型、样式和交互方式。\n            </p>\n        </header>\n\n        <!-- 基础用法 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">基础用法</h2>\n            <button @click=\"toggleAlert('basic')\"\n                class=\"mb-4 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                {{ visibleAlerts.basic ? '隐藏' : '显示' }}基础提示框\n            </button>\n            <CodePreview :code=\"basicAlertCode\">\n                <div class=\"h-20\">\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.basic\" message=\"这是一个基础的信息提示框\" />\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 不同类型 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">不同类型</h2>\n            <div class=\"mb-4 flex flex-wrap gap-2\">\n                <button v-for=\"(type, index) in alertTypes\" :key=\"index\" @click=\"showTypeAlert(type)\"\n                    class=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                    显示{{ typeLabels[type] }}\n                </button>\n            </div>\n            <CodePreview :code=\"typeAlertCode\">\n                <div class=\"h-20\">\n                    <transition-alert>\n                        <Alert v-if=\"currentTypeAlert\" :type=\"currentTypeAlert\"\n                            :message=\"`这是一个${typeLabels[currentTypeAlert]}提示框`\" />\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 带标题 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">带标题的提示框</h2>\n            <div class=\"mb-4 flex flex-wrap gap-2\">\n                <button @click=\"toggleAlert('titleSuccess')\"\n                    class=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded transition-colors\">\n                    显示成功提示\n                </button>\n                <button @click=\"toggleAlert('titleWarning')\"\n                    class=\"px-4 py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded transition-colors\">\n                    显示警告提示\n                </button>\n            </div>\n            <CodePreview :code=\"titleAlertCode\">\n                <div class=\"h-42\">\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.titleSuccess\" type=\"success\" title=\"成功\" message=\"操作已成功完成\" />\n                    </transition-alert>\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.titleWarning\" type=\"warning\" title=\"注意\" message=\"此操作需要谨慎处理\" />\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 带动画的提示框 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">动画效果</h2>\n            <div class=\"flex flex-col gap-4\">\n                <button @click=\"showAnimatedAlert = !showAnimatedAlert\"\n                    class=\"w-fit px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors duration-200\">\n                    {{ showAnimatedAlert ? '隐藏' : '显示' }}动画提示框\n                </button>\n                <CodePreview :code=\"animatedAlertCode\">\n                    <div class=\"h-[80px]\">\n                        <transition enter-from-class=\"opacity-0 -translate-y-4\"\n                            enter-active-class=\"transition-all duration-300 ease-out\"\n                            enter-to-class=\"opacity-100 translate-y-0\" leave-from-class=\"opacity-100 translate-y-0\"\n                            leave-active-class=\"transition-all duration-300 ease-in\"\n                            leave-to-class=\"opacity-0 translate-y-4\">\n                            <Alert v-if=\"showAnimatedAlert\" type=\"info\" title=\"动画提示\" message=\"这个提示框有淡入上滑的动画效果\" />\n                        </transition>\n                    </div>\n                </CodePreview>\n            </div>\n        </section>\n\n        <!-- 自定义颜色 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">自定义颜色</h2>\n            <div class=\"mb-4 flex flex-wrap gap-2\">\n                <button @click=\"showColorAlert('purple')\"\n                    class=\"px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded transition-colors\">\n                    显示紫色提示框\n                </button>\n                <button @click=\"showColorAlert('teal')\"\n                    class=\"px-4 py-2 bg-teal-600 hover:bg-teal-700 text-white rounded transition-colors\">\n                    显示蓝绿色提示框\n                </button>\n                <button @click=\"showColorAlert('pink')\"\n                    class=\"px-4 py-2 bg-pink-600 hover:bg-pink-700 text-white rounded transition-colors\">\n                    显示粉色提示框\n                </button>\n            </div>\n            <CodePreview :code=\"colorAlertCode\">\n                <div class=\"h-24\">\n                    <transition-alert>\n                        <Alert v-if=\"currentColorAlert\" :color=\"currentColorAlert\"\n                            :message=\"`这是${colorLabels[currentColorAlert]}提示框`\" />\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 可关闭与不可关闭 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">可关闭与不可关闭</h2>\n            <div class=\"mb-4 flex flex-wrap gap-2\">\n                <button @click=\"toggleAlert('closable')\"\n                    class=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                    显示可关闭提示框\n                </button>\n                <button @click=\"toggleAlert('nonClosable')\"\n                    class=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                    显示不可关闭提示框\n                </button>\n            </div>\n            <CodePreview :code=\"closableAlertCode\">\n                <div class=\"space-y-4 h-40\">\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.closable\" message=\"这是可关闭的提示框（默认）\"\n                            @close=\"visibleAlerts.closable = false\" />\n                    </transition-alert>\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.nonClosable\" message=\"这是不可关闭的提示框（点击按钮可隐藏）\" :closable=\"false\" />\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 无图标 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">无图标</h2>\n            <button @click=\"toggleAlert('noIcon')\"\n                class=\"mb-4 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                {{ visibleAlerts.noIcon ? '隐藏' : '显示' }}无图标提示框\n            </button>\n            <CodePreview :code=\"noIconAlertCode\">\n                <div class=\"h-20\">\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.noIcon\" message=\"这是没有图标的提示框\" :showIcon=\"false\" />\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 无边框 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">无边框</h2>\n            <button @click=\"toggleAlert('noBorder')\"\n                class=\"mb-4 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                {{ visibleAlerts.noBorder ? '隐藏' : '显示' }}无边框提示框\n            </button>\n            <CodePreview :code=\"noBorderAlertCode\">\n                <div class=\"h-20\">\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.noBorder\" message=\"这是没有边框的提示框\" :bordered=\"false\" />\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 自定义样式 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">自定义样式</h2>\n            <div class=\"mb-4 flex flex-wrap gap-2\">\n                <button @click=\"toggleCustomStyle('gradient')\"\n                    class=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                    显示渐变背景提示框\n                </button>\n                <button @click=\"toggleCustomStyle('shadow')\"\n                    class=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                    显示阴影提示框\n                </button>\n            </div>\n            <CodePreview :code=\"customStyleAlertCode\">\n                <div class=\"h-24\">\n                    <transition-alert>\n                        <Alert v-if=\"customStyle === 'gradient'\" message=\"这是应用了渐变背景的提示框\"\n                            customClass=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-800 dark:to-blue-900\" />\n                    </transition-alert>\n                    <transition-alert>\n                        <Alert v-if=\"customStyle === 'shadow'\" message=\"这是应用了阴影效果的提示框\"\n                            customClass=\"shadow-lg border-indigo-300 dark:border-indigo-700\" />\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 悬浮效果 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">悬浮效果</h2>\n            <button @click=\"toggleAlert('hover')\"\n                class=\"mb-4 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                {{ visibleAlerts.hover ? '隐藏' : '显示' }}悬浮效果提示框\n            </button>\n            <CodePreview :code=\"hoverAlertCode\">\n                <div class=\"h-20\">\n                    <transition-alert>\n                        <div v-if=\"visibleAlerts.hover\" class=\"group cursor-pointer\">\n                            <Alert message=\"鼠标悬浮在此处查看效果\"\n                                customClass=\"transition-all duration-300 ease-in-out group-hover:scale-[1.02] group-hover:shadow-lg\" />\n                        </div>\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 自定义图标 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">自定义图标</h2>\n            <button @click=\"toggleAlert('customIcon')\"\n                class=\"mb-4 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                {{ visibleAlerts.customIcon ? '隐藏' : '显示' }}自定义图标提示框\n            </button>\n            <CodePreview :code=\"customIconAlertCode\">\n                <div class=\"h-20\">\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.customIcon\" type=\"info\" message=\"这是自定义图标的提示框\">\n                            <template #icon>\n                                <i class=\"icon-[mdi--star] size-5 text-amber-500 animate-spin-slow\"></i>\n                            </template>\n                        </Alert>\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 使用默认插槽 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">使用默认插槽</h2>\n            <button @click=\"toggleAlert('defaultSlot')\"\n                class=\"mb-4 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                {{ visibleAlerts.defaultSlot ? '隐藏' : '显示' }}默认插槽提示框\n            </button>\n            <CodePreview :code=\"defaultSlotAlertCode\">\n                <div class=\"h-20\">\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.defaultSlot\" type=\"info\">\n                            <div>\n                                这是通过<span class=\"font-bold\">默认插槽</span>定义的内容\n                                <a href=\"#\"\n                                    class=\"underline text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors\">\n                                    点击这里\n                                </a>\n                                了解更多信息\n                            </div>\n                        </Alert>\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 使用额外内容插槽 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">使用额外内容插槽</h2>\n            <button @click=\"toggleAlert('extraSlot')\"\n                class=\"mb-4 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                {{ visibleAlerts.extraSlot ? '隐藏' : '显示' }}额外插槽提示框\n            </button>\n            <CodePreview :code=\"extraSlotAlertCode\">\n                <div class=\"h-32\">\n                    <transition-alert>\n                        <Alert v-if=\"visibleAlerts.extraSlot\" type=\"warning\" title=\"提示\" message=\"您的账户即将到期\">\n                            <template #extra>\n                                <div class=\"flex space-x-2\">\n                                    <button\n                                        class=\"px-4 py-1 bg-amber-100 hover:bg-amber-200 dark:bg-amber-900 dark:hover:bg-amber-800 rounded text-amber-800 dark:text-amber-200 transition-colors\">\n                                        立即续费\n                                    </button>\n                                    <button\n                                        class=\"px-4 py-1 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 rounded transition-colors\">\n                                        了解详情\n                                    </button>\n                                </div>\n                            </template>\n                        </Alert>\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 自动关闭 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">自动关闭</h2>\n            <div class=\"flex flex-col gap-4\">\n                <button @click=\"showAutoCloseAlert\"\n                    class=\"w-fit px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors duration-200\">\n                    显示自动关闭提示框 (3秒)\n                </button>\n                <CodePreview :code=\"autoCloseAlertCode\">\n                    <div class=\"h-[80px]\">\n                        <transition enter-from-class=\"opacity-0 translate-y-4\"\n                            enter-active-class=\"transition-all duration-500 ease-out\"\n                            enter-to-class=\"opacity-100 translate-y-0\" leave-from-class=\"opacity-100 translate-y-0\"\n                            leave-active-class=\"transition-all duration-300 ease-in\"\n                            leave-to-class=\"opacity-0 translate-y-4\">\n                            <Alert v-if=\"autoCloseVisible\" type=\"success\" message=\"这个提示框将在3秒后自动关闭\" :duration=\"3000\"\n                                @close=\"autoCloseVisible = false\" />\n                        </transition>\n                    </div>\n                </CodePreview>\n            </div>\n        </section>\n\n        <!-- 交互式动画 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">交互式动画</h2>\n            <button @click=\"toggleAlert('shake')\"\n                class=\"mb-4 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                {{ visibleAlerts.shake ? '隐藏' : '显示' }}交互式提示框\n            </button>\n            <CodePreview :code=\"shakeAlertCode\">\n                <div class=\"h-20\">\n                    <transition-alert>\n                        <div v-if=\"visibleAlerts.shake\" ref=\"shakingAlertContainer\" class=\"cursor-pointer\"\n                            @click=\"shakeAlert\">\n                            <Alert ref=\"shakingAlert\" type=\"danger\" title=\"互动提示\" message=\"点击这个提示框会产生晃动效果！\"\n                                :closable=\"false\" />\n                        </div>\n                    </transition-alert>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 多重组合效果 -->\n        <section>\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">多重组合效果</h2>\n            <div class=\"mb-4 flex flex-wrap gap-2\">\n                <button v-for=\"(type, index) in ['info', 'success', 'warning', 'danger'] as ThemeColorType[]\"\n                    :key=\"index\" @click=\"triggerNotification(type)\"\n                    class=\"px-3 py-1.5 bg-indigo-600 hover:bg-indigo-700 text-white rounded transition-colors\">\n                    显示{{ {\n                        'info': '信息', 'success': '成功', 'warning': '警告', 'danger': '危险', 'primary': '主要', 'secondary':\n                            '次要'\n                    }[type] }}通知\n                </button>\n            </div>\n            <CodePreview :code=\"notificationStackCode\">\n                <div class=\"notification-container fixed bottom-4 right-4 z-10 space-y-2 w-80\">\n                    <transition-group enter-from-class=\"opacity-0 translate-x-8\"\n                        enter-active-class=\"transition-all duration-300 ease-out\" enter-to-class=\"opacity-100 translate-x-0\"\n                        leave-from-class=\"opacity-100 translate-x-0\"\n                        leave-active-class=\"transition-all duration-200 ease-in\" leave-to-class=\"opacity-0 translate-x-8\">\n                        <Alert v-for=\"alert in notifications\" :key=\"alert.id\" :type=\"alert.type\" :message=\"alert.message\"\n                            @close=\"removeNotification(alert.id)\" />\n                    </transition-group>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- API 文档部分 -->\n        <section class=\"mb-10\">\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">组件API</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">属性 (Props)</h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">属性名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">类型</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">默认值</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">type</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">ThemeColorType</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'info'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">警告类型，可选值为：'primary', 'secondary', 'success', 'warning', 'danger', 'info'</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">color</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">ColorType</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">undefined</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义颜色，优先级高于type</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">title</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">警告标题</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">message</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">警告内容</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">closable</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否可关闭</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">showIcon</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否显示图标</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">bordered</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否显示边框</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">customClass</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义类名</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">duration</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">number</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">1000</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自动关闭时间（毫秒），0表示不自动关闭</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">事件 (Events)</h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">事件名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">回调参数</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">close</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">当警告被关闭时触发</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">插槽 (Slots)</h3>\n                <div class=\"overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">插槽名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">default</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义消息内容</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">icon</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自定义图标</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">extra</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">额外内容，显示在警告底部</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section>\n\n        <!-- 小结与最佳实践 -->\n        <section class=\"mb-10\">\n            <h2 class=\"text-xl font-bold mb-4 border-l-4 pl-3 border-indigo-500\">小结与最佳实践</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <div class=\"space-y-4\">\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        Alert 组件是一个用于向用户显示重要信息的轻量级组件，适用于各种场景如状态提醒、操作结果通知、警告信息等。\n                        以下是一些使用建议：\n                    </p>\n\n                    <ul class=\"ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300\">\n                        <li>根据信息的重要程度和语义选择适当的类型：\n                            <div class=\"flex flex-wrap gap-2 mt-1\">\n                                <Alert type=\"success\" message=\"成功消息\" class=\"inline-flex w-auto\" :bordered=\"false\" />\n                                <Alert type=\"info\" message=\"信息提示\" class=\"inline-flex w-auto\" :bordered=\"false\" />\n                                <Alert type=\"warning\" message=\"警告消息\" class=\"inline-flex w-auto\" :bordered=\"false\" />\n                                <Alert type=\"danger\" message=\"危险操作\" class=\"inline-flex w-auto\" :bordered=\"false\" />\n                            </div>\n                        </li>\n                        <li>对于重要信息，添加标题使其更突出:\n                            <Alert type=\"warning\" title=\"注意\" message=\"这是一个带标题的警告信息\" class=\"mt-1 mb-2\" />\n                        </li>\n                        <li>使用自动关闭功能（duration 属性）处理临时通知</li>\n                        <li>利用 icon 和 extra 插槽自定义内容，增强信息的表现力</li>\n                        <li>结合自定义样式（customClass），可以实现更丰富的视觉效果</li>\n                    </ul>\n\n                    <div class=\"rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20\">\n                        <h4 class=\"mb-2 flex items-center text-blue-800 dark:text-blue-300\">\n                            <span class=\"icon-[material-symbols--info-outline-rounded] mr-2 h-5 w-5\"></span>\n                            暗色模式提示\n                        </h4>\n                        <p class=\"text-sm text-blue-700 dark:text-blue-300\">\n                            Alert 组件已内置支持暗色模式，无需额外配置。只要在应用的根元素上添加 <code\n                                class=\"rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60\">.dark</code> 类，\n                            组件就会自动切换为暗色样式，确保在不同主题环境下都能提供良好的可读性和视觉效果。\n                        </p>\n                    </div>\n\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        在设计系统中，合理使用 Alert 组件可以帮助用户更好地注意到重要信息，提高用户体验。同时，通过一致的样式语言，可以让用户更容易理解不同类型信息的紧急程度和重要性。\n                    </p>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, defineComponent, h, onUnmounted } from 'vue';;\nimport Alert from './Alert';\nimport CodePreview from \"../../components/CodePreview\";\nimport type { ThemeColorType, ColorType } from './config';\nimport { \n    basicAlertCode, typeAlertCode, titleAlertCode, animatedAlertCode, \n    colorAlertCode, closableAlertCode, noIconAlertCode, noBorderAlertCode, \n    customStyleAlertCode, hoverAlertCode, customIconAlertCode, defaultSlotAlertCode, \n    extraSlotAlertCode, autoCloseAlertCode, shakeAlertCode, notificationStackCode \n} from './code';\n\n// 通用过渡效果组件\nconst TransitionAlert = defineComponent({\n    setup(_, { slots }) {\n        return () => h('transition', {\n            'enter-from-class': 'opacity-0 scale-95',\n            'enter-active-class': 'transition-all duration-300 ease-out',\n            'enter-to-class': 'opacity-100 scale-100',\n            'leave-from-class': 'opacity-100 scale-100',\n            'leave-active-class': 'transition-all duration-200 ease-in',\n            'leave-to-class': 'opacity-0 scale-95',\n        }, slots.default?.());\n    }\n});\n\n// 控制各种 Alert 的显示状态\nconst visibleAlerts = reactive({\n    basic: false,\n    titleSuccess: false,\n    titleWarning: false,\n    closable: false,\n    nonClosable: false,\n    noIcon: false,\n    noBorder: false,\n    customStyle: false,\n    hover: false,\n    customIcon: false,\n    defaultSlot: false,\n    extraSlot: false,\n    shake: false\n});\n\n// 切换 Alert 显示状态的函数\nconst toggleAlert = (type: keyof typeof visibleAlerts) => {\n    visibleAlerts[type] = !visibleAlerts[type];\n};\n\n// 不同类型的 Alert\nconst alertTypes = ['info', 'success', 'warning', 'danger'] as const;\nconst typeLabels: Record<ThemeColorType, string> = {\n    'info': '信息',\n    'success': '成功',\n    'warning': '警告',\n    'danger': '危险',\n    'primary': '主要',\n    'secondary': '次要'\n};\nconst currentTypeAlert = ref<ThemeColorType | null>(null);\nconst showTypeAlert = (type: string) => {\n    currentTypeAlert.value = type as ThemeColorType;\n    setTimeout(() => {\n        currentTypeAlert.value = null;\n    }, 3000);\n};\n\n// 自定义颜色\nconst colorLabels: Record<string, string> = {\n    'purple': '紫色',\n    'teal': '蓝绿色',\n    'pink': '粉色'\n};\nconst currentColorAlert = ref<ColorType | null>(null);\nconst showColorAlert = (color: ColorType) => {\n    currentColorAlert.value = color;\n    setTimeout(() => {\n        currentColorAlert.value = null;\n    }, 3000);\n};\n\n// 动画提示框\nconst showAnimatedAlert = ref(false);\n\n// 自动关闭提示框\nconst autoCloseVisible = ref(false);\nconst showAutoCloseAlert = () => {\n    autoCloseVisible.value = true;\n};\n\n// 自定义样式\nconst customStyle = ref<string | null>(null);\n\nconst toggleCustomStyle = (style: string) => {\n    if (customStyle.value === style) {\n        customStyle.value = null;\n    } else {\n        customStyle.value = style;\n    }\n};\n\n// 晃动效果\nconst shakingAlert = ref<InstanceType<typeof Alert> | null>(null);\nconst shakingAlertContainer = ref<HTMLElement | null>(null);\nconst shakeTimer = ref<number | null>(null);\n\nconst shakeAlert = () => {\n    if (shakingAlert.value && shakingAlert.value.$el) {\n        // 先清除之前可能存在的定时器\n        if (shakeTimer.value !== null) {\n            clearTimeout(shakeTimer.value);\n        }\n\n        // 添加动画类名\n        shakingAlert.value.$el.classList.add('animate-shake');\n\n        // 设置新的定时器并保存引用\n        shakeTimer.value = window.setTimeout(() => {\n            // 再次检查元素是否仍然存在\n            if (shakingAlert.value &&\n                shakingAlert.value.$el &&\n                shakingAlert.value.$el.classList) {\n                shakingAlert.value.$el.classList.remove('animate-shake');\n            }\n            shakeTimer.value = null;\n        }, 500);\n    }\n};\n\n// 确保在组件销毁时清除定时器\nonUnmounted(() => {\n    if (shakeTimer.value !== null) {\n        clearTimeout(shakeTimer.value);\n    }\n});\n\n// 通知栈\nconst notifications = ref<{ id: number; type: ThemeColorType; message: string }[]>([]);\nlet notificationId = 0;\n\nconst triggerNotification = (type: ThemeColorType) => {\n    const messages: Record<ThemeColorType, string> = {\n        'info': '这是一条信息通知',\n        'success': '操作已成功完成',\n        'warning': '请注意此操作的风险',\n        'danger': '系统检测到错误',\n        'primary': '这是一条主要通知',\n        'secondary': '这是一条次要通知'\n    };\n\n    // 添加新通知\n    notifications.value.push({\n        id: notificationId++,\n        type,\n        message: messages[type]\n    });\n\n    // 5秒后自动移除\n    setTimeout(() => {\n        removeNotification(notificationId - 1);\n    }, 5000);\n};\n\nconst removeNotification = (id: number) => {\n    notifications.value = notifications.value.filter(alert => alert.id !== id);\n};\n</script>\n\n<style scoped>\n/* 晃动动画 */\n@keyframes shake {\n\n    0%,\n    100% {\n        transform: translateX(0);\n    }\n\n    20% {\n        transform: translateX(-8px);\n    }\n\n    40% {\n        transform: translateX(8px);\n    }\n\n    60% {\n        transform: translateX(-5px);\n    }\n\n    80% {\n        transform: translateX(5px);\n    }\n}\n\n.animate-shake {\n    animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n}\n\n/* 缓慢旋转动画 */\n@keyframes spin-slow {\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n.animate-spin-slow {\n    animation: spin-slow 3s linear infinite;\n}\n\n/* 淡入淡出动画 */\n.fade-enter-active,\n.fade-leave-active {\n    transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n    opacity: 0;\n}\n</style>\n"],"names":["basicAlertCode","typeAlertCode","titleAlertCode","animatedAlertCode","colorAlertCode","closableAlertCode","noIconAlertCode","noBorderAlertCode","customStyleAlertCode","hoverAlertCode","customIconAlertCode","defaultSlotAlertCode","extraSlotAlertCode","autoCloseAlertCode","shakeAlertCode","notificationStackCode","TransitionAlert","defineComponent","_","slots","h","_a","visibleAlerts","reactive","toggleAlert","type","alertTypes","typeLabels","currentTypeAlert","ref","showTypeAlert","colorLabels","currentColorAlert","showColorAlert","color","showAnimatedAlert","autoCloseVisible","showAutoCloseAlert","customStyle","toggleCustomStyle","style","shakingAlert","shakingAlertContainer","shakeTimer","shakeAlert","onUnmounted","notifications","notificationId","triggerNotification","messages","removeNotification","id","alert"],"mappings":"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"}