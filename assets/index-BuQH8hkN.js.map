{"version":3,"file":"index-BuQH8hkN.js","sources":["../../src/libs/SwitchBox/SwitchBox.tsx","../../src/libs/SwitchBox/View.vue"],"sourcesContent":["import { computed, defineComponent, ref, PropType, onMounted } from 'vue';\n\nexport default defineComponent({\n    name: 'SwitchBox',\n    props: {\n        modelValue: {\n            type: [Boolean, String, Number],\n            default: false,\n        },\n        checkedValue: {\n            type: [Boolean, String, Number],\n            default: true,\n        },\n        unCheckedValue: {\n            type: [Boolean, String, Number],\n            default: false,\n        },\n        disabled: {\n            type: Boolean,\n            default: false,\n        },\n        loading: {\n            type: Boolean,\n            default: false,\n        },\n        size: {\n            type: String as PropType<'small' | 'default'>,\n            default: 'default',\n            validator: (val: string) => ['small', 'default'].includes(val),\n        },\n        autofocus: {\n            type: Boolean,\n            default: false,\n        },\n        id: {\n            type: String,\n            default: undefined,\n        },\n        name: {\n            type: String,\n            default: undefined,\n        },\n        checkedChildren: {\n            type: String,\n            default: '',\n        },\n        unCheckedChildren: {\n            type: String,\n            default: '',\n        },\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'click',\n    ],\n    setup(props, { emit, slots }) {\n        const switchRef = ref<HTMLButtonElement | null>(null);\n        const isChecked = computed(() => props.modelValue === props.checkedValue);\n        const isFocused = ref(false);\n        const isHovered = ref(false);\n\n        // 检查是否有文字内容\n        const hasCheckedChildren = computed(() => !!slots.checkedChildren || !!props.checkedChildren);\n        const hasUnCheckedChildren = computed(() => !!slots.unCheckedChildren || !!props.unCheckedChildren);\n        const hasChildren = computed(() => hasCheckedChildren.value || hasUnCheckedChildren.value);\n\n        // 处理尺寸相关的样式\n        const switchSizeClasses = computed(() => {\n            const baseClass = 'inline-flex items-center relative rounded-full transition-all duration-300 ease-in-out focus:outline-none';\n\n            if (props.size === 'small') {\n                return [\n                    baseClass,\n                    hasChildren.value\n                        ? 'h-6 min-w-[3.25rem] px-1'\n                        : 'h-5 w-9',\n                ].join(' ');\n            }\n\n            return [\n                baseClass,\n                hasChildren.value\n                    ? 'h-7 min-w-[3.75rem] px-1'\n                    : 'h-6 w-12',\n            ].join(' ');\n        });\n\n        // 处理轨道样式 - 增强对比度\n        const trackClasses = computed(() => {\n            const baseClass = 'absolute inset-0 rounded-full transition-all duration-300 ease-[cubic-bezier(0.34,1.56,0.64,1)] border';\n\n            if (props.disabled) {\n                return `${baseClass} ${isChecked.value\n                    ? 'bg-opacity-70 bg-blue-500 dark:bg-opacity-50 dark:bg-blue-500 border-blue-400 dark:border-blue-600'\n                    : 'bg-gray-200 dark:bg-gray-700 border-gray-300 dark:border-gray-600'}`;\n            }\n\n            let bgClass = isChecked.value\n                ? 'bg-gradient-to-r from-blue-600 to-blue-700 dark:from-blue-500 dark:to-blue-600 border-blue-500 dark:border-blue-500 shadow-inner shadow-blue-800/10'\n                : 'bg-gray-200 dark:bg-gray-600 border-gray-300 dark:border-gray-500';\n\n            if (isHovered.value && !props.loading) {\n                bgClass = isChecked.value\n                    ? 'bg-gradient-to-r from-blue-700 to-blue-800 dark:from-blue-600 dark:to-blue-700 shadow-inner shadow-white/10 border-blue-600 dark:border-blue-600'\n                    : 'bg-gray-300 dark:bg-gray-500 border-gray-400 dark:border-gray-400';\n            }\n\n            return `${baseClass} ${bgClass}`;\n        });\n\n        // 处理开关圆点样式\n        const thumbClasses = computed(() => {\n            const baseClass = 'absolute rounded-full transform transition-all duration-300 ease-[cubic-bezier(0.34,1.56,0.64,1)] border';\n\n            // 基本大小和颜色\n            let sizeAndColor = props.size === 'small'\n                ? 'h-4 w-4 bg-white dark:bg-gray-50 border-gray-200 dark:border-gray-400'\n                : 'h-5 w-5 bg-white dark:bg-gray-50 border-gray-200 dark:border-gray-400';\n\n            // 带阴影效果\n            const shadowEffect = isChecked.value\n                ? 'shadow-md shadow-blue-900/20 dark:shadow-blue-500/30'\n                : 'shadow-md shadow-gray-400/30 dark:shadow-gray-900/40';\n\n            // 计算位置\n            let position;\n            if (hasChildren.value) {\n                position = isChecked.value\n                    ? props.size === 'small' ? 'right-1 left-auto' : 'right-1.5 left-auto'\n                    : props.size === 'small' ? 'left-1 right-auto' : 'left-1.5 right-auto';\n            } else {\n                position = isChecked.value\n                    ? props.size === 'small' ? 'translate-x-4' : 'translate-x-6'\n                    : 'translate-x-1';\n            }\n\n            // 悬停时轻微放大和额外样式\n            const hoverEffect = (isHovered.value && !props.disabled && !props.loading)\n                ? isChecked.value\n                    ? 'scale-110 ring-2 ring-blue-200 dark:ring-blue-700/30'\n                    : 'scale-110 ring-2 ring-gray-200 dark:ring-gray-700/30'\n                : '';\n\n            // 加载中显示内容\n            const loadingClass = props.loading ? 'flex items-center justify-center' : '';\n\n            // 垂直居中\n            const alignClass = hasChildren.value ? 'top-1/2 -translate-y-1/2' : 'top-1/2 -translate-y-1/2';\n\n            return `${baseClass} ${sizeAndColor} ${shadowEffect} ${position} ${hoverEffect} ${loadingClass} ${alignClass}`;\n        });\n\n        // 处理文字标签样式 - 增强文字对比度\n        const labelClasses = computed(() => {\n            const baseClass = 'relative z-10 transition-all duration-300 font-medium';\n            const sizeClass = props.size === 'small' ? 'text-[10px]' : 'text-xs';\n\n            // 文字颜色和位置与不透明度\n            const checkedClass = isChecked.value\n                ? 'opacity-100 pl-2 pr-6 text-white dark:text-white'\n                : 'opacity-0 absolute';\n\n            // 未选中状态的文字使用更暗的颜色以增加对比度\n            const uncheckedClass = !isChecked.value\n                ? 'opacity-100 pr-2 pl-6 text-right text-gray-700 dark:text-gray-200'\n                : 'opacity-0 absolute';\n\n            return {\n                checked: `${baseClass} ${sizeClass} ${checkedClass}`,\n                unchecked: `${baseClass} ${sizeClass} ${uncheckedClass}`,\n            };\n        });\n\n        // 根据状态设置类名\n        const stateClasses = computed(() => {\n            const classes = ['relative'];\n\n            if (props.disabled) {\n                classes.push('cursor-not-allowed opacity-60');\n            } else if (props.loading) {\n                classes.push('cursor-wait');\n            } else {\n                classes.push('cursor-pointer');\n            }\n\n            // 焦点效果\n            if (isFocused.value) {\n                classes.push(isChecked.value\n                    ? 'ring-2 ring-blue-300 dark:ring-blue-400/30'\n                    : 'ring-2 ring-gray-300 dark:ring-gray-500/30');\n            }\n\n            return classes.join(' ');\n        });\n\n        // 加载动画 - 使用更精致的加载指示器\n        const renderLoading = () => {\n            const spinClass = props.size === 'small' ? 'h-2.5 w-2.5' : 'h-3 w-3';\n            return (\n                <svg\n                    class={`animate-spin ${spinClass} ${isChecked.value ? 'text-blue-200 dark:text-blue-300' : 'text-gray-400 dark:text-gray-300'}`}\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <circle\n                        class=\"opacity-25\"\n                        cx=\"12\"\n                        cy=\"12\"\n                        r=\"10\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"4\"\n                    ></circle>\n                    <path\n                        class=\"opacity-75\"\n                        fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                </svg>\n            );\n        };\n\n        // 添加不带文字时显示的ON/OFF图标标识 - 增强对比度\n        const renderLabels = () => {\n            if (hasCheckedChildren.value || hasUnCheckedChildren.value) {\n                return null;\n            }\n\n            return (\n                <div class=\"absolute inset-0 flex items-center justify-between px-1.5 pointer-events-none\">\n                    <span\n                        class={`text-[8px] font-bold transition-opacity duration-300 ${isChecked.value ? 'opacity-0' : 'opacity-80'} text-gray-600 dark:text-gray-300`}>\n                        OFF\n                    </span>\n                    <span\n                        class={`text-[8px] font-bold transition-opacity duration-300 ${isChecked.value ? 'opacity-80' : 'opacity-0'} text-white dark:text-white`}>\n                        ON\n                    </span>\n                </div>\n            );\n        };\n\n        // 事件处理\n        const handleClick = (event: MouseEvent) => {\n            if (props.disabled || props.loading) return;\n\n            const newValue = isChecked.value ? props.unCheckedValue : props.checkedValue;\n\n            emit('update:modelValue', newValue);\n            emit('change', newValue, event);\n            emit('click', newValue, event);\n        };\n\n        const handleKeyDown = (event: KeyboardEvent) => {\n            if (props.disabled || props.loading) return;\n\n            if (event.code === 'Space' || event.code === 'Enter') {\n                event.preventDefault();\n                const newValue = isChecked.value ? props.unCheckedValue : props.checkedValue;\n\n                emit('update:modelValue', newValue);\n                emit('change', newValue, event);\n            }\n        };\n\n        const handleFocus = () => {\n            isFocused.value = true;\n        };\n\n        const handleBlur = () => {\n            isFocused.value = false;\n        };\n\n        const handleMouseEnter = () => {\n            isHovered.value = true;\n        };\n\n        const handleMouseLeave = () => {\n            isHovered.value = false;\n        };\n\n        onMounted(() => {\n            if (props.autofocus && switchRef.value) {\n                switchRef.value.focus();\n            }\n        });\n\n        return () => (\n            <button\n                ref={switchRef}\n                type=\"button\"\n                role=\"switch\"\n                id={props.id}\n                aria-checked={isChecked.value}\n                aria-disabled={props.disabled}\n                tabindex={props.disabled ? -1 : 0}\n                class={switchSizeClasses.value}\n                onClick={handleClick}\n                onKeydown={handleKeyDown}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                onMouseenter={handleMouseEnter}\n                onMouseleave={handleMouseLeave}\n                disabled={props.disabled}\n            >\n                <div class={stateClasses.value}>\n                    <div class={trackClasses.value}></div>\n\n                    {/* 选中状态的文本内容 */}\n                    {(hasCheckedChildren.value) && (\n                        <div class={`flex items-center h-full ${labelClasses.value.checked}`}>\n                            {slots.checkedChildren?.() || props.checkedChildren}\n                        </div>\n                    )}\n\n                    {/* 未选中状态的文本内容 */}\n                    {(hasUnCheckedChildren.value) && (\n                        <div class={`flex items-center justify-end h-full w-full ${labelClasses.value.unchecked}`}>\n                            {slots.unCheckedChildren?.() || props.unCheckedChildren}\n                        </div>\n                    )}\n\n                    {/* 滑块 */}\n                    <div class={thumbClasses.value}>\n                        {props.loading && renderLoading()}\n                    </div>\n\n                    {/* 添加不带文字时显示的ON/OFF图标标识 - 使用函数渲染 */}\n                    {renderLabels()}\n                </div>\n            </button>\n        );\n    }\n});\n","<template>\n    <div\n        class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-8 transition-colors duration-500 dark:from-gray-900 dark:to-gray-800\">\n        <h1 class=\"mb-6 flex items-center text-4xl font-bold tracking-tight text-gray-800 dark:text-white\">\n            <span class=\"mr-4 text-blue-500 dark:text-blue-400\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-10 w-10\" viewBox=\"0 0 24 24\" fill=\"none\"\n                    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n                </svg>\n            </span>\n            Switch\n            <span class=\"ml-2 text-lg font-normal text-gray-500 dark:text-gray-400\">开关选择器</span>\n        </h1>\n        <p class=\"mb-12 max-w-3xl leading-relaxed text-gray-600 dark:text-gray-300\">\n            Switch\n            开关是一种用于在两种状态之间进行切换的精致控件。相比复选框，开关组件更直观、更优雅，能够立即触发状态变化，为用户提供即时的视觉反馈。\n        </p>\n\n        <div class=\"grid grid-cols-1 gap-10 lg:grid-cols-2\">\n            <!-- 基础用法展示区 -->\n            <section\n                class=\"rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md dark:bg-gray-800\">\n                <h2 class=\"mb-6 flex items-center text-xl font-semibold text-gray-800 dark:text-white\">\n                    <div class=\"mr-3 h-6 w-1.5 rounded-full bg-blue-500 dark:bg-blue-400\"></div>\n                    基础用法\n                </h2>\n                <div class=\"space-y-10\">\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            增强辨识度开关\n                        </p>\n                        <div class=\"mb-8 flex flex-wrap items-center gap-8\">\n                            <div class=\"rounded-lg bg-white p-4 shadow-sm\">\n                                <SwitchBox v-model=\"enhancedSwitchOn\" />\n                                <div class=\"mt-2 text-center text-xs text-gray-500\">\n                                    开启状态\n                                </div>\n                            </div>\n                            <div class=\"rounded-lg bg-white p-4 shadow-sm\">\n                                <SwitchBox v-model=\"enhancedSwitchOff\" />\n                                <div class=\"mt-2 text-center text-xs text-gray-500\">\n                                    关闭状态\n                                </div>\n                            </div>\n                            <div class=\"rounded-lg bg-gray-100 p-4\">\n                                <SwitchBox v-model=\"enhancedSwitchOn\" />\n                                <div class=\"mt-2 text-center text-xs text-gray-500\">\n                                    灰色背景\n                                </div>\n                            </div>\n                            <div class=\"rounded-lg bg-blue-50 p-4\">\n                                <SwitchBox v-model=\"enhancedSwitchOff\" />\n                                <div class=\"mt-2 text-center text-xs text-gray-500\">\n                                    蓝色背景\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            默认开关\n                        </p>\n                        <div class=\"flex items-center space-x-8\">\n                            <SwitchBox v-model=\"basicSwitch\" />\n                            <span class=\"text-sm text-gray-600 dark:text-gray-300\">当前状态: {{ basicSwitch ? \"开启\" : \"关闭\"\n                            }}</span>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            带文字\n                        </p>\n                        <div class=\"flex items-center space-x-8\">\n                            <SwitchBox v-model=\"textSwitch\" checkedChildren=\"开\" unCheckedChildren=\"关\" />\n                            <span class=\"text-sm text-gray-600 dark:text-gray-300\">{{\n                                textSwitch ? \"已开启\" : \"已关闭\"\n                            }}</span>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            文字宽度自适应\n                        </p>\n                        <div class=\"flex items-center space-x-8\">\n                            <SwitchBox v-model=\"longTextSwitch\" checkedChildren=\"开启状态\" unCheckedChildren=\"关闭状态\" />\n                            <span class=\"text-sm text-gray-600 dark:text-gray-300\">更长的文字</span>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            自定义值\n                        </p>\n                        <div class=\"flex items-center space-x-8\">\n                            <SwitchBox v-model=\"customValueSwitch\" :checkedValue=\"'active'\"\n                                :unCheckedValue=\"'inactive'\" />\n                            <span class=\"text-sm text-gray-600 dark:text-gray-300\">当前值: {{ customValueSwitch }}</span>\n                        </div>\n                    </div>\n\n                    <!-- 新增效果：无缝切换 -->\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            无缝动画切换\n                        </p>\n                        <div class=\"flex flex-wrap items-center gap-4\">\n                            <SwitchBox v-model=\"animatedSwitch\"\n                                class=\"transform transition-all duration-500 hover:scale-110\" />\n                            <div class=\"flex items-center space-x-2\">\n                                <div class=\"h-3 w-3 rounded-full transition-all duration-500\" :class=\"animatedSwitch\n                                    ? 'bg-blue-500'\n                                    : 'bg-gray-300 dark:bg-gray-600'\n                                    \"></div>\n                                <div class=\"h-3 w-3 rounded-full transition-all duration-500\" :class=\"animatedSwitch\n                                    ? 'bg-blue-500 delay-100'\n                                    : 'bg-gray-300 dark:bg-gray-600'\n                                    \"></div>\n                                <div class=\"h-3 w-3 rounded-full transition-all duration-500\" :class=\"animatedSwitch\n                                    ? 'bg-blue-500 delay-200'\n                                    : 'bg-gray-300 dark:bg-gray-600'\n                                    \"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 尺寸与状态展示区 -->\n            <section\n                class=\"rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md dark:bg-gray-800\">\n                <h2 class=\"mb-6 flex items-center text-xl font-semibold text-gray-800 dark:text-white\">\n                    <div class=\"mr-3 h-6 w-1.5 rounded-full bg-green-500 dark:bg-green-400\"></div>\n                    尺寸与状态\n                </h2>\n                <div class=\"space-y-10\">\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            不同尺寸\n                        </p>\n                        <div class=\"flex items-center space-x-8\">\n                            <div>\n                                <SwitchBox size=\"default\" v-model=\"defaultSizeSwitch\" />\n                                <span\n                                    class=\"mt-2 block text-center text-xs text-gray-500 dark:text-gray-400\">默认尺寸</span>\n                            </div>\n                            <div>\n                                <SwitchBox size=\"small\" v-model=\"smallSizeSwitch\" />\n                                <span class=\"mt-2 block text-center text-xs text-gray-500 dark:text-gray-400\">小尺寸</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            带文字的尺寸\n                        </p>\n                        <div class=\"flex items-center space-x-8\">\n                            <div>\n                                <SwitchBox size=\"default\" v-model=\"defaultSizeTextSwitch\" checkedChildren=\"ON\"\n                                    unCheckedChildren=\"OFF\" />\n                                <span\n                                    class=\"mt-2 block text-center text-xs text-gray-500 dark:text-gray-400\">默认尺寸</span>\n                            </div>\n                            <div>\n                                <SwitchBox size=\"small\" v-model=\"smallSizeTextSwitch\" checkedChildren=\"开\"\n                                    unCheckedChildren=\"关\" />\n                                <span class=\"mt-2 block text-center text-xs text-gray-500 dark:text-gray-400\">小尺寸</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            禁用状态\n                        </p>\n                        <div class=\"flex items-center space-x-8\">\n                            <SwitchBox v-model=\"disabledOnSwitch\" disabled />\n                            <SwitchBox v-model=\"disabledOffSwitch\" disabled />\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            加载状态\n                        </p>\n                        <div class=\"flex items-center space-x-8\">\n                            <SwitchBox v-model=\"loadingOnSwitch\" loading />\n                            <SwitchBox v-model=\"loadingOffSwitch\" loading />\n                        </div>\n                    </div>\n\n                    <!-- 新增效果：鼠标悬停交互 -->\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            悬停效果\n                        </p>\n                        <div class=\"flex items-center space-x-6\">\n                            <div class=\"group\">\n                                <SwitchBox v-model=\"hoverSwitch1\"\n                                    class=\"transition-all duration-300 group-hover:scale-110\" />\n                                <span\n                                    class=\"mt-2 block text-center text-xs text-gray-500 opacity-0 transition-opacity duration-300 group-hover:opacity-100 dark:text-gray-400\">放大效果</span>\n                            </div>\n                            <div class=\"group\">\n                                <SwitchBox v-model=\"hoverSwitch2\"\n                                    class=\"shadow-md transition-all duration-300 group-hover:shadow-lg group-hover:shadow-blue-500/20 dark:shadow-gray-900/30 dark:group-hover:shadow-blue-500/10\" />\n                                <span\n                                    class=\"mt-2 block text-center text-xs text-gray-500 opacity-0 transition-opacity duration-300 group-hover:opacity-100 dark:text-gray-400\">阴影效果</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 交互示例 -->\n            <section\n                class=\"rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md dark:bg-gray-800\">\n                <h2 class=\"mb-6 flex items-center text-xl font-semibold text-gray-800 dark:text-white\">\n                    <div class=\"mr-3 h-6 w-1.5 rounded-full bg-purple-500 dark:bg-purple-400\"></div>\n                    交互示例\n                </h2>\n                <div class=\"space-y-10\">\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            切换主题\n                        </p>\n                        <div class=\"flex items-center space-x-4\">\n                            <span class=\"text-sm text-gray-600 dark:text-gray-300\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\"\n                                    fill=\"currentColor\">\n                                    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n                                </svg>\n                            </span>\n                            <SwitchBox v-model=\"themeSwitcher\" />\n                            <span class=\"text-sm text-gray-600 dark:text-gray-300\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\"\n                                    fill=\"currentColor\">\n                                    <path fill-rule=\"evenodd\"\n                                        d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.707.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n                                        clip-rule=\"evenodd\" />\n                                </svg>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            控制其他元素\n                        </p>\n                        <div class=\"flex flex-col space-y-4\">\n                            <div class=\"flex items-center space-x-4\">\n                                <SwitchBox v-model=\"controlCardSwitch\" />\n                                <span class=\"text-sm text-gray-600 dark:text-gray-300\">显示卡片</span>\n                            </div>\n                            <div v-if=\"controlCardSwitch\"\n                                class=\"animate-fade-in rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-800 dark:bg-blue-900/20\">\n                                <p class=\"text-blue-600 dark:text-blue-300\">\n                                    这是一个受控制的卡片\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            切换加载状态\n                        </p>\n                        <div class=\"flex items-center space-x-4\">\n                            <SwitchBox v-model=\"toggleLoadingSwitch\" :loading=\"isLoadingSwitch\"\n                                @change=\"handleLoadingToggle\" />\n                            <span class=\"text-sm text-gray-600 dark:text-gray-300\">{{\n                                isLoadingSwitch ? \"加载中...\" : \"点击切换\"\n                            }}</span>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 高级用法展示区 -->\n            <section\n                class=\"rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md dark:bg-gray-800\">\n                <h2 class=\"mb-6 flex items-center text-xl font-semibold text-gray-800 dark:text-white\">\n                    <div class=\"mr-3 h-6 w-1.5 rounded-full bg-yellow-500 dark:bg-yellow-400\"></div>\n                    高级用法\n                </h2>\n                <div class=\"space-y-10\">\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            自定义插槽\n                        </p>\n                        <div class=\"flex items-center space-x-8\">\n                            <SwitchBox v-model=\"customSlotSwitch\">\n                                <template #checkedChildren>\n                                    <span class=\"animate-pulse\">YES</span>\n                                </template>\n                                <template #unCheckedChildren>\n                                    <span class=\"animate-pulse\">NO</span>\n                                </template>\n                            </SwitchBox>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            表单集成\n                        </p>\n                        <div class=\"rounded-lg bg-gray-50 p-4 dark:bg-gray-700\">\n                            <div class=\"mb-4 flex items-center justify-between\">\n                                <span class=\"text-sm font-medium text-gray-700 dark:text-gray-200\">通知设置</span>\n                                <SwitchBox v-model=\"notificationSwitch\" />\n                            </div>\n                            <div class=\"space-y-2 border-l-2 border-gray-200 pl-4 transition-all duration-300 dark:border-gray-600\"\n                                :class=\"{ 'opacity-50': !notificationSwitch }\">\n                                <div class=\"flex items-center justify-between\">\n                                    <span class=\"text-xs text-gray-600 dark:text-gray-300\">电子邮件通知</span>\n                                    <SwitchBox v-model=\"emailNotificationSwitch\" size=\"small\"\n                                        :disabled=\"!notificationSwitch\" />\n                                </div>\n                                <div class=\"flex items-center justify-between\">\n                                    <span class=\"text-xs text-gray-600 dark:text-gray-300\">短信通知</span>\n                                    <SwitchBox v-model=\"smsNotificationSwitch\" size=\"small\"\n                                        :disabled=\"!notificationSwitch\" />\n                                </div>\n                                <div class=\"flex items-center justify-between\">\n                                    <span class=\"text-xs text-gray-600 dark:text-gray-300\">应用内通知</span>\n                                    <SwitchBox v-model=\"appNotificationSwitch\" size=\"small\"\n                                        :disabled=\"!notificationSwitch\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            数字数值控制\n                        </p>\n                        <div class=\"mb-2 flex items-center space-x-4\">\n                            <SwitchBox v-model=\"numberSwitch\" :checkedValue=\"100\" :unCheckedValue=\"0\" />\n                            <span class=\"text-lg font-medium text-gray-700 dark:text-gray-200\">{{ numberSwitch }}</span>\n                        </div>\n                        <div class=\"h-2 rounded-full bg-gray-100 dark:bg-gray-700\">\n                            <div class=\"h-2 rounded-full bg-blue-500 transition-all duration-500\"\n                                :style=\"{ width: `${numberSwitch}%` }\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 新增：动画效果展示 -->\n            <section\n                class=\"rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md dark:bg-gray-800\">\n                <h2 class=\"mb-8 flex items-center text-xl font-bold text-gray-800 dark:text-white\">\n                    <div\n                        class=\"mr-3 h-6 w-1 rounded-full bg-gradient-to-b from-cyan-400 to-cyan-600 dark:from-cyan-300 dark:to-cyan-500\">\n                    </div>\n                    动画效果\n                </h2>\n\n                <div class=\"space-y-10\">\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            脉冲动画\n                        </p>\n                        <div class=\"flex items-center space-x-6\">\n                            <SwitchBox v-model=\"pulseSwitch\">\n                                <template #checkedChildren>\n                                    <span class=\"animate-pulse\">ON</span>\n                                </template>\n                                <template #unCheckedChildren>\n                                    <span class=\"animate-pulse\">OFF</span>\n                                </template>\n                            </SwitchBox>\n\n                            <div class=\"flex h-10 w-10 items-center justify-center rounded-full transition-colors duration-500\"\n                                :class=\"pulseSwitch\n                                    ? 'bg-blue-100 dark:bg-blue-900/30'\n                                    : 'bg-gray-100 dark:bg-gray-700'\n                                    \">\n                                <div class=\"h-6 w-6 rounded-full transition-all duration-500\" :class=\"pulseSwitch\n                                    ? 'animate-pulse bg-blue-500 dark:bg-blue-400'\n                                    : 'bg-gray-400 dark:bg-gray-600'\n                                    \"></div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            波纹效果\n                        </p>\n                        <div class=\"flex items-center space-x-4\">\n                            <SwitchBox v-model=\"rippleSwitch\" class=\"relative\">\n                                <div v-if=\"showRipple\"\n                                    class=\"absolute inset-0 animate-ping rounded-full bg-blue-500/20 dark:bg-blue-400/20\">\n                                </div>\n                            </SwitchBox>\n\n                            <button @click=\"triggerRipple\"\n                                class=\"rounded-md bg-gray-100 px-3 py-1 text-sm text-gray-600 transition-colors duration-300 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600\">\n                                点击触发波纹\n                            </button>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            连锁反应\n                        </p>\n                        <div class=\"space-y-2\">\n                            <div class=\"flex space-x-3\">\n                                <SwitchBox v-model=\"chainReaction\" @change=\"triggerChainReaction\" />\n                                <span class=\"text-sm text-gray-600 dark:text-gray-300\">触发连锁反应</span>\n                            </div>\n                            <div class=\"flex items-center space-x-3\">\n                                <SwitchBox v-model=\"chainSwitch1\" disabled />\n                                <SwitchBox v-model=\"chainSwitch2\" disabled />\n                                <SwitchBox v-model=\"chainSwitch3\" disabled />\n                                <SwitchBox v-model=\"chainSwitch4\" disabled />\n                                <SwitchBox v-model=\"chainSwitch5\" disabled />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 新增：实际应用场景 -->\n            <section\n                class=\"rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md dark:bg-gray-800\">\n                <h2 class=\"mb-8 flex items-center text-xl font-bold text-gray-800 dark:text-white\">\n                    <div\n                        class=\"mr-3 h-6 w-1 rounded-full bg-gradient-to-b from-amber-400 to-amber-600 dark:from-amber-300 dark:to-amber-500\">\n                    </div>\n                    实际场景\n                </h2>\n\n                <div class=\"space-y-10\">\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            设置面板\n                        </p>\n                        <div class=\"rounded-xl bg-gray-50 p-4 dark:bg-gray-700\">\n                            <div class=\"space-y-4\">\n                                <div\n                                    class=\"flex items-center justify-between rounded-lg p-2 transition-colors duration-300 hover:bg-gray-100 dark:hover:bg-gray-600\">\n                                    <div class=\"flex items-center\">\n                                        <div\n                                            class=\"flex h-8 w-8 items-center justify-center rounded-full bg-blue-100 text-blue-500 dark:bg-blue-900/30 dark:text-blue-400\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\"\n                                                viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                                    d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                                            </svg>\n                                        </div>\n                                        <div class=\"ml-3\">\n                                            <p class=\"text-sm font-medium text-gray-700 dark:text-gray-200\">\n                                                自动锁定\n                                            </p>\n                                            <p class=\"text-xs text-gray-500 dark:text-gray-400\">\n                                                闲置5分钟后自动锁定应用\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <SwitchBox v-model=\"settingSwitch1\" />\n                                </div>\n\n                                <div\n                                    class=\"flex items-center justify-between rounded-lg p-2 transition-colors duration-300 hover:bg-gray-100 dark:hover:bg-gray-600\">\n                                    <div class=\"flex items-center\">\n                                        <div\n                                            class=\"flex h-8 w-8 items-center justify-center rounded-full bg-green-100 text-green-500 dark:bg-green-900/30 dark:text-green-400\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\"\n                                                viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                                    d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n                                            </svg>\n                                        </div>\n                                        <div class=\"ml-3\">\n                                            <p class=\"text-sm font-medium text-gray-700 dark:text-gray-200\">\n                                                推送通知\n                                            </p>\n                                            <p class=\"text-xs text-gray-500 dark:text-gray-400\">\n                                                接收重要更新和提醒\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <SwitchBox v-model=\"settingSwitch2\" />\n                                </div>\n\n                                <div\n                                    class=\"flex items-center justify-between rounded-lg p-2 transition-colors duration-300 hover:bg-gray-100 dark:hover:bg-gray-600\">\n                                    <div class=\"flex items-center\">\n                                        <div\n                                            class=\"flex h-8 w-8 items-center justify-center rounded-full bg-purple-100 text-purple-500 dark:bg-purple-900/30 dark:text-purple-400\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\"\n                                                viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                                    d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                                            </svg>\n                                        </div>\n                                        <div class=\"ml-3\">\n                                            <p class=\"text-sm font-medium text-gray-700 dark:text-gray-200\">\n                                                高级安全\n                                            </p>\n                                            <p class=\"text-xs text-gray-500 dark:text-gray-400\">\n                                                启用两因素认证\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <SwitchBox v-model=\"settingSwitch3\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- 新增一个声音波形效果 -->\n                    <div>\n                        <p class=\"mb-4 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                            音频控制\n                        </p>\n                        <div class=\"mb-4 flex items-center space-x-4\">\n                            <SwitchBox v-model=\"audioSwitch\" />\n                            <div class=\"text-sm text-gray-700 dark:text-gray-300\">\n                                {{ audioSwitch ? \"声音开启\" : \"静音\" }}\n                            </div>\n                        </div>\n\n                        <div class=\"flex h-16 items-center justify-center rounded-lg bg-gray-50 dark:bg-gray-700\">\n                            <div class=\"flex items-center space-x-1\">\n                                <div v-for=\"n in 12\" :key=\"n\"\n                                    class=\"w-1 rounded-full bg-blue-500 transition-all duration-300 ease-in-out dark:bg-blue-400\"\n                                    :class=\"audioSwitch ? 'animate-sound-wave' : 'h-2'\" :style=\"{\n                                        height: audioSwitch\n                                            ? `${Math.sin(n * 0.5) * 15 + 20}px`\n                                            : '8px',\n                                        animationDelay: `${n * 60}ms`,\n                                    }\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 定制主题展示 -->\n            <section\n                class=\"col-span-1 rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md lg:col-span-2 dark:bg-gray-800\">\n                <h2 class=\"mb-6 flex items-center text-xl font-semibold text-gray-800 dark:text-white\">\n                    <div class=\"mr-3 h-6 w-1.5 rounded-full bg-indigo-500 dark:bg-indigo-400\"></div>\n                    定制主题\n                </h2>\n\n                <div class=\"grid grid-cols-1 gap-8 md:grid-cols-2\">\n                    <!-- 亮色模式定制 -->\n                    <div class=\"rounded-lg bg-white p-6 shadow-sm\">\n                        <h3 class=\"mb-6 text-lg font-medium text-gray-800\">彩色开关主题</h3>\n                        <div class=\"grid grid-cols-2 gap-6\">\n                            <div class=\"flex flex-col items-center\">\n                                <SwitchBox v-model=\"redSwitch\" class=\"switch-red\" />\n                                <span class=\"mt-2 text-xs text-gray-500\">红色主题</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <SwitchBox v-model=\"greenSwitch\" class=\"switch-green\" />\n                                <span class=\"mt-2 text-xs text-gray-500\">绿色主题</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <SwitchBox v-model=\"purpleSwitch\" class=\"switch-purple\" />\n                                <span class=\"mt-2 text-xs text-gray-500\">紫色主题</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <SwitchBox v-model=\"orangeSwitch\" class=\"switch-orange\" />\n                                <span class=\"mt-2 text-xs text-gray-500\">橙色主题</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- 暗色模式定制 -->\n                    <div class=\"rounded-lg bg-gray-900 p-6 shadow-sm\">\n                        <h3 class=\"mb-6 text-lg font-medium text-gray-200\">\n                            暗色模式自定义\n                        </h3>\n                        <div class=\"grid grid-cols-2 gap-6\">\n                            <div class=\"flex flex-col items-center\">\n                                <SwitchBox v-model=\"iconSwitch1\" class=\"dark-theme-switch\" checkedChildren=\"✓\"\n                                    unCheckedChildren=\"✗\" />\n                                <span class=\"mt-2 text-xs text-gray-400\">图标开关</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <SwitchBox v-model=\"coloredDarkSwitch\" class=\"dark-color-switch\" />\n                                <span class=\"mt-2 text-xs text-gray-400\">渐变主题</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <SwitchBox v-model=\"emojiSwitch\" checkedChildren=\"🌙\" unCheckedChildren=\"☀️\" />\n                                <span class=\"mt-2 text-xs text-gray-400\">主题切换</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <SwitchBox v-model=\"outlineSwitch\" class=\"outline-switch\" />\n                                <span class=\"mt-2 text-xs text-gray-400\">轮廓风格</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <section\n                class=\"col-span-1 mt-10 rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md lg:col-span-2 dark:bg-gray-800\">\n                <h2\n                    class=\"mb-8 border-b border-gray-100 pb-3 text-2xl font-bold text-gray-800 dark:border-gray-700 dark:text-white\">\n                    组件总结\n                </h2>\n\n                <!-- 修改此处，从网格布局改为正常流式布局 -->\n                <div class=\"space-y-6\">\n                    <div>\n                        <h3 class=\"mb-4 text-lg font-semibold text-gray-800 dark:text-white\">\n                            使用场景\n                        </h3>\n                        <ul class=\"list-disc space-y-2 pl-5 text-gray-600 dark:text-gray-300\">\n                            <li>表示开关状态、打开或关闭</li>\n                            <li>触发即时的状态变更操作</li>\n                            <li>在设置选项中启用或禁用功能</li>\n                            <li>需要用户进行二元选择的场景</li>\n                            <li>替代单个复选框的使用场景</li>\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3 class=\"mb-4 text-lg font-semibold text-gray-800 dark:text-white\">\n                            设计建议\n                        </h3>\n                        <ul class=\"list-disc space-y-2 pl-5 text-gray-600 dark:text-gray-300\">\n                            <li>开关应当提供即时反馈，状态变化清晰可见</li>\n                            <li>推荐在右侧搭配文本说明开关的功能</li>\n                            <li>在移动端使用时确保有足够大的点击区域</li>\n                            <li>考虑使用颜色区分不同类型的开关功能</li>\n                            <li>对于重要功能，可考虑添加切换确认</li>\n                        </ul>\n                    </div>\n                </div>\n\n                <!-- API速查 -->\n                <div class=\"mt-8 rounded-lg bg-gray-50 p-4 dark:bg-gray-700\">\n                    <h3 class=\"mb-4 text-lg font-semibold text-gray-800 dark:text-white\">\n                        API 速查表\n                    </h3>\n                    <div class=\"overflow-x-auto\">\n                        <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n                            <thead>\n                                <tr>\n                                    <th\n                                        class=\"px-4 py-2 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                        属性\n                                    </th>\n                                    <th\n                                        class=\"px-4 py-2 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                        类型\n                                    </th>\n                                    <th\n                                        class=\"px-4 py-2 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                        默认值\n                                    </th>\n                                    <th\n                                        class=\"px-4 py-2 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                        说明\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody class=\"divide-y divide-gray-200 dark:divide-gray-600\">\n                                <tr>\n                                    <td class=\"px-4 py-2 text-sm text-blue-600 dark:text-blue-400\">\n                                        modelValue\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300\">\n                                        boolean | string | number\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300\">\n                                        false\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300\">\n                                        开关的值，可使用v-model绑定\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-2 text-sm text-blue-600 dark:text-blue-400\">\n                                        disabled\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300\">\n                                        boolean\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300\">\n                                        false\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300\">\n                                        是否禁用\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-2 text-sm text-blue-600 dark:text-blue-400\">\n                                        size\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300\">\n                                        string\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300\">\n                                        'default'\n                                    </td>\n                                    <td class=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300\">\n                                        开关大小，可选 'default' 或 'small'\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </section>\n            <section\n                class=\"col-span-1 mt-10 rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md lg:col-span-2 dark:bg-gray-800\">\n                <h2\n                    class=\"mb-6 border-b border-gray-200 pb-2 text-2xl font-bold text-gray-800 dark:border-gray-700 dark:text-white\">\n                    API 文档\n                </h2>\n\n                <div class=\"space-y-8\">\n                    <div>\n                        <h3 class=\"mb-4 text-xl font-semibold text-gray-800 dark:text-white\">\n                            组件属性\n                        </h3>\n                        <div class=\"overflow-x-auto\">\n                            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                            属性\n                                        </th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                            类型\n                                        </th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                            默认值\n                                        </th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                            说明\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody class=\"divide-y divide-gray-200 bg-white dark:divide-gray-700 dark:bg-gray-800\">\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            modelValue\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            boolean | string | number\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            false\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            开关的当前值。支持 v-model 绑定。\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            checkedValue\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            boolean | string | number\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            true\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            选中时对应的值\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            unCheckedValue\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            boolean | string | number\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            false\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            未选中时对应的值\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            disabled\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            boolean\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            false\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            是否禁用开关\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            loading\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            boolean\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            false\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            是否显示加载中状态\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            size\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            string\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            'default'\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            开关大小，可选值：'small' 或 'default'\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            autofocus\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            boolean\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            false\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            是否自动获取焦点\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            checkedChildren\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            string\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            ''\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            选中时显示的文字\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            unCheckedChildren\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            string\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            ''\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            未选中时显示的文字\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            id\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            string\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            undefined\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            开关的唯一标识\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            name\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            string\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            undefined\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            表单字段名称\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h3 class=\"mb-4 text-xl font-semibold text-gray-800 dark:text-white\">\n                            事件\n                        </h3>\n                        <div class=\"overflow-x-auto\">\n                            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                            事件名称\n                                        </th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                            说明\n                                        </th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                            回调参数\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody class=\"divide-y divide-gray-200 bg-white dark:divide-gray-700 dark:bg-gray-800\">\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            update:modelValue\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            当开关值变化时触发，支持v-model\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            (value: boolean | string | number)\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            change\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            当开关值变化时触发\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            (value: boolean | string | number, event: Event)\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            click\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            点击开关时触发\n                                        </td>\n                                        <td\n                                            class=\"px-6 py-4 text-sm whitespace-nowrap text-gray-600 dark:text-gray-300\">\n                                            (value: boolean | string | number, event: MouseEvent)\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h3 class=\"mb-4 text-xl font-semibold text-gray-800 dark:text-white\">\n                            插槽\n                        </h3>\n                        <div class=\"overflow-x-auto\">\n                            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                            插槽名称\n                                        </th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400\">\n                                            说明\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody class=\"divide-y divide-gray-200 bg-white dark:divide-gray-700 dark:bg-gray-800\">\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            checkedChildren\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            开关处于选中状态时显示的内容\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td\n                                            class=\"px-6 py-4 text-sm font-medium whitespace-nowrap text-blue-600 dark:text-blue-400\">\n                                            unCheckedChildren\n                                        </td>\n                                        <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                            开关处于未选中状态时显示的内容\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h3 class=\"mb-4 text-xl font-semibold text-gray-800 dark:text-white\">\n                            使用示例\n                        </h3>\n                        <div class=\"mb-6 overflow-auto rounded-md bg-gray-50 p-4 dark:bg-gray-900\">\n                            <pre class=\"text-sm text-gray-700 dark:text-gray-300\">\n                    // 基础使用\n                    &lt;SwitchBox v-model=\"switchValue\" /&gt;\n\n                    // 带文字的开关\n                    &lt;SwitchBox v-model=\"switchValue\" checkedChildren=\"开\" unCheckedChildren=\"关\" /&gt;\n\n                    // 不同尺寸\n                    &lt;SwitchBox v-model=\"switchValue\" size=\"small\" /&gt;\n                    &lt;SwitchBox v-model=\"switchValue\" size=\"default\" /&gt;\n\n                    // 加载状态\n                    &lt;SwitchBox v-model=\"switchValue\" loading /&gt;\n\n                    // 禁用状态\n                    &lt;SwitchBox v-model=\"switchValue\" disabled /&gt;\n\n                    // 自定义值\n                    &lt;SwitchBox\n                    v-model=\"status\"\n                    :checkedValue=\"'active'\"\n                    :unCheckedValue=\"'inactive'\"\n                    /&gt;\n\n                    // 自定义插槽\n                    &lt;SwitchBox v-model=\"switchValue\"&gt;\n                    &lt;template #checkedChildren&gt;\n                    &lt;span class=\"animate-pulse\"&gt;YES&lt;/span&gt;\n                    &lt;/template&gt;\n                    &lt;template #unCheckedChildren&gt;\n                    &lt;span class=\"animate-pulse\"&gt;NO&lt;/span&gt;\n                    &lt;/template&gt;\n                    &lt;/SwitchBox&gt;</pre>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h3 class=\"mb-4 text-xl font-semibold text-gray-800 dark:text-white\">\n                            常见应用场景\n                        </h3>\n                        <div class=\"space-y-4 text-gray-700 dark:text-gray-300\">\n                            <p>\n                                <strong class=\"text-gray-900 dark:text-white\">1. 功能开关：</strong>\n                                如开启/关闭通知、深色模式切换、隐私设置等场景。\n                            </p>\n                            <p>\n                                <strong class=\"text-gray-900 dark:text-white\">2. 表单选项：</strong>\n                                在表单中作为启用/禁用某项功能的控件。\n                            </p>\n                            <p>\n                                <strong class=\"text-gray-900 dark:text-white\">3. 列表控制：</strong>\n                                在数据列表中快速修改某行数据的状态。\n                            </p>\n                            <p>\n                                <strong class=\"text-gray-900 dark:text-white\">4. 条件显示：</strong>\n                                控制界面元素的显示与隐藏。\n                            </p>\n                            <p>\n                                <strong class=\"text-gray-900 dark:text-white\">5. 系统设置：</strong>\n                                应用程序或系统配置界面中进行功能控制。\n                            </p>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h3 class=\"mb-4 text-xl font-semibold text-gray-800 dark:text-white\">\n                            注意事项\n                        </h3>\n                        <div\n                            class=\"mb-6 rounded-md bg-yellow-50 p-4 text-sm text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200\">\n                            <ul class=\"space-y-2\">\n                                <li>• 文字内容过长时应使用省略号或考虑其他组件</li>\n                                <li>• 不要使用开关组件处理需要用户确认的重要操作</li>\n                                <li>• 在禁用状态下保持足够的对比度，确保用户能感知组件状态</li>\n                                <li>• 避免在同一界面使用过多风格迥异的开关组件</li>\n                                <li>\n                                    • 如需延迟生效的场景，应提供明确的提交按钮而非使用开关立即触发\n                                </li>\n                                <li>• 在移动端使用时，确保开关有足够大的可点击区域</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section\n                class=\"col-span-1 mt-10 rounded-2xl bg-white p-8 shadow-sm transition-all duration-300 hover:shadow-md lg:col-span-2 dark:bg-gray-800\">\n                <h2\n                    class=\"mb-6 border-b border-gray-200 pb-2 text-2xl font-bold text-gray-800 dark:border-gray-700 dark:text-white\">\n                    小结与最佳实践\n                </h2>\n                <div class=\"space-y-6 text-gray-700 dark:text-gray-300\">\n                    <div>\n                        <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n                            <span class=\"mr-2 text-blue-500 dark:text-blue-400\">•</span>何时使用开关组件\n                        </h3>\n                        <ul class=\"ml-5 list-inside list-disc space-y-2 text-gray-600 dark:text-gray-400\">\n                            <li>当需要表示开关状态（打开/关闭）时</li>\n                            <li>需要立即响应用户操作并触发状态变更的场景</li>\n                            <li>适合在设置面板中启用或禁用某个功能</li>\n                            <li>作为单个复选框的替代，特别是在移动端界面中</li>\n                            <li>需要对两种互斥状态进行直观切换的场景</li>\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3 class=\"dark:text白 mb-3 text-lg font-medium text-gray-900\">\n                            <span class=\"mr-2 text-green-500 dark:text-green-400\">•</span>设计建议\n                        </h3>\n                        <ul class=\"ml-5 list-inside list-disc space-y-2 text-gray-600 dark:text-gray-400\">\n                            <li>确保开关状态在各种背景下都有足够的对比度，便于用户辨识</li>\n                            <li>在开关旁提供明确的标签文本，解释开关控制的功能</li>\n                            <li>对于重要功能的切换，考虑添加确认机制</li>\n                            <li>使用动画和颜色变化提供即时的视觉反馈</li>\n                            <li>在禁用状态下，保持开关可见但明确表示不可操作</li>\n                            <li>保持一组开关的样式一致性，避免混合使用不同风格的开关</li>\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n                            <span class=\"mr-2 text-purple-500 dark:text-purple-400\">•</span>无障碍设计\n                        </h3>\n                        <ul class=\"ml-5 list-inside list-disc space-y-2 text-gray-600 dark:text-gray-400\">\n                            <li>提供足够的颜色对比度，确保视觉障碍用户可以辨识状态变化</li>\n                            <li>确保开关可通过键盘操作，支持Tab导航和空格键/回车键切换</li>\n                            <li>\n                                使用适当的ARIA属性（如aria-checked、aria-disabled），支持屏幕阅读器\n                            </li>\n                            <li>不仅依赖颜色传达状态，同时使用图标或文本辅助表示</li>\n                            <li>确保开关旁的标签文本与开关元素正确关联，增强可访问性</li>\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n                            <span class=\"mr-2 text-yellow-500 dark:text-yellow-400\">•</span>性能考量\n                        </h3>\n                        <ul class=\"ml-5 list-inside list-disc space-y-2 text-gray-600 dark:text-gray-400\">\n                            <li>\n                                避免在短时间内频繁切换开关状态触发复杂操作，考虑使用节流或防抖\n                            </li>\n                            <li>对于需要加载状态的开关，使用加载指示器提高用户体验</li>\n                            <li>当页面中有大量开关组件时，考虑按需渲染或虚拟滚动</li>\n                            <li>CSS动画应适度使用，避免过于复杂的动画效果影响性能</li>\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n                            <span class=\"mr-2 text-red-500 dark:text-red-400\">•</span>常见错误\n                        </h3>\n                        <ul class=\"ml-5 list-inside list-disc space-y-2 text-gray-600 dark:text-gray-400\">\n                            <li>未给开关提供足够的上下文，让用户难以理解开关的作用</li>\n                            <li>在状态改变时没有提供充分的视觉反馈</li>\n                            <li>开关太小或点击区域不够，影响移动设备上的操作体验</li>\n                            <li>错误地将开关用于需要确认或多步骤的复杂操作</li>\n                            <li>\n                                在切换需要处理时间的任务时，未使用加载状态，导致用户体验不佳\n                            </li>\n                            <li>\n                                忽略深色模式或高对比度模式下的适配，影响特定场景下的可用性\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </section>\n        </div>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from \"vue\";\nimport SwitchBox from \"./SwitchBox\";\n\n// 基础用法\nconst basicSwitch = ref(true);\nconst textSwitch = ref(false);\nconst longTextSwitch = ref(true);\nconst customValueSwitch = ref(\"active\");\n\n// 尺寸与状态\nconst defaultSizeSwitch = ref(true);\nconst smallSizeSwitch = ref(true);\nconst defaultSizeTextSwitch = ref(true);\nconst smallSizeTextSwitch = ref(false);\nconst disabledOnSwitch = ref(true);\nconst disabledOffSwitch = ref(false);\nconst loadingOnSwitch = ref(true);\nconst loadingOffSwitch = ref(false);\n\n// 交互示例\nconst themeSwitcher = ref(false);\nconst controlCardSwitch = ref(false);\nconst toggleLoadingSwitch = ref(false);\nconst isLoadingSwitch = ref(false);\n\n// 高级用法\nconst customSlotSwitch = ref(true);\nconst notificationSwitch = ref(true);\nconst emailNotificationSwitch = ref(true);\nconst smsNotificationSwitch = ref(false);\nconst appNotificationSwitch = ref(true);\nconst numberSwitch = ref(50);\n\n// 定制主题\nconst redSwitch = ref(true);\nconst greenSwitch = ref(true);\nconst purpleSwitch = ref(false);\nconst orangeSwitch = ref(true);\nconst iconSwitch1 = ref(true);\nconst coloredDarkSwitch = ref(true);\nconst emojiSwitch = ref(false);\nconst outlineSwitch = ref(true);\n\n// 新增状态变量\nconst animatedSwitch = ref(false);\nconst hoverSwitch1 = ref(true);\nconst hoverSwitch2 = ref(true);\nconst pulseSwitch = ref(true);\nconst rippleSwitch = ref(false);\nconst showRipple = ref(false);\nconst chainReaction = ref(false);\nconst chainSwitch1 = ref(false);\nconst chainSwitch2 = ref(false);\nconst chainSwitch3 = ref(false);\nconst chainSwitch4 = ref(false);\nconst chainSwitch5 = ref(false);\nconst settingSwitch1 = ref(true);\nconst settingSwitch2 = ref(false);\nconst settingSwitch3 = ref(false);\nconst audioSwitch = ref(false);\n\n// 墛强样式的开关状态\nconst enhancedSwitchOn = ref(true);\nconst enhancedSwitchOff = ref(false);\n\n// 模拟加载过程\nconst handleLoadingToggle = () => {\n    isLoadingSwitch.value = true;\n\n    setTimeout(() => {\n        isLoadingSwitch.value = false;\n    }, 1500);\n};\n\n// 波纹效果\nconst triggerRipple = () => {\n    rippleSwitch.value = !rippleSwitch.value;\n    showRipple.value = true;\n    setTimeout(() => {\n        showRipple.value = false;\n    }, 700);\n};\n\n// 链式反应\nconst triggerChainReaction = () => {\n    if (chainReaction.value) {\n        // 逐个开启\n        setTimeout(() => {\n            chainSwitch1.value = true;\n        }, 200);\n        setTimeout(() => {\n            chainSwitch2.value = true;\n        }, 400);\n        setTimeout(() => {\n            chainSwitch3.value = true;\n        }, 600);\n        setTimeout(() => {\n            chainSwitch4.value = true;\n        }, 800);\n        setTimeout(() => {\n            chainSwitch5.value = true;\n        }, 1000);\n    } else {\n        // 逐个关闭\n        setTimeout(() => {\n            chainSwitch5.value = false;\n        }, 200);\n        setTimeout(() => {\n            chainSwitch4.value = false;\n        }, 400);\n        setTimeout(() => {\n            chainSwitch3.value = false;\n        }, 600);\n        setTimeout(() => {\n            chainSwitch2.value = false;\n        }, 800);\n        setTimeout(() => {\n            chainSwitch1.value = false;\n        }, 1000);\n    }\n};\n\nonMounted(() => {\n    // 初始化展示一些动态效果\n    setTimeout(() => {\n        animatedSwitch.value = true;\n    }, 1000);\n\n    // 定期切换音频开关以展示动画\n    setInterval(() => {\n        audioSwitch.value = !audioSwitch.value;\n    }, 5000);\n});\n</script>\n\n<style scoped>\n/* 自定义颜色主题 */\n.switch-red :deep(.bg-blue-500) {\n    background-color: #ef4444;\n    /* bg-red-500 */\n}\n\n.switch-red :deep(.dark\\:bg-blue-400) {\n    background-color: #f87171;\n    /* dark:bg-red-400 */\n}\n\n.switch-green :deep(.bg-blue-500) {\n    background-color: #10b981;\n    /* bg-green-500 */\n}\n\n.switch-green :deep(.dark\\:bg-blue-400) {\n    background-color: #34d399;\n    /* dark:bg-green-400 */\n}\n\n.switch-purple :deep(.bg-blue-500) {\n    background-color: #8b5cf6;\n    /* bg-purple-500 */\n}\n\n.switch-purple :deep(.dark\\:bg-blue-400) {\n    background-color: #a78bfa;\n    /* dark:bg-purple-400 */\n}\n\n.switch-orange :deep(.bg-blue-500) {\n    background-color: #f97316;\n    /* bg-orange-500 */\n}\n\n.switch-orange :deep(.dark\\:bg-blue-400) {\n    background-color: #fb923c;\n    /* dark:bg-orange-400 */\n}\n\n/* 暗色主题自定义 */\n.dark-theme-switch :deep(.bg-blue-500) {\n    background-color: #1f2937;\n    /* bg-gray-800 */\n}\n\n.dark-theme-switch :deep(.dark\\:bg-blue-400) {\n    background-color: #4b5563;\n    /* dark:bg-gray-600 */\n}\n\n.dark-color-switch :deep(.dark\\:bg-blue-400) {\n    background-image: linear-gradient(to right, #6366f1, #a855f7);\n}\n\n.outline-switch :deep(.dark\\:bg-blue-400) {\n    background-color: transparent;\n    box-shadow: inset 0 0 0 2px rgba(255, 255, 255, 0.5);\n}\n\n/* 添加动画 */\n.animate-fade-in {\n    animation: fadeIn 0.5s ease-out forwards;\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/* 进一步修复文字样式在不同主题下的显示问题 */\n.switch-red :deep(.dark\\:bg-blue-400),\n.switch-green :deep(.dark\\:bg-blue-400),\n.switch-purple :deep(.dark\\:bg-blue-400),\n.switch-orange :deep(.dark\\:bg-blue-400) {\n    color: white;\n}\n\n/* 声音波形动画 */\n@keyframes soundWave {\n\n    0%,\n    100% {\n        transform: scaleY(0.5);\n    }\n\n    50% {\n        transform: scaleY(1);\n    }\n}\n\n.animate-sound-wave {\n    animation: soundWave 1.5s ease-in-out infinite;\n}\n\n/* 卡片加载动画 */\n@keyframes shimmer {\n    0% {\n        background-position: -468px 0;\n    }\n\n    100% {\n        background-position: 468px 0;\n    }\n}\n\n.loading-shimmer {\n    background: linear-gradient(90deg,\n            rgba(156, 163, 175, 0.1) 25%,\n            rgba(156, 163, 175, 0.3) 50%,\n            rgba(156, 163, 175, 0.1) 75%);\n    background-size: 200% 100%;\n    animation: shimmer 1.5s infinite;\n}\n\n.dark .loading-shimmer {\n    background: linear-gradient(90deg,\n            rgba(75, 85, 99, 0.1) 25%,\n            rgba(75, 85, 99, 0.3) 50%,\n            rgba(75, 85, 99, 0.1) 75%);\n    background-size: 200% 100%;\n}\n\n/* 添加一些额外的样式来增强开关的可见性 */\n:deep(.bg-gradient-to-r) {\n    /* 墛强渐变效果 */\n    background-size: 200% 100%;\n    animation: gradientShift 2s ease infinite;\n}\n\n@keyframes gradientShift {\n    0% {\n        background-position: 0% 50%;\n    }\n\n    50% {\n        background-position: 100% 50%;\n    }\n\n    100% {\n        background-position: 0% 50%;\n    }\n}\n\n/* 自定义颜色主题 - 墛强对比度 */\n.switch-red :deep(.bg-blue-500),\n.switch-red :deep(.from-blue-600),\n.switch-red :deep(.from-blue-700),\n.switch-red :deep(.to-blue-700),\n.switch-red :deep(.to-blue-800) {\n    background-color: #dc2626;\n    /* 更深的红色 - bg-red-600 */\n    background-image: none;\n}\n\n.switch-red :deep(.dark\\:bg-blue-400),\n.switch-red :deep(.dark\\:from-blue-500),\n.switch-red :deep(.dark\\:from-blue-600),\n.switch-red :deep(.dark\\:to-blue-600),\n.switch-red :deep(.dark\\:to-blue-700) {\n    background-color: #ef4444;\n    /* dark:bg-red-500 */\n    background-image: none;\n}\n\n.switch-green :deep(.bg-blue-500),\n.switch-green :deep(.from-blue-600),\n.switch-green :deep(.from-blue-700),\n.switch-green :deep(.to-blue-700),\n.switch-green :deep(.to-blue-800) {\n    background-color: #059669;\n    /* 更深的绿色 - bg-green-600 */\n    background-image: none;\n}\n\n.switch-green :deep(.dark\\:bg-blue-400),\n.switch-green :deep(.dark\\:from-blue-500),\n.switch-green :deep(.dark\\:from-blue-600),\n.switch-green :deep(.dark\\:to-blue-600),\n.switch-green :deep(.dark\\:to-blue-700) {\n    background-color: #10b981;\n    /* dark:bg-green-500 */\n    background-image: none;\n}\n\n.switch-purple :deep(.bg-blue-500),\n.switch-purple :deep(.from-blue-600),\n.switch-purple :deep(.from-blue-700),\n.switch-purple :deep(.to-blue-700),\n.switch-purple :deep(.to-blue-800) {\n    background-color: #7c3aed;\n    /* 更深的紫色 - bg-purple-600 */\n    background-image: none;\n}\n\n.switch-purple :deep(.dark\\:bg-blue-400),\n.switch-purple :deep(.dark\\:from-blue-500),\n.switch-purple :deep(.dark\\:from-blue-600),\n.switch-purple :deep(.dark\\:to-blue-600),\n.switch-purple :deep(.dark\\:to-blue-700) {\n    background-color: #8b5cf6;\n    /* dark:bg-purple-500 */\n    background-image: none;\n}\n\n.switch-orange :deep(.bg-blue-500),\n.switch-orange :deep(.from-blue-600),\n.switch-orange :deep(.from-blue-700),\n.switch-orange :deep(.to-blue-700),\n.switch-orange :deep(.to-blue-800) {\n    background-color: #ea580c;\n    /* 更深的橙色 - bg-orange-600 */\n    background-image: none;\n}\n\n.switch-orange :deep(.dark\\:bg-blue-400),\n.switch-orange :deep(.dark\\:from-blue-500),\n.switch-orange :deep(.dark\\:from-blue-600),\n.switch-orange :deep(.dark\\:to-blue-600),\n.switch-orange :deep(.dark\\:to-blue-700) {\n    background-color: #f97316;\n    /* dark:bg-orange-500 */\n    background-image: none;\n}\n\n/* 暗色主题自定义 - 调整对比度 */\n.dark-theme-switch :deep(.bg-blue-500),\n.dark-theme-switch :deep(.from-blue-600),\n.dark-theme-switch :deep(.from-blue-700),\n.dark-theme-switch :deep(.to-blue-700),\n.dark-theme-switch :deep(.to-blue-800) {\n    background-color: #111827;\n    /* 更深的灰色 - bg-gray-900 */\n    background-image: none;\n}\n\n.dark-theme-switch :deep(.dark\\:bg-blue-400),\n.dark-theme-switch :deep(.dark\\:from-blue-500),\n.dark-theme-switch :deep(.dark\\:from-blue-600),\n.dark-theme-switch :deep(.dark\\:to-blue-600),\n.dark-theme-switch :deep(.dark\\:to-blue-700) {\n    background-color: #1f2937;\n    /* dark:bg-gray-800 */\n    background-image: none;\n}\n\n/* 渐变主题 - 强化渐变 */\n.dark-color-switch :deep(.dark\\:bg-blue-400),\n.dark-color-switch :deep(.dark\\:from-blue-500),\n.dark-color-switch :deep(.dark\\:to-blue-500) {\n    background-image: linear-gradient(to right, #4f46e5, #7e22ce);\n}\n\n/* 添加一些额外的样式来增强开关的可见性 */\n:deep(.bg-gradient-to-r) {\n    /* 墛强渐变效果 */\n    background-size: 200% 100%;\n    animation: gradientShift 3s ease infinite;\n}\n\n/* 确保所有文字状态下都清晰可见 */\n:deep(.text-gray-700),\n:deep(.dark\\:text-gray-200) {\n    /* 墛强文字阴影，提高可读性 */\n    text-shadow: 0 0 1px rgba(0, 0, 0, 0.1);\n}\n\n/* 其他样式保持不变 */\n\n/* 自定义颜色主题 - 适配深蓝色按钮 */\n.switch-red :deep(.bg-blue-700) {\n    background-color: #b91c1c;\n    /* bg-red-700 */\n}\n\n.switch-red :deep(.dark\\:bg-blue-600) {\n    background-color: #dc2626;\n    /* dark:bg-red-600 */\n}\n\n.switch-green :deep(.bg-blue-700) {\n    background-color: #047857;\n    /* bg-green-700 */\n}\n\n.switch-green :deep(.dark\\:bg-blue-600) {\n    background-color: #059669;\n    /* dark:bg-green-600 */\n}\n\n.switch-purple :deep(.bg-blue-700) {\n    background-color: #6d28d9;\n    /* bg-purple-700 */\n}\n\n.switch-purple :deep(.dark\\:bg-blue-600) {\n    background-color: #7c3aed;\n    /* dark:bg-purple-600 */\n}\n\n.switch-orange :deep(.bg-blue-700) {\n    background-color: #c2410c;\n    /* bg-orange-700 */\n}\n\n.switch-orange :deep(.dark\\:bg-blue-600) {\n    background-color: #ea580c;\n    /* dark:bg-orange-600 */\n}\n\n/* 进一步调整滑块与轨道的对比度关系 */\n:deep(.bg-blue-700) {\n    color: white;\n}\n\n/* 添加一个小图标演示 */\n.switch-with-icon :deep(.bg-blue-700)::before,\n.switch-with-icon :deep(.dark\\:bg-blue-600)::before {\n    content: \"✓\";\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 10px;\n}\n</style>\n"],"names":["defineComponent","name","props","modelValue","type","Boolean","String","Number","default","checkedValue","unCheckedValue","disabled","loading","size","validator","val","includes","autofocus","id","undefined","checkedChildren","unCheckedChildren","emits","setup","emit","slots","switchRef","ref","isChecked","computed","isFocused","isHovered","hasCheckedChildren","hasUnCheckedChildren","hasChildren","value","switchSizeClasses","baseClass","join","trackClasses","bgClass","thumbClasses","sizeAndColor","shadowEffect","position","hoverEffect","loadingClass","alignClass","labelClasses","sizeClass","checkedClass","uncheckedClass","checked","unchecked","stateClasses","classes","push","renderLoading","spinClass","_createVNode","renderLabels","_createTextVNode","handleClick","event","newValue","handleKeyDown","code","preventDefault","handleFocus","handleBlur","handleMouseEnter","handleMouseLeave","onMounted","focus","basicSwitch","textSwitch","longTextSwitch","customValueSwitch","defaultSizeSwitch","smallSizeSwitch","defaultSizeTextSwitch","smallSizeTextSwitch","disabledOnSwitch","disabledOffSwitch","loadingOnSwitch","loadingOffSwitch","themeSwitcher","controlCardSwitch","toggleLoadingSwitch","isLoadingSwitch","customSlotSwitch","notificationSwitch","emailNotificationSwitch","smsNotificationSwitch","appNotificationSwitch","numberSwitch","redSwitch","greenSwitch","purpleSwitch","orangeSwitch","iconSwitch1","coloredDarkSwitch","emojiSwitch","outlineSwitch","animatedSwitch","hoverSwitch1","hoverSwitch2","pulseSwitch","rippleSwitch","showRipple","chainReaction","chainSwitch1","chainSwitch2","chainSwitch3","chainSwitch4","chainSwitch5","settingSwitch1","settingSwitch2","settingSwitch3","audioSwitch","enhancedSwitchOn","enhancedSwitchOff","handleLoadingToggle","triggerRipple","triggerChainReaction"],"mappings":"+KAEA,MAAeA,KAAgB,CAC3BC,KAAM,YACNC,MAAO,CACHC,WAAY,CACRC,KAAM,CAACC,QAASC,OAAQC,MAAM,EAC9BC,QAAS,EACZ,EACDC,aAAc,CACVL,KAAM,CAACC,QAASC,OAAQC,MAAM,EAC9BC,QAAS,EACZ,EACDE,eAAgB,CACZN,KAAM,CAACC,QAASC,OAAQC,MAAM,EAC9BC,QAAS,EACZ,EACDG,SAAU,CACNP,KAAMC,QACNG,QAAS,EACZ,EACDI,QAAS,CACLR,KAAMC,QACNG,QAAS,EACZ,EACDK,KAAM,CACFT,KAAME,OACNE,QAAS,UACTM,UAAYC,GAAgB,CAAC,QAAS,SAAS,EAAEC,SAASD,CAAG,CAChE,EACDE,UAAW,CACPb,KAAMC,QACNG,QAAS,EACZ,EACDU,GAAI,CACAd,KAAME,OACNE,QAASW,MACZ,EACDlB,KAAM,CACFG,KAAME,OACNE,QAASW,MACZ,EACDC,gBAAiB,CACbhB,KAAME,OACNE,QAAS,EACZ,EACDa,kBAAmB,CACfjB,KAAME,OACNE,QAAS,EACb,CACH,EACDc,MAAO,CACH,oBACA,SACA,OAAO,EAEXC,MAAMrB,EAAO,CAAEsB,KAAAA,EAAMC,MAAAA,CAAM,EAAG,CAC1B,MAAMC,EAAYC,EAA8B,IAAI,EAC9CC,EAAYC,EAAS,IAAM3B,EAAMC,aAAeD,EAAMO,YAAY,EAClEqB,EAAYH,EAAI,EAAK,EACrBI,EAAYJ,EAAI,EAAK,EAGrBK,EAAqBH,EAAS,IAAM,CAAC,CAACJ,EAAML,iBAAmB,CAAC,CAAClB,EAAMkB,eAAe,EACtFa,EAAuBJ,EAAS,IAAM,CAAC,CAACJ,EAAMJ,mBAAqB,CAAC,CAACnB,EAAMmB,iBAAiB,EAC5Fa,EAAcL,EAAS,IAAMG,EAAmBG,OAASF,EAAqBE,KAAK,EAGnFC,EAAoBP,EAAS,IAAM,CACrC,MAAMQ,EAAY,4GAElB,OAAInC,EAAMW,OAAS,QACR,CACHwB,EACAH,EAAYC,MACN,2BACA,SAAS,EACjBG,KAAK,GAAG,EAGP,CACHD,EACAH,EAAYC,MACN,2BACA,UAAU,EAClBG,KAAK,GAAG,CACd,CAAC,EAGKC,EAAeV,EAAS,IAAM,CAChC,MAAMQ,EAAY,yGAElB,GAAInC,EAAMS,SACN,MAAO,GAAG0B,CAAS,IAAIT,EAAUO,MAC3B,qGACA,mEAAmE,GAG7E,IAAIK,EAAUZ,EAAUO,MAClB,sJACA,oEAEN,OAAIJ,EAAUI,OAAS,CAACjC,EAAMU,UAC1B4B,EAAUZ,EAAUO,MACd,mJACA,qEAGH,GAAGE,CAAS,IAAIG,CAAO,EAClC,CAAC,EAGKC,EAAeZ,EAAS,IAAM,CAChC,MAAMQ,EAAY,2GAGlB,IAAIK,EAAexC,EAAMW,OAAS,QAC5B,wEACA,wEAGN,MAAM8B,EAAef,EAAUO,MACzB,uDACA,uDAGN,IAAIS,EACAV,EAAYC,MACZS,EAAWhB,EAAUO,MACfjC,EAAMW,OAAS,QAAU,oBAAsB,sBAC/CX,EAAMW,OAAS,QAAU,oBAAsB,sBAErD+B,EAAWhB,EAAUO,MACfjC,EAAMW,OAAS,QAAU,gBAAkB,gBAC3C,gBAIV,MAAMgC,EAAed,EAAUI,OAAS,CAACjC,EAAMS,UAAY,CAACT,EAAMU,QAC5DgB,EAAUO,MACN,uDACA,uDACJ,GAGAW,EAAe5C,EAAMU,QAAU,mCAAqC,GAGpEmC,GAAab,EAAYC,MAAQ,4BAEvC,MAAO,GAAGE,CAAS,IAAIK,CAAY,IAAIC,CAAY,IAAIC,CAAQ,IAAIC,CAAW,IAAIC,CAAY,IAAIC,CAAU,EAChH,CAAC,EAGKC,EAAenB,EAAS,IAAM,CAChC,MAAMQ,EAAY,wDACZY,EAAY/C,EAAMW,OAAS,QAAU,cAAgB,UAGrDqC,EAAetB,EAAUO,MACzB,mDACA,qBAGAgB,EAAkBvB,EAAUO,MAE5B,qBADA,oEAGN,MAAO,CACHiB,QAAS,GAAGf,CAAS,IAAIY,CAAS,IAAIC,CAAY,GAClDG,UAAW,GAAGhB,CAAS,IAAIY,CAAS,IAAIE,CAAc,EACzD,CACL,CAAC,EAGKG,EAAezB,EAAS,IAAM,CAChC,MAAM0B,EAAU,CAAC,UAAU,EAE3B,OAAIrD,EAAMS,SACN4C,EAAQC,KAAK,+BAA+B,EACrCtD,EAAMU,QACb2C,EAAQC,KAAK,aAAa,EAE1BD,EAAQC,KAAK,gBAAgB,EAI7B1B,EAAUK,OACVoB,EAAQC,KAAK5B,EAAUO,MACjB,6CACA,4CAA4C,EAG/CoB,EAAQjB,KAAK,GAAG,CAC3B,CAAC,EAGKmB,EAAgBA,IAAM,CACxB,MAAMC,EAAYxD,EAAMW,OAAS,QAAU,cAAgB,UAC3D,OAAA8C,EAAA,MAAA,CAAA,MAEe,gBAAgBD,CAAS,IAAI9B,EAAUO,MAAQ,mCAAqC,kCAAkC,GAAE,QAAA,YAAA,KAAA,OAAA,MAAA,4BAAA,EAAA,CAAAwB,EAAA,SAAA,CAAA,MAAA,aAAA,GAAA,KAAA,GAAA,KAAA,EAAA,KAAA,OAAA,eAAA,eAAA,GAAA,EAAA,IAAA,EAAAA,EAAA,OAAA,CAAA,MAAA,aAAA,KAAA,eAAA,EAAA,iHAAA,EAAA,IAAA,CAAA,CAAA,CAoB1I,EAGKC,EAAeA,IACb5B,EAAmBG,OAASF,EAAqBE,MAC1C,KAGXwB,EAAA,MAAA,CAAA,MAAA,+EAAA,EAAA,CAAAA,EAAA,OAAA,CAAA,MAGmB,wDAAwD/B,EAAUO,MAAQ,YAAc,YAAY,qCAAmC0B,CAAAA,WAAAF,EAAA,OAAA,CAAA,MAIvI,wDAAwD/B,EAAUO,MAAQ,aAAe,WAAW,6BAA6B,EAAA,CAAA0B,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,EAQlJC,EAAeC,GAAsB,CACvC,GAAI7D,EAAMS,UAAYT,EAAMU,QAAS,OAErC,MAAMoD,EAAWpC,EAAUO,MAAQjC,EAAMQ,eAAiBR,EAAMO,aAEhEe,EAAK,oBAAqBwC,CAAQ,EAClCxC,EAAK,SAAUwC,EAAUD,CAAK,EAC9BvC,EAAK,QAASwC,EAAUD,CAAK,CAChC,EAEKE,EAAiBF,GAAyB,CAC5C,GAAI7D,EAAAA,EAAMS,UAAYT,EAAMU,WAExBmD,EAAMG,OAAS,SAAWH,EAAMG,OAAS,SAAS,CAClDH,EAAMI,eAAgB,EACtB,MAAMH,EAAWpC,EAAUO,MAAQjC,EAAMQ,eAAiBR,EAAMO,aAEhEe,EAAK,oBAAqBwC,CAAQ,EAClCxC,EAAK,SAAUwC,EAAUD,CAAK,CAClC,CACH,EAEKK,EAAcA,IAAM,CACtBtC,EAAUK,MAAQ,EACrB,EAEKkC,EAAaA,IAAM,CACrBvC,EAAUK,MAAQ,EACrB,EAEKmC,EAAmBA,IAAM,CAC3BvC,EAAUI,MAAQ,EACrB,EAEKoC,EAAmBA,IAAM,CAC3BxC,EAAUI,MAAQ,EACrB,EAEDqC,OAAAA,GAAU,IAAM,CACRtE,EAAMe,WAAaS,EAAUS,OAC7BT,EAAUS,MAAMsC,MAAO,CAE/B,CAAC,EAEM,IAAA,SAAAd,OAAAA,EAAA,SAAA,CAAA,IAEMjC,EAAS,KAAA,SAAA,KAAA,SAAA,GAGVxB,EAAMgB,GAAE,eACEU,EAAUO,MAAK,gBACdjC,EAAMS,SAAQ,SACnBT,EAAMS,SAAW,GAAK,EAAC,MAC1ByB,EAAkBD,MAAK,QACrB2B,EAAW,UACTG,EAAa,QACfG,EAAW,OACZC,EAAU,aACJC,EAAgB,aAChBC,EAAgB,SACpBrE,EAAMS,QAAQ,EAAA,CAAAgD,EAAA,MAAA,CAAA,MAEZL,EAAanB,KAAK,EAAA,CAAAwB,EAAA,MAAA,CAAA,MACdpB,EAAaJ,KAAK,EAAA,KAAA,CAAA,EAG5BH,EAAmBG,OAAKwB,EAAA,MAAA,CAAA,MACV,4BAA4BX,EAAab,MAAMiB,OAAO,EAAE,EAAA,GAC/D3B,EAAAA,EAAML,kBAANK,YAAAA,EAAAA,KAAAA,KAA6BvB,EAAMkB,eAAe,GAKzDa,EAAqBE,OAAKwB,EAAA,MAAA,CAAA,MACZ,+CAA+CX,EAAab,MAAMkB,SAAS,IAClF5B,GAAAA,EAAAA,EAAMJ,oBAANI,YAAAA,EAAAA,KAAAA,KAA+BvB,EAAMmB,iBAAiB,CAE9D,EAAAsC,EAAA,MAAA,CAAA,MAGWlB,EAAaN,KACpBjC,EAAAA,CAAAA,EAAMU,SAAW6C,GAAe,EAIpCG,CAAAA,EAAAA,EAAc,CAAA,EAG1B,CAAA,CAAA,EAAA,GAAA,CAAA,KAAA,eAAA,gBAAA,WAAA,UAAA,YAAA,UAAA,SAAA,eAAA,eAAA,UAAA,CAAA,EACL,CACJ,CAAC,ywICm4BK,MAAAc,EAAc/C,EAAI,EAAI,EACtBgD,EAAahD,EAAI,EAAK,EACtBiD,EAAiBjD,EAAI,EAAI,EACzBkD,EAAoBlD,EAAI,QAAQ,EAGhCmD,EAAoBnD,EAAI,EAAI,EAC5BoD,EAAkBpD,EAAI,EAAI,EAC1BqD,EAAwBrD,EAAI,EAAI,EAChCsD,EAAsBtD,EAAI,EAAK,EAC/BuD,EAAmBvD,EAAI,EAAI,EAC3BwD,EAAoBxD,EAAI,EAAK,EAC7ByD,EAAkBzD,EAAI,EAAI,EAC1B0D,EAAmB1D,EAAI,EAAK,EAG5B2D,EAAgB3D,EAAI,EAAK,EACzB4D,EAAoB5D,EAAI,EAAK,EAC7B6D,EAAsB7D,EAAI,EAAK,EAC/B8D,EAAkB9D,EAAI,EAAK,EAG3B+D,EAAmB/D,EAAI,EAAI,EAC3BgE,EAAqBhE,EAAI,EAAI,EAC7BiE,EAA0BjE,EAAI,EAAI,EAClCkE,EAAwBlE,EAAI,EAAK,EACjCmE,EAAwBnE,EAAI,EAAI,EAChCoE,EAAepE,EAAI,EAAE,EAGrBqE,EAAYrE,EAAI,EAAI,EACpBsE,EAActE,EAAI,EAAI,EACtBuE,EAAevE,EAAI,EAAK,EACxBwE,EAAexE,EAAI,EAAI,EACvByE,EAAczE,EAAI,EAAI,EACtB0E,EAAoB1E,EAAI,EAAI,EAC5B2E,EAAc3E,EAAI,EAAK,EACvB4E,GAAgB5E,EAAI,EAAI,EAGxB6E,EAAiB7E,EAAI,EAAK,EAC1B8E,GAAe9E,EAAI,EAAI,EACvB+E,GAAe/E,EAAI,EAAI,EACvBgF,EAAchF,EAAI,EAAI,EACtBiF,EAAejF,EAAI,EAAK,EACxBkF,GAAalF,EAAI,EAAK,EACtBmF,GAAgBnF,EAAI,EAAK,EACzBoF,EAAepF,EAAI,EAAK,EACxBqF,EAAerF,EAAI,EAAK,EACxBsF,EAAetF,EAAI,EAAK,EACxBuF,EAAevF,EAAI,EAAK,EACxBwF,EAAexF,EAAI,EAAK,EACxByF,GAAiBzF,EAAI,EAAI,EACzB0F,GAAiB1F,EAAI,EAAK,EAC1B2F,GAAiB3F,EAAI,EAAK,EAC1B4F,EAAc5F,EAAI,EAAK,EAGvB6F,EAAmB7F,EAAI,EAAI,EAC3B8F,EAAoB9F,EAAI,EAAK,EAG7B+F,GAAsB,IAAM,CAC9BjC,EAAgB,MAAQ,GAExB,WAAW,IAAM,CACbA,EAAgB,MAAQ,IACzB,IAAI,CACX,EAGMkC,GAAgB,IAAM,CACXf,EAAA,MAAQ,CAACA,EAAa,MACnCC,GAAW,MAAQ,GACnB,WAAW,IAAM,CACbA,GAAW,MAAQ,IACpB,GAAG,CACV,EAGMe,GAAuB,IAAM,CAC3Bd,GAAc,OAEd,WAAW,IAAM,CACbC,EAAa,MAAQ,IACtB,GAAG,EACN,WAAW,IAAM,CACbC,EAAa,MAAQ,IACtB,GAAG,EACN,WAAW,IAAM,CACbC,EAAa,MAAQ,IACtB,GAAG,EACN,WAAW,IAAM,CACbC,EAAa,MAAQ,IACtB,GAAG,EACN,WAAW,IAAM,CACbC,EAAa,MAAQ,IACtB,GAAI,IAGP,WAAW,IAAM,CACbA,EAAa,MAAQ,IACtB,GAAG,EACN,WAAW,IAAM,CACbD,EAAa,MAAQ,IACtB,GAAG,EACN,WAAW,IAAM,CACbD,EAAa,MAAQ,IACtB,GAAG,EACN,WAAW,IAAM,CACbD,EAAa,MAAQ,IACtB,GAAG,EACN,WAAW,IAAM,CACbD,EAAa,MAAQ,IACtB,GAAI,EAEf,EAEA,OAAAvC,GAAU,IAAM,CAEZ,WAAW,IAAM,CACbgC,EAAe,MAAQ,IACxB,GAAI,EAGP,YAAY,IAAM,CACFe,EAAA,MAAQ,CAACA,EAAY,OAClC,GAAI,CAAA,CACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}