{"version":3,"file":"index-_QUJ1ZL1.js","sources":["../../src/libs/RadioBox/config.ts","../../src/libs/RadioBox/RadioBox.tsx","../../src/libs/RadioBox/View.vue"],"sourcesContent":["export type ColorType =\n  | 'slate' | 'gray' | 'zinc' | 'neutral' | 'stone'  // 灰色系\n  | 'red' | 'orange' | 'amber' | 'yellow'            // 暖色系\n  | 'lime' | 'green' | 'emerald' | 'teal'            // 绿色系\n  | 'cyan' | 'sky' | 'blue' | 'indigo'               // 蓝色系\n  | 'violet' | 'purple' | 'fuchsia' | 'pink' | 'rose'; // 紫粉色系\n\nexport type RadioSize = 'large' | 'default' | 'small';\nexport type RadioButtonStyle = 'outline' | 'solid';\nexport type RadioOptionType = 'default' | 'button';\n\nexport interface RadioOption {\n  label: string;\n  value: string | number;\n  disabled?: boolean;\n}\n\nexport interface RadioProps {\n  modelValue?: string | number | boolean;\n  value?: string | number | boolean;\n  disabled?: boolean;\n  name?: string;\n  autofocus?: boolean;\n  color?: ColorType;\n}\n\nexport interface RadioGroupProps {\n  modelValue?: any;\n  disabled?: boolean;\n  name?: string;\n  size?: RadioSize;\n  optionType?: RadioOptionType;\n  buttonStyle?: RadioButtonStyle;\n  options?: Array<string | number | RadioOption>;\n  color?: ColorType;\n}\n\n// 颜色映射表\nexport const colorMap: Record<ColorType, { light: string, dark: string }> = {\n  // 灰色系\n  slate: { light: 'bg-slate-500 border-slate-500', dark: 'dark:bg-slate-400 dark:border-slate-400' },\n  gray: { light: 'bg-gray-500 border-gray-500', dark: 'dark:bg-gray-400 dark:border-gray-400' },\n  zinc: { light: 'bg-zinc-500 border-zinc-500', dark: 'dark:bg-zinc-400 dark:border-zinc-400' },\n  neutral: { light: 'bg-neutral-500 border-neutral-500', dark: 'dark:bg-neutral-400 dark:border-neutral-400' },\n  stone: { light: 'bg-stone-500 border-stone-500', dark: 'dark:bg-stone-400 dark:border-stone-400' },\n  // 暖色系\n  red: { light: 'bg-red-500 border-red-500', dark: 'dark:bg-red-400 dark:border-red-400' },\n  orange: { light: 'bg-orange-500 border-orange-500', dark: 'dark:bg-orange-400 dark:border-orange-400' },\n  amber: { light: 'bg-amber-500 border-amber-500', dark: 'dark:bg-amber-400 dark:border-amber-400' },\n  yellow: { light: 'bg-yellow-500 border-yellow-500', dark: 'dark:bg-yellow-400 dark:border-yellow-400' },\n  // 绿色系\n  lime: { light: 'bg-lime-500 border-lime-500', dark: 'dark:bg-lime-400 dark:border-lime-400' },\n  green: { light: 'bg-green-500 border-green-500', dark: 'dark:bg-green-400 dark:border-green-400' },\n  emerald: { light: 'bg-emerald-500 border-emerald-500', dark: 'dark:bg-emerald-400 dark:border-emerald-400' },\n  teal: { light: 'bg-teal-500 border-teal-500', dark: 'dark:bg-teal-400 dark:border-teal-400' },\n  // 蓝色系\n  cyan: { light: 'bg-cyan-500 border-cyan-500', dark: 'dark:bg-cyan-400 dark:border-cyan-400' },\n  sky: { light: 'bg-sky-500 border-sky-500', dark: 'dark:bg-sky-400 dark:border-sky-400' },\n  blue: { light: 'bg-blue-500 border-blue-500', dark: 'dark:bg-blue-400 dark:border-blue-400' },\n  indigo: { light: 'bg-indigo-500 border-indigo-500', dark: 'dark:bg-indigo-400 dark:border-indigo-400' },\n  // 紫粉色系\n  violet: { light: 'bg-violet-500 border-violet-500', dark: 'dark:bg-violet-400 dark:border-violet-400' },\n  purple: { light: 'bg-purple-500 border-purple-500', dark: 'dark:bg-purple-400 dark:border-purple-400' },\n  fuchsia: { light: 'bg-fuchsia-500 border-fuchsia-500', dark: 'dark:bg-fuchsia-400 dark:border-fuchsia-400' },\n  pink: { light: 'bg-pink-500 border-pink-500', dark: 'dark:bg-pink-400 dark:border-pink-400' },\n  rose: { light: 'bg-rose-500 border-rose-500', dark: 'dark:bg-rose-400 dark:border-rose-400' },\n};\n","import { defineComponent, ref, computed, PropType, provide, inject, Ref, onMounted, nextTick } from 'vue';\nimport { ColorType, colorMap } from './config';\n\n// 单选框组合的上下文类型\ninterface RadioGroupContext {\n    name: Ref<string | undefined>;\n    modelValue: Ref<any>;\n    updateModelValue: (value: any) => void;\n    disabled: Ref<boolean>;\n    size: Ref<'large' | 'default' | 'small'>;\n    buttonStyle: Ref<'outline' | 'solid'>;\n    optionType: Ref<'default' | 'button'>;\n    colors: Ref<{\n        default: ColorType,\n        hover: ColorType,\n        disabled: ColorType\n    }>;\n}\n\nconst radioGroupKey = Symbol('radioGroup');\n\n\n// 单选框组件\nexport const Radio = defineComponent({\n    name: 'Radio',\n    props: {\n        modelValue: { type: [String, Number, Boolean], default: undefined },\n        value: { type: [String, Number, Boolean], default: undefined },\n        disabled: { type: Boolean, default: false },\n        name: { type: String },\n        autofocus: { type: Boolean, default: false },\n        color: { type: String as PropType<ColorType>, default: 'blue' },\n    },\n    emits: ['update:modelValue', 'change', 'focus', 'blur'],\n    setup(props, { emit, slots }) {\n        const inputRef = ref<HTMLInputElement | null>(null);\n        const radioGroupCtx = inject<RadioGroupContext | null>(radioGroupKey, null);\n        const isChecked = computed(() => {\n            if (radioGroupCtx) {\n                return radioGroupCtx.modelValue.value === props.value;\n            }\n            return props.modelValue === props.value;\n        });\n\n        const radioDisabled = computed(() => {\n            return radioGroupCtx?.disabled?.value || props.disabled;\n        });\n\n        const radioColor = computed(() => {\n            const color = radioGroupCtx?.colors.value.default || props.color;\n            return colorMap[color as ColorType] || colorMap.blue;\n        });\n\n        const radioName = computed(() => {\n            return radioGroupCtx?.name?.value || props.name;\n        });\n\n        const handleChange = (e: Event) => {\n            if (radioDisabled.value) return;\n\n            const target = e.target as HTMLInputElement;\n            const value = props.value !== undefined ? props.value : target.checked;\n\n            if (radioGroupCtx) {\n                radioGroupCtx.updateModelValue(value);\n            } else {\n                emit('update:modelValue', value);\n            }\n            emit('change', e);\n        };\n\n        const focus = () => {\n            inputRef.value?.focus();\n        };\n\n        const blur = () => {\n            inputRef.value?.blur();\n        };\n\n        const handleFocus = (e: FocusEvent) => {\n            emit('focus', e);\n        };\n\n        const handleBlur = (e: FocusEvent) => {\n            emit('blur', e);\n        };\n\n        onMounted(() => {\n            if (props.autofocus) {\n                nextTick(() => {\n                    inputRef.value?.focus();\n                });\n            }\n        });\n\n        const isButtonStyle = computed(() => {\n            return radioGroupCtx?.optionType.value === 'button';\n        });\n\n        return () => {\n            if (isButtonStyle.value) {\n                return (\n                    <RadioButton\n                        checked={isChecked.value}\n                        disabled={radioDisabled.value}\n                        value={props.value}\n                        onChange={handleChange}\n                        onFocus={handleFocus}\n                        onBlur={handleBlur}>\n                        {slots.default?.()}\n                    </RadioButton>\n                );\n            }\n\n            return (\n                <label\n                    class={[\n                        'inline-flex items-center cursor-pointer transition-all duration-200 ease-in-out',\n                        radioDisabled.value ? 'opacity-60 cursor-not-allowed' : 'hover:opacity-90',\n                    ]}\n                >\n                    <span class=\"relative inline-flex items-center justify-center mr-2\">\n                        <input\n                            ref={inputRef}\n                            type=\"radio\"\n                            class=\"sr-only\"\n                            name={radioName.value}\n                            disabled={radioDisabled.value}\n                            checked={isChecked.value}\n                            value={props.value}\n                            onChange={handleChange}\n                            onFocus={handleFocus}\n                            onBlur={handleBlur}\n                        />\n                        <span\n                            class={[\n                                'w-4 h-4 rounded-full border transition-all duration-200',\n                                isChecked.value ? [radioColor.value.light, radioColor.value.dark] : 'border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800',\n                                radioDisabled.value ? 'opacity-50' : '',\n                            ]}\n                        />\n                        {isChecked.value && (\n                            <span\n                                class={[\n                                    'absolute w-2 h-2 rounded-full bg-white dark:bg-gray-900 transform scale-0 transition-transform duration-200',\n                                    isChecked.value ? 'scale-100' : '',\n                                ]}\n                            />\n                        )}\n                    </span>\n                    <span\n                        class={[\n                            'text-sm text-gray-700 dark:text-gray-300',\n                            radioDisabled.value ? 'text-gray-400 dark:text-gray-600' : ''\n                        ]}\n                    >\n                        {slots.default?.()}\n                    </span>\n                </label>\n            );\n        };\n    }\n});\n\n// 按钮风格单选框组件\nexport const RadioButton = defineComponent({\n    name: 'RadioButton',\n    props: {\n        checked: { type: Boolean, default: false },\n        disabled: { type: Boolean, default: false },\n        value: { type: [String, Number, Boolean], default: undefined },\n    },\n    emits: ['change', 'focus', 'blur'],\n    setup(props, { emit, slots }) {\n        const radioGroupCtx = inject<RadioGroupContext | null>(radioGroupKey, null);\n        const inputRef = ref<HTMLInputElement | null>(null);\n\n        const buttonSize = computed(() => {\n            const size = radioGroupCtx?.size.value || 'default';\n            return {\n                large: 'px-4 py-2 text-base',\n                default: 'px-3 py-1.5 text-sm',\n                small: 'px-2 py-1 text-xs',\n            }[size];\n        });\n\n        const buttonStyle = computed(() => {\n            const style = radioGroupCtx?.buttonStyle.value || 'outline';\n            const color = radioGroupCtx?.colors.value.default || 'blue';\n            const colorClasses = colorMap[color as ColorType];\n            if (style === 'solid') {\n                return props.checked\n                    ? `${colorClasses.light} ${colorClasses.dark} text-white border-transparent`\n                    : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300';\n            }\n            return props.checked\n                ? `border-${color}-500 dark:border-${color}-400 text-${color}-500 dark:text-${color}-400`\n                : 'border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300';\n        });\n\n        const handleChange = (e: Event) => {\n            if (props.disabled) return;\n            emit('change', e);\n        };\n\n        const handleFocus = (e: FocusEvent) => {\n            emit('focus', e);\n        };\n\n        const handleBlur = (e: FocusEvent) => {\n            emit('blur', e);\n        };\n\n        return () => (\n            <label\n                class={[\n                    'inline-block border transition-all duration-200 rounded-md',\n                    buttonSize.value,\n                    buttonStyle.value,\n                    props.disabled ? 'opacity-60 cursor-not-allowed' : 'cursor-pointer hover:opacity-90',\n                ]}\n            >\n                <input\n                    ref={inputRef}\n                    type=\"radio\"\n                    class=\"sr-only\"\n                    disabled={props.disabled}\n                    checked={props.checked}\n                    value={props.value}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                />\n                <span>{slots.default?.()}</span>\n            </label>\n        );\n    }\n});\n\n// 单选框组组件\nexport const RadioGroup = defineComponent({\n    name: 'RadioGroup',\n    props: {\n        modelValue: { type: [String, Number, Boolean, Object], default: undefined },\n        disabled: { type: Boolean, default: false },\n        name: { type: String },\n        size: { type: String as PropType<'large' | 'default' | 'small'>, default: 'default' },\n        optionType: { type: String as PropType<'default' | 'button'>, default: 'default' },\n        buttonStyle: { type: String as PropType<'outline' | 'solid'>, default: 'outline' },\n        options: { type: Array as PropType<Array<string | number | { label: string; value: string | number; disabled?: boolean }>>, default: () => [] },\n        color: { type: String as PropType<ColorType>, default: 'blue' },\n    },\n    emits: ['update:modelValue', 'change'],\n    setup(props, { emit, slots }) {\n        const radioGroupRef = ref<HTMLDivElement | null>(null);\n        const mergedValue = ref(props.modelValue);\n        const name = computed(() => props.name);\n        const disabled = ref(props.disabled);\n        const size = ref(props.size);\n        const optionType = ref(props.optionType);\n        const buttonStyle = ref(props.buttonStyle);\n        const colors = ref({\n            default: props.color,\n            hover: props.color,\n            disabled: 'gray' as ColorType\n        });\n\n        const updateModelValue = (value: any) => {\n            mergedValue.value = value;\n            emit('update:modelValue', value);\n            emit('change', { target: { value } });\n        };\n\n        // 提供上下文给子组件\n        provide<RadioGroupContext>(radioGroupKey, {\n            name,\n            modelValue: mergedValue,\n            updateModelValue,\n            disabled,\n            size,\n            buttonStyle,\n            optionType,\n            colors,\n        });\n\n        // 渲染选项\n        const renderOptions = () => {\n            if (!props.options?.length) {\n                return null;\n            }\n\n            return props.options.map(option => {\n                if (typeof option === 'string' || typeof option === 'number') {\n                    return (\n                        <Radio\n                            key={option.toString()}\n                            value={option}\n                            disabled={props.disabled}\n                        >\n                            {option.toString()}\n                        </Radio>\n                    );\n                }\n\n                return (\n                    <Radio\n                        key={option.value?.toString()}\n                        value={option.value}\n                        disabled={option.disabled || props.disabled}\n                    >\n                        {option.label}\n                    </Radio>\n                );\n            });\n        };\n\n        return () => (\n            <div\n                ref={radioGroupRef}\n                class={[\n                    'inline-flex',\n                    optionType.value === 'button' ? 'space-x-1 border-0' : 'flex-wrap gap-4', // 增加按钮间距\n                    optionType.value === 'button' && props.options?.length ? 'radio-button-group overflow-hidden rounded-md' : '',\n                ]}\n                role=\"radiogroup\"\n            >\n                {renderOptions() || slots.default?.()}\n            </div>\n        );\n    }\n});\n\nexport default {\n    Radio,\n    RadioButton,\n    RadioGroup,\n};\n","<template>\n    <div class=\"p-6 space-y-8 transition-colors duration-300\">\n        <h1 class=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">RadioBox 单选框</h1>\n\n        <!-- 组件介绍 -->\n        <section class=\"space-y-2\">\n            <p class=\"text-gray-700 dark:text-gray-300\">单选框用于在多个备选项中选中单个状态。相比下拉选择，RadioBox更直观，选项展示更清晰。</p>\n            <p class=\"text-gray-500 dark:text-gray-400 text-sm\">适用场景：选项数量较少、用户需要快速对比选择时。</p>\n        </section>\n\n        <!-- 基础用法 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 flex items-center\">\n                <span>基础用法</span>\n                <span\n                    class=\"ml-2 px-2 py-1 text-xs bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300 rounded-md\">基础</span>\n            </h2>\n            <div class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-300\">\n                <div class=\"flex flex-col space-y-4\">\n                    <Radio v-model=\"basicChecked\" :value=\"true\">默认单选框</Radio>\n                    <div class=\"text-sm text-gray-600 dark:text-gray-400\">\n                        选中状态: <span class=\"font-medium\">{{ basicChecked ? '是' : '否' }}</span>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 不同颜色 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 flex items-center\">\n                <span>多彩单选框</span>\n                <span\n                    class=\"ml-2 px-2 py-1 text-xs bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300 rounded-md\">颜色</span>\n            </h2>\n            <div class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-300\">\n                <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <Radio v-model=\"colorChecked\" :value=\"'red'\" color=\"red\">红色</Radio>\n                    <Radio v-model=\"colorChecked\" :value=\"'blue'\" color=\"blue\">蓝色</Radio>\n                    <Radio v-model=\"colorChecked\" :value=\"'green'\" color=\"green\">绿色</Radio>\n                    <Radio v-model=\"colorChecked\" :value=\"'purple'\" color=\"purple\">紫色</Radio>\n                    <Radio v-model=\"colorChecked\" :value=\"'orange'\" color=\"orange\">橙色</Radio>\n                    <Radio v-model=\"colorChecked\" :value=\"'emerald'\" color=\"emerald\">翠绿色</Radio>\n                    <Radio v-model=\"colorChecked\" :value=\"'indigo'\" color=\"indigo\">靛蓝色</Radio>\n                    <Radio v-model=\"colorChecked\" :value=\"'pink'\" color=\"pink\">粉色</Radio>\n                </div>\n                <div class=\"mt-4 text-sm text-gray-600 dark:text-gray-400 flex items-center\">\n                    <span>已选颜色:</span>\n                    <div class=\"ml-2 px-3 py-1 rounded-md transition-colors duration-300 animate-pulse\"\n                        :class=\"`bg-${colorChecked}-100 dark:bg-${colorChecked}-900 text-${colorChecked}-700 dark:text-${colorChecked}-300`\">\n                        {{ colorChecked }}\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 禁用状态 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 flex items-center\">\n                <span>禁用状态</span>\n                <span\n                    class=\"ml-2 px-2 py-1 text-xs bg-gray-100 text-gray-700 dark:bg-gray-700 dark:text-gray-300 rounded-md\">状态</span>\n            </h2>\n            <div class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-300\">\n                <div class=\"flex flex-wrap gap-6\">\n                    <Radio disabled :value=\"1\">禁用未选中</Radio>\n                    <Radio disabled :value=\"1\" v-model=\"disabledChecked\">禁用已选中</Radio>\n                </div>\n            </div>\n        </section>\n\n        <!-- 单选框组 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 flex items-center\">\n                <span>单选框组</span>\n                <span\n                    class=\"ml-2 px-2 py-1 text-xs bg-purple-100 text-purple-700 dark:bg-purple-900 dark:text-purple-300 rounded-md\">组合</span>\n            </h2>\n            <div\n                class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-300 space-y-8\">\n                <div class=\"space-y-4\">\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300\">基础单选框组</h3>\n                    <div\n                        class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md transform transition-all duration-500 hover:scale-[1.01]\">\n                        <RadioGroup v-model=\"groupValue\" color=\"blue\" class=\"animate-fade-in\">\n                            <Radio :value=\"'apple'\">苹果</Radio>\n                            <Radio :value=\"'banana'\">香蕉</Radio>\n                            <Radio :value=\"'orange'\">橙子</Radio>\n                            <Radio :value=\"'grape'\" disabled>葡萄</Radio>\n                        </RadioGroup>\n                        <div class=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\n                            选中的水果: <span class=\"font-medium\">{{ groupValue }}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"space-y-4\">\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300\">使用options配置</h3>\n                    <div\n                        class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md transform transition-all duration-500 hover:scale-[1.01]\">\n                        <RadioGroup v-model=\"optionsValue\" :options=\"fruitOptions\" color=\"green\" />\n                        <div class=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\n                            选中的水果: <span class=\"font-medium\">{{ optionsValue }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 按钮样式 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 flex items-center\">\n                <span>按钮样式</span>\n                <span\n                    class=\"ml-2 px-2 py-1 text-xs bg-cyan-100 text-cyan-700 dark:bg-cyan-900 dark:text-cyan-300 rounded-md\">样式</span>\n            </h2>\n            <div\n                class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-300 space-y-8\">\n                <div class=\"space-y-4\">\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300\">基础按钮单选组</h3>\n                    <div class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md\">\n                        <RadioGroup v-model=\"buttonValue\" optionType=\"button\" color=\"blue\">\n                            <Radio :value=\"'apple'\">苹果</Radio>\n                            <Radio :value=\"'banana'\">香蕉</Radio>\n                            <Radio :value=\"'orange'\">橙子</Radio>\n                            <Radio :value=\"'grape'\" disabled>葡萄</Radio>\n                        </RadioGroup>\n                        <div class=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\n                            选中的水果: <span class=\"font-medium\">{{ buttonValue }}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"space-y-4\">\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300\">填充样式</h3>\n                    <div class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md\">\n                        <RadioGroup v-model=\"solidValue\" optionType=\"button\" buttonStyle=\"solid\" color=\"indigo\">\n                            <Radio :value=\"'apple'\">苹果</Radio>\n                            <Radio :value=\"'banana'\">香蕉</Radio>\n                            <Radio :value=\"'orange'\">橙子</Radio>\n                            <Radio :value=\"'grape'\" disabled>葡萄</Radio>\n                        </RadioGroup>\n                        <div class=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\n                            选中的水果: <span class=\"font-medium\">{{ solidValue }}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"space-y-4\">\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300\">不同大小</h3>\n                    <div class=\"space-y-6\">\n                        <div class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md\">\n                            <p class=\"mb-2 text-sm text-gray-500 dark:text-gray-400\">大尺寸</p>\n                            <RadioGroup v-model=\"sizeValue\" optionType=\"button\" size=\"large\" color=\"rose\">\n                                <Radio :value=\"'large'\">大号</Radio>\n                                <Radio :value=\"'default'\">默认</Radio>\n                                <Radio :value=\"'small'\">小号</Radio>\n                            </RadioGroup>\n                        </div>\n\n                        <div class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md\">\n                            <p class=\"mb-2 text-sm text-gray-500 dark:text-gray-400\">默认尺寸</p>\n                            <RadioGroup v-model=\"sizeValue\" optionType=\"button\" buttonStyle=\"solid\" size=\"default\"\n                                color=\"cyan\">\n                                <Radio :value=\"'large'\">大号</Radio>\n                                <Radio :value=\"'default'\">默认</Radio>\n                                <Radio :value=\"'small'\">小号</Radio>\n                            </RadioGroup>\n                        </div>\n\n                        <div class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md\">\n                            <p class=\"mb-2 text-sm text-gray-500 dark:text-gray-400\">小尺寸</p>\n                            <RadioGroup v-model=\"sizeValue\" optionType=\"button\" size=\"small\" color=\"amber\">\n                                <Radio :value=\"'large'\">大号</Radio>\n                                <Radio :value=\"'default'\">默认</Radio>\n                                <Radio :value=\"'small'\">小号</Radio>\n                            </RadioGroup>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 特殊布局 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 flex items-center\">\n                <span>布局方式</span>\n                <span\n                    class=\"ml-2 px-2 py-1 text-xs bg-pink-100 text-pink-700 dark:bg-pink-900 dark:text-pink-300 rounded-md\">布局</span>\n            </h2>\n            <div\n                class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-300 space-y-6\">\n                <div class=\"space-y-2\">\n                    <h3 class=\"font-medium text-gray-700 dark:text-gray-300\">水平布局</h3>\n                    <div class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md\">\n                        <RadioGroup v-model=\"layoutValue\" color=\"teal\" class=\"flex flex-row gap-6\">\n                            <Radio :value=\"'horizontal'\">水平</Radio>\n                            <Radio :value=\"'vertical'\">垂直</Radio>\n                            <Radio :value=\"'grid'\">网格</Radio>\n                        </RadioGroup>\n                    </div>\n                </div>\n\n                <div class=\"space-y-2\">\n                    <h3 class=\"font-medium text-gray-700 dark:text-gray-300\">垂直布局</h3>\n                    <div class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md\">\n                        <RadioGroup v-model=\"layoutValue\" color=\"violet\" class=\"flex flex-col gap-4\">\n                            <Radio :value=\"'horizontal'\">水平</Radio>\n                            <Radio :value=\"'vertical'\">垂直</Radio>\n                            <Radio :value=\"'grid'\">网格</Radio>\n                        </RadioGroup>\n                    </div>\n                </div>\n\n                <div class=\"space-y-2\">\n                    <h3 class=\"font-medium text-gray-700 dark:text-gray-300\">网格布局</h3>\n                    <div class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md\">\n                        <RadioGroup v-model=\"layoutValue\" color=\"emerald\" class=\"grid grid-cols-2 sm:grid-cols-3 gap-4\">\n                            <Radio :value=\"'horizontal'\">水平布局</Radio>\n                            <Radio :value=\"'vertical'\">垂直布局</Radio>\n                            <Radio :value=\"'grid'\">网格布局</Radio>\n                            <Radio :value=\"'flex'\">弹性布局</Radio>\n                            <Radio :value=\"'responsive'\">响应式布局</Radio>\n                        </RadioGroup>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 动态加载选项 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 flex items-center\">\n                <span>动态数据</span>\n                <span\n                    class=\"ml-2 px-2 py-1 text-xs bg-amber-100 text-amber-700 dark:bg-amber-900 dark:text-amber-300 rounded-md\">交互</span>\n            </h2>\n            <div class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-300\">\n                <div class=\"space-y-4\">\n                    <button @click=\"loadOptions\"\n                        class=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md transition-colors duration-300 flex items-center\">\n                        <svg v-if=\"loading\" class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\"\n                            xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\">\n                            </circle>\n                            <path class=\"opacity-75\" fill=\"currentColor\"\n                                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\">\n                            </path>\n                        </svg>\n                        {{ loading ? '加载中...' : '加载选项' }}\n                    </button>\n\n                    <div v-if=\"dynamicOptions.length\"\n                        class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md animate-fade-in\">\n                        <RadioGroup v-model=\"dynamicValue\" :options=\"dynamicOptions\" color=\"fuchsia\" />\n                        <div class=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\n                            选中的选项: <span class=\"font-medium\">{{ dynamicValue }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 表单集成示例 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 flex items-center\">\n                <span>表单集成</span>\n                <span\n                    class=\"ml-2 px-2 py-1 text-xs bg-indigo-100 text-indigo-700 dark:bg-indigo-900 dark:text-indigo-300 rounded-md\">场景</span>\n            </h2>\n            <div class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-300\">\n                <form @submit.prevent=\"submitForm\" class=\"space-y-6\">\n                    <div class=\"space-y-2\">\n                        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">性别</label>\n                        <RadioGroup v-model=\"formData.gender\" color=\"blue\">\n                            <Radio :value=\"'male'\">男</Radio>\n                            <Radio :value=\"'female'\">女</Radio>\n                            <Radio :value=\"'other'\">其他</Radio>\n                        </RadioGroup>\n                        <p v-if=\"formErrors.gender\" class=\"mt-1 text-sm text-red-600 dark:text-red-400 animate-pulse\">{{\n                            formErrors.gender }}</p>\n                    </div>\n\n                    <div class=\"space-y-2\">\n                        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">年龄段</label>\n                        <RadioGroup v-model=\"formData.ageGroup\" optionType=\"button\" buttonStyle=\"solid\" color=\"cyan\">\n                            <Radio :value=\"'under18'\">18岁以下</Radio>\n                            <Radio :value=\"'18to30'\">18-30岁</Radio>\n                            <Radio :value=\"'31to45'\">31-45岁</Radio>\n                            <Radio :value=\"'above45'\">45岁以上</Radio>\n                        </RadioGroup>\n                        <p v-if=\"formErrors.ageGroup\" class=\"mt-1 text-sm text-red-600 dark:text-red-400 animate-pulse\">\n                            {{ formErrors.ageGroup }}</p>\n                    </div>\n\n                    <div>\n                        <button type=\"submit\"\n                            class=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-300\">\n                            提交\n                        </button>\n                    </div>\n\n                    <div v-if=\"formSubmitted\" class=\"p-4 bg-green-50 dark:bg-green-900 rounded-md animate-fade-in\">\n                        <p class=\"text-sm text-green-800 dark:text-green-200\">表单提交成功!</p>\n                        <div class=\"mt-3 text-sm\">\n                            <p class=\"text-gray-600 dark:text-gray-400\">您选择的性别: <span class=\"font-medium\">{{\n                                formData.gender === 'male' ? '男' : formData.gender === 'female' ? '女' : '其他'\n                                    }}</span></p>\n                            <p class=\"text-gray-600 dark:text-gray-400\">您的年龄段: <span class=\"font-medium\">{{\n                                    getAgeGroupText(formData.ageGroup) }}</span></p>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </section>\n\n        <!-- 小结与最佳实践 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 flex items-center\">\n                <span>小结与最佳实践</span>\n                <span class=\"ml-2 px-2 py-1 text-xs bg-yellow-100 text-yellow-700 dark:bg-yellow-900 dark:text-yellow-300 rounded-md\">指南</span>\n            </h2>\n            <div class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-300\">\n                <div class=\"space-y-4\">\n                    <div class=\"space-y-2\">\n                        <h3 class=\"font-medium text-gray-700 dark:text-gray-300\">何时使用RadioBox</h3>\n                        <ul class=\"list-disc pl-5 text-gray-600 dark:text-gray-400 space-y-1\">\n                            <li>当用户需要在多个选项中选择单个状态时</li>\n                            <li>选项数量较少（一般不超过5个），且用户需要一目了然地看到所有选项时</li>\n                            <li>相比下拉选择框，RadioBox能让用户更直观地对比不同选项</li>\n                        </ul>\n                    </div>\n\n                    <div class=\"space-y-2\">\n                        <h3 class=\"font-medium text-gray-700 dark:text-gray-300\">最佳实践</h3>\n                        <ul class=\"list-disc pl-5 text-gray-600 dark:text-gray-400 space-y-2\">\n                            <li>\n                                <strong>选项描述要简洁明了</strong>\n                                <p class=\"mt-1\">RadioBox的标签文本应简短明确，便于用户快速理解和选择。</p>\n                            </li>\n                            <li>\n                                <strong>默认选项</strong>\n                                <p class=\"mt-1\">如果有明确的推荐选项，应将其设为默认选中状态。</p>\n                            </li>\n                            <li>\n                                <strong>布局考虑</strong>\n                                <p class=\"mt-1\">选项较多时应考虑使用多行或网格布局；选项较少时可使用水平排列。</p>\n                            </li>\n                            <li>\n                                <strong>按钮样式与普通样式的选择</strong>\n                                <p class=\"mt-1\">针对不同的交互场景选择适合的样式：普通RadioBox适合常规表单，按钮样式适合更突出的选择项。</p>\n                            </li>\n                            <li>\n                                <strong>颜色使用</strong>\n                                <p class=\"mt-1\">根据界面整体风格选择合适的颜色，保持色彩一致性。</p>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div class=\"space-y-2\">\n                        <h3 class=\"font-medium text-gray-700 dark:text-gray-300\">RadioBox vs Select</h3>\n                        <div class=\"mt-2 border-l-4 border-blue-500 dark:border-blue-400 pl-4 py-2 bg-blue-50 dark:bg-blue-900/30 rounded-r\">\n                            <p class=\"text-gray-600 dark:text-gray-400\">\n                                在选择是使用RadioBox还是Select(下拉选择)时，可以参考以下指引：\n                            </p>\n                            <ul class=\"list-disc pl-5 mt-2 text-gray-600 dark:text-gray-400\">\n                                <li>选项少于5个时，优先考虑使用RadioBox</li>\n                                <li>选项超过5个时，优先考虑使用Select以节省空间</li>\n                                <li>如果需要用户直接比较各选项，使用RadioBox更合适</li>\n                                <li>如果界面空间有限，即使选项较少也可以使用Select</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- API文档 -->\n        <section class=\"space-y-4\">\n            <h2 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300\">API 参考</h2>\n            <div class=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow space-y-6\">\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300 mb-3\">Radio 属性</h3>\n                    <div class=\"overflow-x-auto\">\n                        <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                            <thead class=\"bg-gray-50 dark:bg-gray-900\">\n                                <tr>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">参数</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">说明</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">类型</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">默认值</th>\n                                </tr>\n                            </thead>\n                            <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">modelValue(v-model)</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">指定当前是否选中</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">boolean | string | number</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">undefined</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">value</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">根据 value 进行比较，判断是否选中</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">boolean | string | number</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">undefined</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">disabled</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">禁用状态</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">boolean</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">false</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">name</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">input[type=\"radio\"] 的 name 属性</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">string</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">undefined</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">autofocus</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">自动获取焦点</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">boolean</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">false</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">color</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">单选框颜色</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">ColorType</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">blue</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300 mb-3\">Radio 事件</h3>\n                    <div class=\"overflow-x-auto\">\n                        <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                            <thead class=\"bg-gray-50 dark:bg-gray-900\">\n                                <tr>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">事件名</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">说明</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">回调参数</th>\n                                </tr>\n                            </thead>\n                            <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">change</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">选中状态变化时的回调</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">Event: Event</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">focus</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">获得焦点时触发</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">Event: FocusEvent</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">blur</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">失去焦点时触发</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">Event: FocusEvent</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300 mb-3\">Radio 方法</h3>\n                    <div class=\"overflow-x-auto\">\n                        <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                            <thead class=\"bg-gray-50 dark:bg-gray-900\">\n                                <tr>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">方法名</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">说明</th>\n                                </tr>\n                            </thead>\n                            <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">focus()</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">使单选框获取焦点</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">blur()</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">使单选框失去焦点</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300 mb-3\">RadioGroup 属性</h3>\n                    <div class=\"overflow-x-auto\">\n                        <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                            <thead class=\"bg-gray-50 dark:bg-gray-900\">\n                                <tr>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">参数</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">说明</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">类型</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">默认值</th>\n                                </tr>\n                            </thead>\n                            <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">modelValue(v-model)</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">用于设置当前选中的值</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">any</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">undefined</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">disabled</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">禁用所有子单选器</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">boolean</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">false</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">name</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">RadioGroup 下所有 input[type=\"radio\"] 的 name 属性</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">string</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">undefined</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">size</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">单选框组尺寸，仅对按钮样式生效</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">large | default | small</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">default</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">optionType</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">用于设置 Radio 的类型</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">default | button</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">default</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">buttonStyle</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">按钮风格样式，仅在 optionType 为 button 时有效</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">outline | solid</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">outline</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">options</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">以配置形式设置子元素</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">string[] | number[] | Array<{ label: string, value: string | number, disabled?: boolean }></td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">[]</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">color</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">单选框颜色</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">ColorType</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">blue</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-700 dark:text-gray-300 mb-3\">RadioGroup 事件</h3>\n                    <div class=\"overflow-x-auto\">\n                        <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                            <thead class=\"bg-gray-50 dark:bg-gray-900\">\n                                <tr>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">事件名</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">说明</th>\n                                    <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">回调参数</th>\n                                </tr>\n                            </thead>\n                            <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                                <tr>\n                                    <td class=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">change</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">选项变化时的回调</td>\n                                    <td class=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">{ target: { value } }</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <div class=\"rounded-md bg-blue-50 dark:bg-blue-900/30 p-4\">\n                    <div class=\"flex\">\n                        <div class=\"flex-shrink-0\">\n                            <svg class=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                            </svg>\n                        </div>\n                        <div class=\"ml-3\">\n                            <h3 class=\"text-sm font-medium text-blue-800 dark:text-blue-300\">颜色类型说明</h3>\n                            <div class=\"mt-2 text-sm text-blue-700 dark:text-blue-400\">\n                                <p>ColorType 支持以下颜色系列:</p>\n                                <ul class=\"list-disc pl-5 mt-1 space-y-1\">\n                                    <li>灰色系: slate, gray, zinc, neutral, stone</li>\n                                    <li>暖色系: red, orange, amber, yellow</li>\n                                    <li>绿色系: lime, green, emerald, teal</li>\n                                    <li>蓝色系: cyan, sky, blue, indigo</li>\n                                    <li>紫粉色系: violet, purple, fuchsia, pink, rose</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive } from 'vue';\nimport { Radio, RadioGroup } from './RadioBox';\n\n// 基础单选框\nconst basicChecked = ref(false);\n\n// 颜色选择\nconst colorChecked = ref('blue');\n\n// 禁用状态\nconst disabledChecked = ref(true);\n\n// 单选框组\nconst groupValue = ref('apple');\nconst optionsValue = ref('banana');\n\nconst fruitOptions = [\n    { label: '苹果', value: 'apple' },\n    { label: '香蕉', value: 'banana' },\n    { label: '橙子', value: 'orange' },\n    { label: '葡萄', value: 'grape', disabled: true },\n];\n\n// 按钮样式\nconst buttonValue = ref('apple');\nconst solidValue = ref('banana');\nconst sizeValue = ref('default');\n\n// 布局方式\nconst layoutValue = ref('horizontal');\n\n// 动态数据\nconst loading = ref(false);\nconst dynamicOptions = ref<Array<{ label: string; value: string }>>([]);\nconst dynamicValue = ref('');\n\nconst loadOptions = () => {\n    loading.value = true;\n    // 模拟异步加载\n    setTimeout(() => {\n        dynamicOptions.value = [\n            { label: '选项一', value: 'option1' },\n            { label: '选项二', value: 'option2' },\n            { label: '选项三', value: 'option3' },\n            { label: '选项四', value: 'option4' },\n        ];\n        dynamicValue.value = 'option1';\n        loading.value = false;\n    }, 1000);\n};\n\n// 表单集成\nconst formData = reactive({\n    gender: '',\n    ageGroup: '',\n});\n\nconst formErrors = reactive({\n    gender: '',\n    ageGroup: '',\n});\n\nconst formSubmitted = ref(false);\n\nconst submitForm = () => {\n    // 重置错误\n    formErrors.gender = '';\n    formErrors.ageGroup = '';\n\n    // 简单验证\n    let valid = true;\n\n    if (!formData.gender) {\n        formErrors.gender = '请选择性别';\n        valid = false;\n    }\n\n    if (!formData.ageGroup) {\n        formErrors.ageGroup = '请选择年龄段';\n        valid = false;\n    }\n\n    if (valid) {\n        formSubmitted.value = true;\n\n        // 模拟表单提交后重置\n        setTimeout(() => {\n            formSubmitted.value = false;\n        }, 3000);\n    }\n};\n\nconst getAgeGroupText = (value: string) => {\n    const map: Record<string, string> = {\n        'under18': '18岁以下',\n        '18to30': '18-30岁',\n        '31to45': '31-45岁',\n        'above45': '45岁以上',\n    };\n    return map[value] || value;\n};\n</script>\n\n<style scoped>\n/* 添加淡入动画 */\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(10px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.animate-fade-in {\n    animation: fadeIn 0.5s ease-out forwards;\n}\n\n/* 添加脉动动画 */\n@keyframes pulse {\n\n    0%,\n    100% {\n        opacity: 1;\n    }\n\n    50% {\n        opacity: 0.7;\n    }\n}\n\n.animate-pulse {\n    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n</style>"],"names":["colorMap","_isSlot","s","Object","prototype","toString","call","_isVNode","radioGroupKey","Symbol","Radio","defineComponent","name","props","modelValue","type","String","Number","Boolean","default","undefined","value","disabled","autofocus","color","emits","setup","emit","slots","inputRef","ref","radioGroupCtx","inject","isChecked","computed","radioDisabled","radioColor","colors","blue","radioName","handleChange","e","target","checked","updateModelValue","handleFocus","handleBlur","onMounted","nextTick","focus","isButtonStyle","optionType","_createVNode","RadioButton","light","dark","buttonSize","size","large","small","buttonStyle","style","colorClasses","RadioGroup","options","Array","radioGroupRef","mergedValue","hover","provide","renderOptions","length","map","option","_slot","_","label","RadioBox","basicChecked","colorChecked","disabledChecked","groupValue","optionsValue","fruitOptions","buttonValue","solidValue","sizeValue","layoutValue","loading","dynamicOptions","dynamicValue","loadOptions","formData","reactive","formErrors","formSubmitted","submitForm","valid","getAgeGroupText"],"mappings":"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"}