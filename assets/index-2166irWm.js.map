{"version":3,"file":"index-2166irWm.js","sources":["../../src/libs/Calendars/config.ts","../../src/libs/Calendars/utils.ts","../../src/libs/Calendars/Calendars.tsx","../../src/libs/Calendars/code.ts","../../src/libs/Calendars/View.vue"],"sourcesContent":["export interface DayType {\n  date: string;\n  isCurrentMonth: boolean;\n  isToday: boolean;\n  isSelected: boolean;\n  isInRange: boolean;\n  isRangeStart: boolean;\n  isRangeEnd: boolean;\n}\n\nexport type ColorType =\n  | 'slate' | 'gray' | 'zinc' | 'neutral' | 'stone'  // 灰色系\n  | 'red' | 'orange' | 'amber' | 'yellow'            // 暖色系\n  | 'lime' | 'green' | 'emerald' | 'teal'            // 绿色系\n  | 'cyan' | 'sky' | 'blue' | 'indigo'               // 蓝色系\n  | 'violet' | 'purple' | 'fuchsia' | 'pink' | 'rose'; // 紫粉色系\n\n// 提供给外部使用的颜色按钮类名映射\nexport const colorButtonClassMap: Record<ColorType, string> = {\n  slate: \"bg-slate-500 text-white dark:bg-slate-600\",\n  gray: \"bg-gray-500 text-white dark:bg-gray-600\",\n  zinc: \"bg-zinc-500 text-white dark:bg-zinc-600\",\n  neutral: \"bg-neutral-500 text-white dark:bg-neutral-600\",\n  stone: \"bg-stone-500 text-white dark:bg-stone-600\",\n  red: \"bg-red-500 text-white dark:bg-red-600\",\n  orange: \"bg-orange-500 text-white dark:bg-orange-600\",\n  amber: \"bg-amber-500 text-white dark:bg-amber-600\",\n  yellow: \"bg-yellow-500 text-white dark:bg-yellow-600\",\n  lime: \"bg-lime-500 text-white dark:bg-lime-600\",\n  green: \"bg-green-500 text-white dark:bg-green-600\",\n  emerald: \"bg-emerald-500 text-white dark:bg-emerald-600\",\n  teal: \"bg-teal-500 text-white dark:bg-teal-600\",\n  cyan: \"bg-cyan-500 text-white dark:bg-cyan-600\",\n  sky: \"bg-sky-500 text-white dark:bg-sky-600\",\n  blue: \"bg-blue-500 text-white dark:bg-blue-600\",\n  indigo: \"bg-indigo-500 text-white dark:bg-indigo-600\",\n  violet: \"bg-violet-500 text-white dark:bg-violet-600\",\n  purple: \"bg-purple-500 text-white dark:bg-purple-600\",\n  fuchsia: \"bg-fuchsia-500 text-white dark:bg-fuchsia-600\",\n  pink: \"bg-pink-500 text-white dark:bg-pink-600\",\n  rose: \"bg-rose-500 text-white dark:bg-rose-600\"\n};\n\n// 颜色分组定义\nexport const colorGroups = {\n  gray: ['slate', 'gray', 'zinc', 'neutral', 'stone'] as const,\n  warm: ['red', 'orange', 'amber', 'yellow'] as const,\n  green: ['lime', 'green', 'emerald', 'teal'] as const,\n  blue: ['cyan', 'sky', 'blue', 'indigo'] as const,\n  purple: ['violet', 'purple', 'fuchsia', 'pink', 'rose'] as const\n};\n","import dayjs from \"dayjs\";\nimport { DayType, ColorType, colorButtonClassMap } from \"./config\";\nexport const calendarUtils = {\n  getWeekDays(locale: string): string[] {\n    return locale === \"zh-cn\"\n      ? [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"]\n      : [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  },\n\n  getMonthLabel(date: dayjs.Dayjs): string {\n    return date.format(\"YYYY年MM月\");\n  },\n\n  getDayNumber(date: string): number {\n    return dayjs(date).date();\n  },\n\n  formatDate(date: string, format: string): string {\n    return dayjs(date).format(format);\n  },\n\n  getCalendarDays(\n    currentDate: dayjs.Dayjs,\n    selectedDate: string | null,\n  ): DayType[] {\n    const days: DayType[] = [];\n    const firstDay = currentDate.startOf(\"month\");\n    const lastDay = currentDate.endOf(\"month\");\n    const startDay = firstDay.startOf(\"week\");\n    const endDay = lastDay.endOf(\"week\");\n\n    let currentDay = startDay;\n    while (currentDay.isBefore(endDay) || currentDay.isSame(endDay, \"day\")) {\n      days.push({\n        date: currentDay.format(\"YYYY-MM-DD\"),\n        isCurrentMonth: currentDay.month() === currentDate.month(),\n        isToday: currentDay.isSame(dayjs(), \"day\"),\n        isSelected: selectedDate\n          ? currentDay.isSame(dayjs(selectedDate), \"day\")\n          : false,\n        isInRange: false,\n        isRangeStart: false,\n        isRangeEnd: false,\n      });\n      currentDay = currentDay.add(1, \"day\");\n    }\n    return days;\n  },\n\n  getCalendarDaysWithRange(\n    currentDate: dayjs.Dayjs,\n    selectedDate: string | null,\n    rangeStart: string | null,\n    rangeEnd: string | null,\n  ): DayType[] {\n    const days = this.getCalendarDays(currentDate, selectedDate);\n    if (rangeStart && rangeEnd) {\n      return days.map((day) => ({\n        ...day,\n        isInRange:\n          dayjs(day.date).isAfter(rangeStart) &&\n          dayjs(day.date).isBefore(rangeEnd),\n        isRangeStart: day.date === rangeStart,\n        isRangeEnd: day.date === rangeEnd,\n      }));\n    }\n    return days;\n  },\n};\n\n// 获取颜色类名的辅助函数\nexport function getColorButtonClass(color: ColorType): string {\n  return colorButtonClassMap[color] || \"bg-blue-500 text-white\";\n}\n","import { defineComponent, ref, computed, onMounted, PropType, TransitionGroup, watch, } from \"vue\";\nimport dayjs from \"dayjs\";\nimport { ColorType, colorGroups, DayType } from './config'\nimport { calendarUtils, getColorButtonClass } from './utils'\nexport { colorGroups }\nexport { calendarUtils, getColorButtonClass }\nexport type { ColorType, DayType }\nimport \"./theme.css\"; // 导入主题CSS\n\nexport default defineComponent({\n  name: \"Calendars\",\n  props: {\n    initialDate: {\n      type: String,\n      default: () => dayjs().format(\"YYYY-MM-DD\"),\n    },\n    dateFormat: {\n      type: String,\n      default: \"YYYY-MM-DD\",\n    },\n    disableOutsideDays: {\n      type: Boolean,\n      default: true,\n    },\n    locale: {\n      type: String as PropType<\"en\" | \"zh-cn\">,\n      default: \"en\",\n    },\n    mode: {\n      type: String as PropType<\"single\" | \"range\">,\n      default: \"single\",\n    },\n    selectedDate: String,\n    startDate: String,\n    endDate: String,\n    color: {\n      type: String as PropType<ColorType>,\n      default: \"blue\",\n    },\n  },\n\n  emits: [\n    \"update:selectedDate\",\n    \"update:startDate\",\n    \"update:endDate\",\n    \"dateSelect\",\n    \"rangeSelect\",\n  ],\n\n  setup(props, { emit }) {\n    const currentDate = ref(dayjs(props.initialDate));\n    const selectedDate = ref(props.initialDate);\n    const rangeStart = ref<string | null>(props.startDate || null);\n    const rangeEnd = ref<string | null>(props.endDate || null);\n\n    const weekDays = computed(() => calendarUtils.getWeekDays(props.locale));\n    const currentMonthLabel = computed(() =>\n      calendarUtils.getMonthLabel(currentDate.value),\n    );\n    const calendarDays = computed(() => {\n      if (props.mode === \"range\") {\n        return calendarUtils.getCalendarDaysWithRange(\n          currentDate.value,\n          selectedDate.value,\n          rangeStart.value,\n          rangeEnd.value,\n        );\n      }\n      return calendarUtils.getCalendarDays(\n        currentDate.value,\n        selectedDate.value,\n      );\n    });\n\n    // 简化后的主题类名计算\n    const themeClasses = computed(() => {\n      const color = props.color;\n      return {\n        primary: `bg-${color}-500 text-white dark:bg-${color}-600`,\n        lightBg: `bg-${color}-50 dark:bg-${color}-900/30`,\n        todayText: `text-${color}-600 dark:text-${color}-400`,\n        focus: `focus:ring-${color}-500 dark:focus:ring-${color}-400`,\n        hover: `hover:bg-${color}-50 dark:hover:bg-${color}-900/30`,\n        selected: `bg-${color}-500 text-white dark:bg-${color}-600 dark:text-white shadow-md`\n      };\n    });\n\n    const handleDateClick = (day: DayType) => {\n      if (!day.isCurrentMonth && props.disableOutsideDays) return;\n\n      if (props.mode === \"single\") {\n        selectedDate.value = day.date;\n        emit(\n          \"update:selectedDate\",\n          calendarUtils.formatDate(day.date, props.dateFormat),\n        );\n        emit(\n          \"dateSelect\",\n          calendarUtils.formatDate(day.date, props.dateFormat),\n        );\n      } else {\n        if (!rangeStart.value || (rangeStart.value && rangeEnd.value)) {\n          rangeStart.value = day.date;\n          rangeEnd.value = null;\n          emit(\n            \"update:startDate\",\n            calendarUtils.formatDate(day.date, props.dateFormat),\n          );\n          emit(\"update:endDate\", \"\");\n        } else {\n          if (dayjs(day.date).isBefore(rangeStart.value)) {\n            rangeEnd.value = rangeStart.value;\n            rangeStart.value = day.date;\n          } else {\n            rangeEnd.value = day.date;\n          }\n          emit(\n            \"update:startDate\",\n            calendarUtils.formatDate(rangeStart.value, props.dateFormat),\n          );\n          emit(\n            \"update:endDate\",\n            calendarUtils.formatDate(rangeEnd.value, props.dateFormat),\n          );\n          emit(\n            \"rangeSelect\",\n            calendarUtils.formatDate(rangeStart.value, props.dateFormat),\n            calendarUtils.formatDate(rangeEnd.value, props.dateFormat),\n          );\n        }\n      }\n    };\n\n    const previousMonth = () => {\n      currentDate.value = currentDate.value.subtract(1, \"month\");\n    };\n\n    const nextMonth = () => {\n      currentDate.value = currentDate.value.add(1, \"month\");\n    };\n\n    onMounted(() => {\n      if (props.initialDate) {\n        currentDate.value = dayjs(props.initialDate);\n        selectedDate.value = props.initialDate;\n      }\n    });\n\n    return () => (\n      <div\n        class=\"calendar-container relative overflow-hidden rounded-xl bg-white dark:bg-gray-800 border border-gray-100 dark:border-gray-700 transition-colors duration-200\"\n      >\n        <div class=\"flex items-center justify-between p-4 md:p-6\">\n          {/* Title with transition */}\n          <div class=\"relative h-7 md:h-8 overflow-hidden\">\n            <TransitionGroup\n              tag=\"div\"\n              enterActiveClass=\"transition-all duration-300 ease-out transform-gpu absolute w-full\"\n              enterFromClass=\"opacity-0 -translate-x-4\"\n              enterToClass=\"opacity-100 translate-x-0\"\n              leaveActiveClass=\"transition-all duration-300 ease-in transform-gpu absolute w-full\"\n              leaveFromClass=\"opacity-100 translate-x-0\"\n              leaveToClass=\"opacity-0 translate-x-4\"\n              moveClass=\"transition-transform duration-300\"\n            >\n              {{\n                default: () => [\n                  <h2\n                    key={currentMonthLabel.value}\n                    class=\"calendar-title text-base font-medium md:text-lg text-gray-800 dark:text-gray-100 whitespace-nowrap\"\n                  >\n                    {currentMonthLabel.value}\n                  </h2>\n                ]\n              }}\n            </TransitionGroup>\n          </div>\n\n          <div class=\"flex space-x-2\">\n            <button\n              type=\"button\"\n              onClick={previousMonth}\n              class={`group rounded-full p-2 text-gray-400 transition-all duration-300 hover:bg-gray-50 hover:text-gray-600 dark:hover:bg-gray-700 dark:hover:text-gray-300 ${themeClasses.value.focus} focus:ring-2 focus:ring-offset-2 focus:outline-none dark:focus:ring-offset-gray-800`}\n              aria-label=\"上个月\"\n            >\n              <i class=\"icon-[material-symbols--chevron-left-rounded] size-5 transition-transform duration-300 group-hover:-translate-x-0.5 md:size-6\" />\n            </button>\n            <button\n              type=\"button\"\n              onClick={nextMonth}\n              class={`group rounded-full p-2 text-gray-400 transition-all duration-300 hover:bg-gray-50 hover:text-gray-600 dark:hover:bg-gray-700 dark:hover:text-gray-300 ${themeClasses.value.focus} focus:ring-2 focus:ring-offset-2 focus:outline-none dark:focus:ring-offset-gray-800`}\n              aria-label=\"下个月\"\n            >\n              <i class=\"icon-[material-symbols--chevron-right-rounded] size-5 transition-transform duration-300 group-hover:translate-x-0.5 md:size-6\" />\n            </button>\n          </div>\n        </div>\n\n        <div class=\"px-4 pb-6 md:px-6\">\n          <div class=\"mb-4 grid grid-cols-7\">\n            {weekDays.value.map((day) => (\n              <div\n                key={day}\n                class=\"py-2 text-center text-xs font-medium text-gray-500 md:text-sm dark:text-gray-400\"\n              >\n                {day}\n              </div>\n            ))}\n          </div>\n\n          <div class=\"grid grid-cols-7 gap-1 md:gap-2\">\n            <TransitionGroup\n              enterActiveClass=\"transition-all duration-300 ease-out transform-gpu\"\n              enterFromClass=\"opacity-0 scale-90 blur-[1px]\"\n              enterToClass=\"opacity-100 scale-100 blur-0\"\n              leaveActiveClass=\"transition-all duration-200 ease-in transform-gpu\"\n              leaveFromClass=\"opacity-100 scale-100 blur-0\"\n              leaveToClass=\"opacity-0 scale-90 blur-[1px]\"\n              moveClass=\"transition-all duration-300 ease-out\"\n            >\n              {{\n                default: () =>\n                  calendarDays.value.map((day) => (\n                    <div\n                      key={`${currentDate.value.format(\"YYYY-MM\")}-${day.date}`}\n                      class=\"aspect-square p-0.5\"\n                    >\n                      <button\n                        type=\"button\"\n                        onClick={() => handleDateClick(day)}\n                        disabled={\n                          !day.isCurrentMonth && props.disableOutsideDays\n                        }\n                        class={[\n                          \"relative flex h-full w-full items-center justify-center rounded-full transition-all duration-300 focus:ring-2 focus:ring-offset-1 focus:outline-none disabled:cursor-not-allowed disabled:opacity-40 dark:focus:ring-offset-gray-800\",\n                          themeClasses.value.focus,\n                          // 非当前月份样式\n                          !day.isCurrentMonth && \"text-gray-300 dark:text-gray-600\",\n                          // 当前月非今日、非选中、非范围样式\n                          !day.isSelected && !day.isInRange && !day.isToday && day.isCurrentMonth && \n                            \"text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700\",\n                          // 今日样式\n                          !day.isSelected && !day.isInRange && day.isToday &&\n                            `font-semibold ${themeClasses.value.todayText}`,\n                          // 选中样式\n                          ((props.mode === \"single\" && day.isSelected) || \n                           (props.mode === \"range\" && (day.isRangeStart || day.isRangeEnd))) &&\n                            `${themeClasses.value.selected} transform scale-105`,\n                          // 范围内日期样式\n                          props.mode === \"range\" && day.isInRange && !day.isRangeStart && !day.isRangeEnd && \n                            themeClasses.value.lightBg,\n                          day.isCurrentMonth ? \"cursor-pointer\" : \"cursor-default\",\n                        ]}\n                      >\n                        <time\n                          datetime={day.date}\n                          class={[\n                            \"relative z-10 text-sm md:text-base\",\n                            (day.isSelected || day.isRangeStart || day.isRangeEnd) && \n                              \"font-semibold\",\n                          ]}\n                        >\n                          {calendarUtils.getDayNumber(day.date)}\n                        </time>\n                      </button>\n                    </div>\n                  ))\n              }}\n            </TransitionGroup>\n          </div>\n        </div>\n\n        <style scoped>{`\n          .calendar-container {\n            will-change: transform, opacity;\n            animation: calendarAppear 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\n          }\n\n          @keyframes calendarAppear {\n            from {\n              opacity: 0;\n              transform: scale(0.95) translateY(-5px);\n            }\n            to {\n              opacity: 1;\n              transform: scale(1) translateY(0);\n            }\n          }\n\n          * {\n            backface-visibility: hidden;\n            -webkit-font-smoothing: antialiased;\n          }\n        `}</style>\n      </div>\n    );\n  },\n});\n","// 基础用法代码示例\nexport const basicUsageCode = `\\`\\`\\`vue\n<template>\n  <Calendars v-model:selectedDate=\"date\" mode=\"single\" />\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst date = ref('');\n</script>\n\\`\\`\\``;\n\n// 日期范围选择代码示例\nexport const rangeSelectCode = `\\`\\`\\`vue\n<template>\n  <Calendars \n    v-model:startDate=\"startDate\" \n    v-model:endDate=\"endDate\" \n    mode=\"range\"\n    @rangeSelect=\"handleRangeSelect\" \n  />\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst startDate = ref('');\nconst endDate = ref('');\n\nconst handleRangeSelect = (start, end) => {\n  console.log('选择的日期范围:', { start, end });\n};\n</script>\n\\`\\`\\``;\n\n// 自定义颜色代码示例\nexport const customColorCode = `\\`\\`\\`vue\n<template>\n  <div class=\"flex flex-col gap-4\">\n    <Calendars v-model:selectedDate=\"date\" mode=\"single\" color=\"indigo\" />\n    <Calendars v-model:selectedDate=\"date\" mode=\"single\" color=\"emerald\" />\n    <Calendars v-model:selectedDate=\"date\" mode=\"single\" color=\"amber\" />\n    <Calendars v-model:selectedDate=\"date\" mode=\"single\" color=\"rose\" />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst date = ref('');\n</script>\n\\`\\`\\``;\n\n// 语言本地化代码示例\nexport const localizationCode = `\\`\\`\\`vue\n<template>\n  <div class=\"flex flex-col gap-4\">\n    <h3>英文 (en)</h3>\n    <Calendars v-model:selectedDate=\"date\" locale=\"en\" />\n    \n    <h3>中文 (zh-cn)</h3>\n    <Calendars v-model:selectedDate=\"date\" locale=\"zh-cn\" />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst date = ref('');\n</script>\n\\`\\`\\``;\n\n// 日期初始化和格式化代码示例\nexport const dateFormatCode = `\\`\\`\\`vue\n<template>\n  <Calendars \n    v-model:selectedDate=\"date\" \n    :initialDate=\"initialDate\"\n    dateFormat=\"YYYY/MM/DD\" \n    @dateSelect=\"handleDateSelect\"\n  />\n  <div v-if=\"date\" class=\"mt-2\">\n    选中日期：{{ date }}\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst initialDate = '2023-05-15'; // 初始日期\nconst date = ref('');\n\nconst handleDateSelect = (selectedDate) => {\n  console.log('格式化后的日期:', selectedDate);\n};\n</script>\n\\`\\`\\``;\n\n// 暗黑模式示例\nexport const darkModeCode = `\\`\\`\\`vue\n<template>\n  <div class=\"p-4 bg-gray-900\">\n    <Calendars \n      v-model:selectedDate=\"date\" \n      color=\"blue\"\n      class=\"dark\" \n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst date = ref('');\n</script>\n\\`\\`\\``;\n\n// 事件监听示例\nexport const eventsCode = `\\`\\`\\`vue\n<template>\n  <Calendars\n    v-model:selectedDate=\"selectedDate\"\n    mode=\"single\"\n    @dateSelect=\"handleDateSelect\"\n  />\n\n  <div v-if=\"eventLog\" class=\"mt-3 p-3 bg-gray-100 rounded text-sm\">\n    <div>事件记录: {{ eventLog }}</div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst selectedDate = ref('');\nconst eventLog = ref('');\n\nconst handleDateSelect = (date) => {\n  eventLog.value = \\`选择了日期: \\${date} (\\${new Date().toLocaleTimeString()})\\`;\n};\n</script>\n\\`\\`\\``;\n","<template>\n    <div class=\"mx-auto max-w-7xl p-4 md:p-8\">\n        <h1 class=\"mb-8 text-2xl font-bold\">日历组件展示</h1>\n\n        <!-- 基础用法 -->\n        <section class=\"mb-12\">\n            <h2 class=\"mb-4 text-xl font-semibold\">基础用法</h2>\n\n            <div class=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                <CodePreview :code=\"basicUsageCode\">\n                    <div\n                        class=\"rounded-xl border border-gray-100 bg-white p-4 shadow-md transition-all duration-200 ease-in-out dark:border-gray-700 dark:bg-gray-800\">\n                        <h3 class=\"mb-3 text-lg font-semibold\">单选模式</h3>\n                        <Calendars v-model:selectedDate=\"dynamicSelectedDate\" mode=\"single\" :color=\"selectedColor\"\n                            :key=\"`single-calendar`\" @dateSelect=\"handleDynamicDateSelect\" />\n                        <div v-if=\"dynamicSelectedDate\" class=\"mt-3 rounded bg-gray-50 p-2 text-sm dark:bg-gray-700\">\n                            <div class=\"font-medium text-gray-700 dark:text-gray-300\">\n                                选中日期：{{ dynamicSelectedDate }}\n                            </div>\n                            <div class=\"text-gray-500 dark:text-gray-400\">\n                                {{ formatSelectedDate(dynamicSelectedDate) }}\n                            </div>\n                        </div>\n                    </div>\n                </CodePreview>\n\n                <CodePreview :code=\"rangeSelectCode\">\n                    <div\n                        class=\"rounded-xl border border-gray-100 bg-white p-4 shadow-md transition-all duration-200 ease-in-out dark:border-gray-700 dark:bg-gray-800\">\n                        <h3 class=\"mb-3 text-lg font-semibold\">范围选择模式</h3>\n                        <Calendars v-model:startDate=\"dynamicStartDate\" v-model:endDate=\"dynamicEndDate\" mode=\"range\"\n                            :color=\"selectedColor\" :key=\"`range-dynamic`\"\n                            @rangeSelect=\"handleDynamicRangeSelect\" />\n                        <div v-if=\"dynamicStartDate || dynamicEndDate\"\n                            class=\"mt-3 rounded bg-gray-50 p-2 text-sm dark:bg-gray-700\">\n                            <div class=\"font-medium text-gray-700 dark:text-gray-300\">\n                                选择范围：{{ dynamicStartDate || \"未选择\" }} 至\n                                {{ dynamicEndDate || \"未选择\" }}\n                            </div>\n                            <div v-if=\"dynamicStartDate && dynamicEndDate\" class=\"text-gray-500 dark:text-gray-400\">\n                                共 {{ getDaysBetween(dynamicStartDate, dynamicEndDate) }} 天\n                            </div>\n                            <div v-if=\"lastRangeSelectTime\" class=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n                                最后选择时间：{{ formatTime(lastRangeSelectTime) }}\n                            </div>\n                        </div>\n                    </div>\n                </CodePreview>\n            </div>\n        </section>\n\n        <!-- 颜色主题 -->\n        <section class=\"mb-12\">\n            <h2 class=\"mb-4 text-xl font-semibold\">颜色主题</h2>\n\n            <CodePreview :code=\"customColorCode\">\n                <div\n                    class=\"rounded-xl border border-gray-100 bg-white p-4 shadow-md transition-all duration-200 ease-in-out dark:border-gray-700 dark:bg-gray-800\">\n                    \n                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <!-- 左侧：颜色选择器 -->\n                        <div class=\"flex flex-col\">\n                            <h3 class=\"mb-3 text-lg font-semibold\">选择颜色主题</h3>\n                            <div class=\"grid grid-cols-2 gap-2 sm:grid-cols-3 lg:grid-cols-4\">\n                                <!-- 色系分组显示 -->\n                                <div v-for=\"(colors, groupName) in colorGroups\" :key=\"groupName\"\n                                    class=\"flex flex-col\">\n                                    <h3 class=\"mb-1 text-sm font-medium text-gray-600 dark:text-gray-300\">\n                                        {{ colorGroupNames[groupName] }}\n                                    </h3>\n                                    <div class=\"space-y-1\">\n                                        <div v-for=\"color in colors\" :key=\"color\"\n                                            class=\"flex w-full cursor-pointer items-center justify-between rounded-md px-2 py-0.5 transition-all\"\n                                            :class=\"[\n                                                getColorButtonClass(color),\n                                                selectedColor === color\n                                                    ? `ring-2 ring-offset-1`\n                                                    : 'hover:opacity-80',\n                                            ]\" @click=\"setSelectedColor(color)\">\n                                            <span>{{ color }}</span>\n                                            <span v-if=\"selectedColor === color\"\n                                                class=\"icon-[material-symbols--check-rounded] h-4 w-4 text-white\"></span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <!-- 右侧：组件预览 -->\n                        <div class=\"flex flex-col\">\n                            <h3 class=\"mb-3 text-lg font-semibold\">\n                                当前选中颜色:\n                                <span :class=\"currentColorClasses.text\">{{ selectedColor }}</span>\n                            </h3>\n                            <Calendars v-model:selectedDate=\"colorPreviewDate\" :color=\"selectedColor\"\n                                :key=\"`preview-calendar`\" />\n                        </div>\n                    </div>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 语言本地化 -->\n        <section class=\"mb-12\">\n            <h2 class=\"mb-4 text-xl font-semibold\">语言本地化</h2>\n\n            <CodePreview :code=\"localizationCode\">\n                <div class=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                    <div\n                        class=\"rounded-xl border border-gray-100 bg-white p-4 shadow-md dark:border-gray-700 dark:bg-gray-800\">\n                        <h3 class=\"mb-3 text-lg font-semibold\">英文 (en)</h3>\n                        <Calendars v-model:selectedDate=\"localeEnDate\" locale=\"en\" color=\"blue\" />\n                    </div>\n\n                    <div\n                        class=\"rounded-xl border border-gray-100 bg-white p-4 shadow-md dark:border-gray-700 dark:bg-gray-800\">\n                        <h3 class=\"mb-3 text-lg font-semibold\">中文 (zh-cn)</h3>\n                        <Calendars v-model:selectedDate=\"localeZhDate\" locale=\"zh-cn\" color=\"blue\" />\n                    </div>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 日期格式与初始值 -->\n        <section class=\"mb-12\">\n            <h2 class=\"mb-4 text-xl font-semibold\">日期格式与初始值</h2>\n\n            <CodePreview :code=\"dateFormatCode\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div\n                        class=\"rounded-xl border border-gray-100 bg-white p-4 shadow-md dark:border-gray-700 dark:bg-gray-800\">\n                        <h3 class=\"mb-3 text-lg font-semibold\">自定义日期格式</h3>\n                        <Calendars v-model:selectedDate=\"formatDateValue\" :initialDate=\"'2023-05-15'\"\n                            dateFormat=\"YYYY/MM/DD\" :color=\"selectedColor\" @dateSelect=\"handleFormatDateSelect\" />\n\n                        <div v-if=\"formatDateValue\" class=\"mt-3 rounded bg-gray-50 p-2 text-sm dark:bg-gray-700\">\n                            <div class=\"font-medium text-gray-700 dark:text-gray-300\">\n                                选中日期：{{ formatDateValue }}\n                            </div>\n                            <div class=\"text-gray-500 dark:text-gray-400\">\n                                初始日期为: 2023-05-15\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"rounded-xl border border-gray-100 bg-white p-4 shadow-md dark:border-gray-700 dark:bg-gray-800\">\n                        <h3 class=\"mb-3 text-lg font-semibold\">使用说明</h3>\n                        <div class=\"text-gray-700 dark:text-gray-300 space-y-3\">\n                            <p>通过 <code class=\"px-1 py-0.5 bg-gray-100 dark:bg-gray-800 rounded\">initialDate</code> 属性设置日历初始显示的月份和日期。</p>\n                            <p>通过 <code class=\"px-1 py-0.5 bg-gray-100 dark:bg-gray-800 rounded\">dateFormat</code> 属性自定义返回的日期格式，支持多种格式化模式。</p>\n                            <div class=\"bg-gray-50 dark:bg-gray-800 p-3 rounded\">\n                                <div class=\"font-medium mb-1\">支持的格式:</div>\n                                <ul class=\"list-disc pl-5 text-sm\">\n                                    <li>YYYY-MM-DD (默认)</li>\n                                    <li>YYYY/MM/DD</li>\n                                    <li>MM/DD/YYYY</li>\n                                    <li>DD/MM/YYYY</li>\n                                    <li>等其他 dayjs 支持的格式</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 事件处理 -->\n        <section class=\"mb-12\">\n            <h2 class=\"mb-4 text-xl font-semibold\">事件处理</h2>\n\n            <CodePreview :code=\"eventsCode\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div\n                        class=\"rounded-xl border border-gray-100 bg-white p-4 shadow-md dark:border-gray-700 dark:bg-gray-800\">\n                        <h3 class=\"mb-3 text-lg font-semibold\">事件监听示例</h3>\n                        <Calendars v-model:selectedDate=\"eventDemoDate\" mode=\"single\" color=\"indigo\"\n                            :key=\"`event-demo`\" @dateSelect=\"handleEventDemo\" />\n\n                        <div v-if=\"eventLog\" class=\"mt-3 rounded bg-gray-50 p-2 text-sm dark:bg-gray-700\">\n                            <div class=\"font-medium text-gray-700 dark:text-gray-300\">事件记录:</div>\n                            <div class=\"text-gray-500 dark:text-gray-400\">{{ eventLog }}</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"rounded-xl border border-gray-100 bg-white p-4 shadow-md dark:border-gray-700 dark:bg-gray-800\">\n                        <h3 class=\"mb-3 text-lg font-semibold\">事件说明</h3>\n                        <div class=\"text-gray-700 dark:text-gray-300 space-y-3\">\n                            <p>Calendars 组件提供了丰富的事件回调，可以监听用户的各种交互行为。</p>\n                            <div class=\"bg-gray-50 dark:bg-gray-800 p-3 rounded\">\n                                <div class=\"font-medium mb-1\">可用事件:</div>\n                                <ul class=\"list-disc pl-5 text-sm space-y-2\">\n                                    <li><span class=\"font-medium\">dateSelect</span>: 单选模式下选择日期时触发</li>\n                                    <li><span class=\"font-medium\">rangeSelect</span>: 范围模式下完成选择时触发</li>\n                                    <li><span class=\"font-medium\">update:selectedDate</span>: 数据绑定更新</li>\n                                    <li><span class=\"font-medium\">update:startDate/endDate</span>: 范围数据绑定更新</li>\n                                </ul>\n                            </div>\n                            <p class=\"text-sm text-gray-500 dark:text-gray-400\">点击左侧日历选择日期，可查看事件触发效果</p>\n                        </div>\n                    </div>\n                </div>\n            </CodePreview>\n        </section>\n\n        <!-- 完整颜色预览 (保留原代码) -->\n        <section class=\"mb-12\">\n            <h2 class=\"mb-4 text-xl font-semibold\">全部颜色主题预览</h2>\n\n            <div v-for=\"(colors, groupName) in colorGroups\" :key=\"groupName\" class=\"mb-8\">\n                <h3 class=\"mb-4 border-b pb-2 text-lg font-semibold\">\n                    {{ colorGroupNames[groupName] }}\n                </h3>\n\n                <div class=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                    <div v-for=\"color in colors\" :key=\"color\"\n                        class=\"rounded-xl border border-gray-100 bg-white p-3 shadow-md dark:border-gray-700 dark:bg-gray-800\">\n                        <div class=\"mb-2 flex items-center justify-between\">\n                            <h4 class=\"text-base font-medium\" :class=\"`text-${color}-600 dark:text-${color}-400`\">\n                                {{ color }}\n                            </h4>\n                            <span\n                                :class=\"`rounded px-2 py-0.5 text-xs text-white bg-${color}-500 dark:bg-${color}-600`\">\n                                {{ color }}\n                            </span>\n                        </div>\n\n                        <Calendars v-model:selectedDate=\"colorDateMap[color]\" mode=\"single\" :color=\"color\"\n                            :key=\"`single-${color}`\" class=\"mb-2\"\n                            @dateSelect=\"(date: any) => handleColorDateSelect(color, date)\" />\n                        <div v-if=\"colorDateMap[color]\" class=\"mt-2 rounded bg-gray-50 p-1.5 text-xs dark:bg-gray-700\">\n                            <div class=\"font-medium\">已选日期：{{ colorDateMap[color] }}</div>\n                            <div class=\"text-gray-500 dark:text-gray-400\">\n                                {{ formatSelectedDate(colorDateMap[color]) }}\n                            </div>\n                            <div v-if=\"colorDateSelectTimes[color]\"\n                                class=\"mt-0.5 text-xs text-gray-500 dark:text-gray-400\">\n                                选择时间：{{ formatTime(colorDateSelectTimes[color]) }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 所有颜色范围模式预览 (保留原代码) -->\n        <section class=\"mb-12\">\n            <h2 class=\"mb-4 text-xl font-semibold\">范围选择模式 - 全部颜色</h2>\n\n            <div v-for=\"(colors, groupName) in colorGroups\" :key=\"`range-${groupName}`\" class=\"mb-8\">\n                <h3 class=\"mb-4 border-b pb-2 text-lg font-semibold\">\n                    {{ colorGroupNames[groupName] }} - 范围选择\n                </h3>\n\n                <div class=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n                    <div v-for=\"color in colors\" :key=\"`range-${color}`\"\n                        class=\"rounded-xl border border-gray-100 bg-white p-3 shadow-md dark:border-gray-700 dark:bg-gray-800\">\n                        <div class=\"mb-2 flex items-center justify-between\">\n                            <h4 class=\"text-base font-medium\" :class=\"`text-${color}-600 dark:text-${color}-400`\">\n                                {{ color }}\n                            </h4>\n                        </div>\n\n                        <Calendars v-model:startDate=\"colorRangeMap[color].start\"\n                            v-model:endDate=\"colorRangeMap[color].end\" mode=\"range\" :color=\"color\"\n                            :key=\"`range-${color}`\" @rangeSelect=\"\n                                (start: any, end: any) =>\n                                    handleColorRangeSelect(color, start, end)\n                            \" />\n                        <div v-if=\"colorRangeMap[color].start || colorRangeMap[color].end\"\n                            class=\"mt-2 rounded bg-gray-50 p-1.5 text-xs dark:bg-gray-700\">\n                            <div class=\"font-medium\">\n                                范围：{{ colorRangeMap[color].start || \"未选择\" }} 至\n                                {{ colorRangeMap[color].end || \"未选择\" }}\n                            </div>\n                            <div v-if=\"colorRangeMap[color].start && colorRangeMap[color].end\"\n                                class=\"text-gray-500 dark:text-gray-400\">\n                                共计\n                                {{\n                                    getDaysBetween(\n                                        colorRangeMap[color].start,\n                                        colorRangeMap[color].end,\n                                    )\n                                }}\n                                天\n                            </div>\n                            <div v-if=\"colorRangeSelectTimes[color]\"\n                                class=\"mt-0.5 text-xs text-gray-500 dark:text-gray-400\">\n                                选择时间：{{ formatTime(colorRangeSelectTimes[color]) }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- API 文档部分 (保留原代码) -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n                组件API\n            </h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">\n                    属性 (Props)\n                </h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">\n                                    属性名\n                                </th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">\n                                    类型\n                                </th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">\n                                    默认值\n                                </th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">\n                                    描述\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    mode\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    'single' | 'range'\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    'single'\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    选择模式：单选或范围选择\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    color\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    ColorType\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    'blue'\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    日历主题颜色\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    selectedDate\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    string\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    undefined\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    单选模式下选中的日期\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    startDate/endDate\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    string\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    undefined\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    范围选择的开始和结束日期\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    dateFormat\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    string\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    'YYYY-MM-DD'\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    日期格式\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    locale\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    'en' | 'zh-cn'\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'en'</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    日历语言\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    disableOutsideDays\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    boolean\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    是否禁用非当前月份的日期\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    initialDate\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    string\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    当前日期\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    初始显示的日期\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">\n                    事件 (Events)\n                </h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">\n                                    事件名\n                                </th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">\n                                    回调参数\n                                </th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">\n                                    描述\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    dateSelect\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    (date: string)\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    单选模式下选择日期时触发\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    rangeSelect\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    (start: string, end: string)\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    范围模式下完成选择时触发\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    update:selectedDate\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    (date: string)\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    单选模式下更新选中日期时触发\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">\n                                    update:startDate/endDate\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    (date: string)\n                                </td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">\n                                    范围模式下更新起止日期时触发\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">\n                    使用示例\n                </h3>\n                <div class=\"mb-6 space-y-4\">\n                    <h4 class=\"text-base font-medium text-gray-800 dark:text-gray-200\">\n                        单选模式\n                    </h4>\n                    <pre class=\"overflow-x-auto rounded-lg bg-gray-50 p-4 text-sm dark:bg-gray-800/50\">\n  <code>&lt;template&gt;\n    &lt;Calendars\n      v-model:selectedDate=\"date\"\n      mode=\"single\"\n      color=\"blue\"\n      locale=\"zh-cn\"\n      @dateSelect=\"handleDateSelect\"\n    /&gt;\n  &lt;/template&gt;\n  \n  &lt;script setup lang=\"ts\"&gt;\n  import { ref } from 'vue';\n  \n  const date = ref('');\n  const handleDateSelect = (date: string) => {\n    console.log('选择的日期:', date);\n  };\n  &lt;/script&gt;</code></pre>\n\n                    <h4 class=\"text-base font-medium text-gray-800 dark:text-gray-200\">\n                        范围选择模式\n                    </h4>\n                    <pre class=\"overflow-x-auto rounded-lg bg-gray-50 p-4 text-sm dark:bg-gray-800/50\">\n  <code>&lt;template&gt;\n    &lt;Calendars\n      v-model:startDate=\"startDate\"\n      v-model:endDate=\"endDate\"\n      mode=\"range\"\n      color=\"indigo\"\n      locale=\"zh-cn\"\n      @rangeSelect=\"handleRangeSelect\"\n    /&gt;\n  &lt;/template&gt;\n  \n  &lt;script setup lang=\"ts\"&gt;\n  import { ref } from 'vue';\n  \n  const startDate = ref('');\n  const endDate = ref('');\n  const handleRangeSelect = (start: string, end: string) => {\n    console.log('日期范围:', { start, end });\n  };\n  &lt;/script&gt;</code></pre>\n                </div>\n            </div>\n        </section>\n\n        <!-- 总结 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n                小结与最佳实践\n            </h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <div class=\"space-y-4\">\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        Calendars 组件是一个功能丰富的日历选择器，支持单选和范围选择，并提供多种颜色主题和语言选项。下面是一些使用建议：\n                    </p>\n\n                    <ul class=\"ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300\">\n                        <li>根据业务需求选择合适的选择模式（单选或范围选择）</li>\n                        <li>配合项目设计风格选择合适的颜色主题</li>\n                        <li>针对国际化需求设置适当的语言 (locale) 和日期格式 (dateFormat)</li>\n                        <li>利用 initialDate 属性设置默认显示的月份，提高用户体验</li>\n                        <li>在复杂表单中，可以利用事件回调进行表单验证或联动操作</li>\n                    </ul>\n\n                    <div\n                        class=\"rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20\">\n                        <h4 class=\"mb-2 flex items-center text-blue-800 dark:text-blue-300\">\n                            <span class=\"icon-[material-symbols--info-outline-rounded] mr-2 h-5 w-5\"></span>\n                            提示\n                        </h4>\n                        <p class=\"text-sm text-blue-700 dark:text-blue-300\">\n                            Calendars 组件已完全适配暗色模式，无需额外配置。通过设置 HTML 根元素上的\n                            <code class=\"rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60\">dark</code>\n                            类即可启用暗色主题。\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed } from 'vue';\nimport dayjs from 'dayjs';\nimport Calendars from './Calendars';\nimport CodePreview from '../../components/CodePreview';\nimport { ColorType, colorGroups } from './config';\nimport { getColorButtonClass } from './utils';\nimport {\n    basicUsageCode,\n    rangeSelectCode,\n    customColorCode,\n    localizationCode,\n    dateFormatCode,\n    eventsCode\n} from './code';\n\n// 颜色组名称映射\nconst colorGroupNames = {\n    gray: '灰色系',\n    warm: '暖色系',\n    green: '绿色系',\n    blue: '蓝色系',\n    purple: '紫粉色系',\n};\n\n// 当前选择的颜色\nconst selectedColor = ref<ColorType>('blue');\n\n// Add this function to debounce color changes\nconst debouncedColorChange = (() => {\n    let timeout: ReturnType<typeof setTimeout> | null = null;\n    return (color: ColorType) => {\n        if (timeout) clearTimeout(timeout);\n        isColorChanging.value = true;\n        timeout = setTimeout(() => {\n            selectedColor.value = color;\n            setTimeout(() => {\n                isColorChanging.value = false;\n            }, 50);\n        }, 100);\n    };\n})();\n\n// Add this reactive state to track color change transitions\nconst isColorChanging = ref(false);\n\n// Replace the setSelectedColor function\nconst setSelectedColor = (color: ColorType) => {\n    if (color === selectedColor.value) return;\n    debouncedColorChange(color);\n};\n\n// Create cached computed colors for frequently used theme values\nconst currentColorClasses = computed(() => ({\n    text: `text-${selectedColor.value}-500 dark:text-${selectedColor.value}-400`,\n    bg: `bg-${selectedColor.value}-500 dark:bg-${selectedColor.value}-600`,\n    border: `border-${selectedColor.value}-500 dark:border-${selectedColor.value}-400`,\n}));\n\n// 单选日期\nconst dynamicSelectedDate = ref('');\nconst handleDynamicDateSelect = (date: string) => {\n    dynamicSelectedDate.value = date;\n};\n\n// 日期范围选择\nconst dynamicStartDate = ref('');\nconst dynamicEndDate = ref('');\nconst lastRangeSelectTime = ref('');\nconst handleDynamicRangeSelect = (start: string, end: string) => {\n    lastRangeSelectTime.value = new Date().toLocaleTimeString();\n};\n\n// 格式化日期\nconst formatSelectedDate = (date: string) => {\n    if (!date) return '';\n    return dayjs(date).format('YYYY年MM月DD日 dddd');\n};\n\n// 格式化时间\nconst formatTime = (time: string) => {\n    return time;\n};\n\n// 计算两个日期之间的天数\nconst getDaysBetween = (start: string, end: string) => {\n    if (!start || !end) return 0;\n    return dayjs(end).diff(dayjs(start), 'day') + 1;\n};\n\n// 为每个颜色保存选择的日期\nconst colorDateMap = reactive<Record<string, string>>({});\nconst colorDateSelectTimes = reactive<Record<string, string>>({});\n\n// 处理颜色日期选择\nconst handleColorDateSelect = (color: string, date: string) => {\n    colorDateMap[color] = date;\n    colorDateSelectTimes[color] = new Date().toLocaleTimeString();\n};\n\n// 为每个颜色保存日期范围\nconst colorRangeMap = reactive<Record<string, { start: string; end: string }>>({});\nconst colorRangeSelectTimes = reactive<Record<string, string>>({});\n\n// 初始化所有颜色的日期范围映射\nObject.values(colorGroups).forEach((group) => {\n    group.forEach((color) => {\n        colorRangeMap[color] = { start: '', end: '' };\n    });\n});\n\n// 处理颜色范围选择\nconst handleColorRangeSelect = (color: string, start: string, end: string) => {\n    colorRangeMap[color].start = start;\n    colorRangeMap[color].end = end;\n    colorRangeSelectTimes[color] = new Date().toLocaleTimeString();\n};\n\n// 新增: CodePreview 相关的响应式变量\nconst colorPreviewDate = ref('');\nconst localeEnDate = ref('');\nconst localeZhDate = ref('');\nconst formatDateValue = ref('');\nconst eventDemoDate = ref('');\nconst eventLog = ref('');\n\n// 事件处理函数\nconst handleEventDemo = (date: string) => {\n    eventLog.value = `选择了日期: ${date} (${new Date().toLocaleTimeString()})`;\n};\n\nconst handleFormatDateSelect = (date: string) => {\n    console.log('格式化后的日期:', date);\n};\n</script>\n"],"names":["colorButtonClassMap","colorGroups","calendarUtils","locale","date","dayjs","format","currentDate","selectedDate","days","firstDay","lastDay","startDay","endDay","currentDay","rangeStart","rangeEnd","day","getColorButtonClass","color","defineComponent","name","props","initialDate","type","String","default","dateFormat","disableOutsideDays","Boolean","mode","startDate","endDate","emits","setup","emit","ref","weekDays","computed","getWeekDays","currentMonthLabel","getMonthLabel","value","calendarDays","getCalendarDaysWithRange","getCalendarDays","themeClasses","primary","lightBg","todayText","focus","hover","selected","handleDateClick","isCurrentMonth","formatDate","isBefore","previousMonth","subtract","nextMonth","add","onMounted","_createVNode","TransitionGroup","_","map","onClick","isSelected","isInRange","isToday","isRangeStart","isRangeEnd","getDayNumber","basicUsageCode","rangeSelectCode","customColorCode","localizationCode","dateFormatCode","eventsCode","colorGroupNames","selectedColor","debouncedColorChange","timeout","isColorChanging","setSelectedColor","currentColorClasses","dynamicSelectedDate","handleDynamicDateSelect","dynamicStartDate","dynamicEndDate","lastRangeSelectTime","handleDynamicRangeSelect","start","end","formatSelectedDate","formatTime","time","getDaysBetween","colorDateMap","reactive","colorDateSelectTimes","handleColorDateSelect","colorRangeMap","colorRangeSelectTimes","group","handleColorRangeSelect","colorPreviewDate","localeEnDate","localeZhDate","formatDateValue","eventDemoDate","eventLog","handleEventDemo","handleFormatDateSelect"],"mappings":"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"}