{"version":3,"file":"index-CKhARtO9.js","sources":["../../src/libs/Tooltip/Tooltip.tsx","../../src/libs/Tooltip/View.vue"],"sourcesContent":["import { computed, defineComponent, nextTick, onBeforeUnmount, onMounted, ref, type PropType, Teleport, Transition } from 'vue'\n\nexport type TooltipPosition = 'top' | 'bottom'\n\nexport const Tooltip = defineComponent({\n  name: 'Tooltip',\n  props: {\n    content: {\n      type: String,\n      default: ''\n    },\n    position: {\n      type: String as PropType<TooltipPosition>,\n      default: 'top'\n    },\n    offset: {\n      type: Number,\n      default: 10\n    }\n  },\n  setup(props, { slots }) {\n    const tooltipContainer = ref<HTMLElement | null>(null)\n    const tooltip = ref<HTMLElement | null>(null)\n    const isVisible = ref(false)\n    const positionStyle = ref<{ top?: string; left?: string; position?: string; zIndex?: string }>({})\n    const currentPosition = ref<TooltipPosition>(props.position)\n\n    // 使用固定类名而非动态类名，确保 Tailwind 可以识别\n    const tooltipClasses = computed(() => [\n      'absolute px-5 py-3 text-center text-gray-600 bg-white rounded-lg shadow-lg dark:text-white dark:bg-gray-800 dark:shadow-none shadow-gray-200',\n      'transition-all duration-200 ease-out z-50',\n      'min-w-[12rem] max-w-xs',\n      `tooltip-${currentPosition.value}`\n    ])\n\n    // 箭头样式单独处理，避免动态类问题\n    const arrowClasses = computed(() => [\n      `tooltip-arrow-${currentPosition.value}`\n    ])\n\n    // 使用计算属性处理定位样式\n    const tooltipStyles = computed(() => ({\n      position: 'fixed' as const,\n      top: positionStyle.value.top,\n      left: positionStyle.value.left,\n      zIndex: 9999,\n    }))\n\n    const calculatePosition = () => {\n      if (!tooltipContainer.value || !tooltip.value) return\n\n      // 重置当前位置为初始设置的位置\n      currentPosition.value = props.position\n\n      // 获取触发元素的位置信息\n      const triggerRect = tooltipContainer.value.getBoundingClientRect()\n      const tooltipRect = tooltip.value.getBoundingClientRect()\n\n      // 视口尺寸\n      const viewportWidth = document.documentElement.clientWidth\n      const viewportHeight = document.documentElement.clientHeight\n\n      // 安全边距，避免贴边\n      const safeMargin = 8\n\n      let top = 0\n      let left = 0\n\n      // 基础位置计算 - 水平居中对齐\n      left = triggerRect.left + (triggerRect.width - tooltipRect.width) / 2\n\n      // 根据指定位置确定垂直方向的位置\n      if (currentPosition.value === 'top') {\n        // 触发元素上方\n        top = triggerRect.top - tooltipRect.height - props.offset\n      } else {\n        // 触发元素下方\n        top = triggerRect.bottom + props.offset\n      }\n\n      // 智能方向切换 - 如果指定位置放不下，则切换到反方向\n      if (top < safeMargin && currentPosition.value === 'top') {\n        // 上方空间不足，切换到下方\n        currentPosition.value = 'bottom'\n        top = triggerRect.bottom + props.offset\n      } else if (top + tooltipRect.height > viewportHeight - safeMargin && currentPosition.value === 'bottom') {\n        // 下方空间不足，切换到上方\n        currentPosition.value = 'top'\n        top = triggerRect.top - tooltipRect.height - props.offset\n      }\n\n      // 横向边界调整 - 确保不超出视口\n      if (left < safeMargin) {\n        // 左边界调整，确保至少留有安全边距\n        left = safeMargin\n      } else if (left + tooltipRect.width > viewportWidth - safeMargin) {\n        // 右边界调整，确保不超出右边界\n        left = viewportWidth - tooltipRect.width - safeMargin\n      }\n\n      // 极端情况处理 - 如果上下都放不下\n      if (top < safeMargin && top + tooltipRect.height > viewportHeight - safeMargin) {\n        // 如果显示区域太小，优先确保内容最大程度可见\n        if (currentPosition.value === 'top') {\n          top = safeMargin\n        } else {\n          top = viewportHeight - tooltipRect.height - safeMargin\n        }\n      } else {\n        // 正常边界调整\n        if (top < safeMargin) {\n          top = safeMargin\n        }\n        if (top + tooltipRect.height > viewportHeight - safeMargin) {\n          top = viewportHeight - tooltipRect.height - safeMargin\n        }\n      }\n\n      // 设置最终位置，使用 fixed 定位以处理滚动\n      positionStyle.value = {\n        position: 'fixed',\n        top: `${top}px`,\n        left: `${left}px`,\n        zIndex: '9999',\n      }\n    }\n\n    // 显示提示\n    const showTooltip = () => {\n      isVisible.value = true\n      nextTick(() => {\n        calculatePosition()\n        // 首次计算后，再执行一次计算以确保位置准确\n        nextTick(() => {\n          calculatePosition()\n        })\n      })\n    }\n\n    // 隐藏提示\n    const hideTooltip = () => {\n      isVisible.value = false\n    }\n\n    // 监听各种可能导致位置变化的事件\n    onMounted(() => {\n      window.addEventListener('resize', calculatePosition)\n      window.addEventListener('scroll', calculatePosition, { passive: true })\n    })\n\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', calculatePosition)\n      window.removeEventListener('scroll', calculatePosition)\n    })\n\n    return () => (\n      <div class=\"relative inline-block\" ref={tooltipContainer}>\n        <div\n          onMouseenter={showTooltip}\n          onMouseleave={hideTooltip}\n          class=\"w-full\"\n        >\n          {slots.trigger ? (\n            slots.trigger()\n          ) : (\n            <button\n              type=\"button\"\n              class=\"text-gray-600 transition-colors duration-200 focus:outline-none dark:text-gray-300 dark:hover:text-blue-400 hover:text-blue-500\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"2\"\n                stroke=\"currentColor\"\n                class=\"w-6 h-6\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  d=\"M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z\"\n                />\n              </svg>\n            </button>\n          )}\n        </div>\n\n        <Teleport to=\"body\">\n          <Transition\n            name=\"tooltip-fade\"\n            enterActiveClass=\"transition ease-out duration-200\"\n            enterFromClass=\"opacity-0 scale-95\"\n            enterToClass=\"opacity-100 scale-100\"\n            leaveActiveClass=\"transition ease-in duration-150\"\n            leaveFromClass=\"opacity-100 scale-100\"\n            leaveToClass=\"opacity-0 scale-95\"\n          >\n            {isVisible.value && (\n              <div\n                ref={tooltip}\n                class={tooltipClasses.value}\n                style={tooltipStyles.value}\n              >\n                {slots.content ? (\n                  slots.content()\n                ) : (\n                  <p class=\"text-sm\">{props.content}</p>\n                )}\n                {/* 添加箭头元素 */}\n                <span class={arrowClasses.value}></span>\n              </div>\n            )}\n          </Transition>\n        </Teleport>\n\n        <style scoped>{`\n          /* 箭头样式 - 使用固定类名 */\n          .tooltip-top::after,\n          .tooltip-arrow-top {\n            content: \"\";\n            position: absolute;\n            bottom: -8px;\n            left: 50%;\n            margin-left: -8px;\n            border-width: 8px 8px 0;\n            border-style: solid;\n            border-color: #ffffff transparent transparent transparent;\n          }\n          \n          .tooltip-bottom::after,\n          .tooltip-arrow-bottom {\n            content: \"\";\n            position: absolute;\n            top: -8px;\n            left: 50%;\n            margin-left: -8px;\n            border-width: 0 8px 8px;\n            border-style: solid;\n            border-color: transparent transparent #ffffff transparent;\n          }\n          \n          /* 暗黑模式箭头颜色 - 使用全局选择器适配 Tailwind dark 模式 */\n          :global(.dark) .tooltip-top::after,\n          :global(.dark) .tooltip-arrow-top {\n            border-color: #1f2937 transparent transparent transparent;\n          }\n          \n          :global(.dark) .tooltip-bottom::after,\n          :global(.dark) .tooltip-arrow-bottom {\n            border-color: transparent transparent #1f2937 transparent;\n          }\n        `}</style>\n      </div>\n    )\n  }\n})\n\nexport default Tooltip\n","<template>\n    <div class=\"space-y-12 p-8\">\n        <h1 class=\"mb-8 text-3xl font-bold\">Tooltip 文字提示组件</h1>\n        <p class=\"mb-8 text-lg text-gray-600 dark:text-gray-300\">\n            Tooltip\n            组件用于在用户悬停在元素上时显示提示信息，提高用户体验和界面可用性。支持自定义内容、多种显示位置和暗黑模式。\n        </p>\n\n        <!-- 基础用法 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">基础用法</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"flex items-center gap-6\">\n                    <Tooltip content=\"这是一个简单的提示\">\n                        <template #trigger>\n                            <Button>悬停查看提示</Button>\n                        </template>\n                    </Tooltip>\n\n                    <Tooltip content=\"默认使用问号图标作为触发器\">\n                        <!-- 使用默认问号图标 -->\n                    </Tooltip>\n\n                    <Tooltip content=\"带有标题的提示\" title=\"温馨提示\">\n                        <template #trigger>\n                            <Button type=\"success\">带标题的提示</Button>\n                        </template>\n                    </Tooltip>\n                </div>\n                <div class=\"mt-4 rounded bg-gray-100 p-3 dark:bg-gray-700\">\n                    <pre class=\"text-sm\">{{ codeBasic }}</pre>\n                </div>\n            </div>\n        </section>\n\n        <!-- 不同方向的提示 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">提示方向</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"flex flex-wrap justify-center gap-4\">\n                    <Tooltip content=\"上方提示\" position=\"top\">\n                        <template #trigger>\n                            <Button type=\"secondary\">上方显示</Button>\n                        </template>\n                    </Tooltip>\n\n                    <Tooltip content=\"下方提示\" position=\"bottom\">\n                        <template #trigger>\n                            <Button type=\"secondary\">下方显示</Button>\n                        </template>\n                    </Tooltip>\n\n                    <div class=\"mt-2 w-full text-sm text-gray-500 dark:text-gray-400\">\n                        <p>注意：当空间不足时，Tooltip 会自动切换到合适的方向</p>\n                    </div>\n                </div>\n                <div class=\"mt-4 rounded bg-gray-100 p-3 dark:bg-gray-700\">\n                    <pre class=\"text-sm\">{{ codePositions }}</pre>\n                </div>\n            </div>\n        </section>\n\n        <!-- 自定义内容 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">自定义内容</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"flex items-center gap-4\">\n                    <Tooltip position=\"bottom\">\n                        <template #trigger>\n                            <Button type=\"success\">产品详情</Button>\n                        </template>\n                        <template #content>\n                            <div class=\"flex min-w-60 flex-col gap-2\">\n                                <h3 class=\"border-b pb-2 font-bold\">高级智能手表</h3>\n                                <p>全新一代智能手表，支持健康监测和运动追踪</p>\n                                <div class=\"flex items-center gap-2\">\n                                    <span>⭐️</span>\n                                    <span>4.8 评分 (128条评价)</span>\n                                </div>\n                                <div class=\"flex items-center gap-2\">\n                                    <span>📅</span>\n                                    <span>2024-05-10 发布</span>\n                                </div>\n                                <div class=\"items中心 flex gap-2 font-medium text-green-600\">\n                                    <span>💰</span>\n                                    <span>¥1,299</span>\n                                </div>\n                            </div>\n                        </template>\n                    </Tooltip>\n\n                    <Tooltip position=\"bottom\">\n                        <template #trigger>\n                            <Button type=\"warning\">用户信息</Button>\n                        </template>\n                        <template #content>\n                            <div class=\"items中心 flex gap-3\">\n                                <div\n                                    class=\"items中心 flex h-10 w-10 justify-center rounded-full bg-blue-500 font-bold text-white\">\n                                    JD\n                                </div>\n                                <div>\n                                    <div class=\"font-medium\">John Doe</div>\n                                    <div class=\"text-xs text-gray-500 dark:text-gray-400\">\n                                        产品设计师\n                                    </div>\n                                </div>\n                            </div>\n                        </template>\n                    </Tooltip>\n                </div>\n                <div class=\"mt-4 rounded bg-gray-100 p-3 dark:bg-gray-700\">\n                    <pre class=\"text-sm\">{{ codeCustomContent }}</pre>\n                </div>\n            </div>\n        </section>\n\n        <!-- 自定义触发器 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">自定义触发器</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"items中心 flex flex-wrap gap-6\">\n                    <Tooltip content=\"图标触发的提示\">\n                        <template #trigger>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\n                                stroke=\"currentColor\" class=\"h-6 w-6 cursor-pointer text-blue-500 hover:text-blue-600\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                                    d=\"M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z\" />\n                            </svg>\n                        </template>\n                    </Tooltip>\n\n                    <Tooltip content=\"文本链接提示\">\n                        <template #trigger>\n                            <span class=\"cursor-pointer text-blue-500 underline hover:text-blue-600\">\n                                帮助文档\n                            </span>\n                        </template>\n                    </Tooltip>\n\n                    <Tooltip content=\"图片作为触发器\">\n                        <template #trigger>\n                            <div\n                                class=\"h-10 w-10 cursor-pointer overflow-hidden rounded transition-opacity hover:opacity-80\">\n                                <img src=\"https://placekitten.com/100/100\" alt=\"猫咪图片\"\n                                    class=\"h-full w-full object-cover\" />\n                            </div>\n                        </template>\n                    </Tooltip>\n\n                    <Tooltip content=\"自定义按钮作为触发器\">\n                        <template #trigger>\n                            <button\n                                class=\"rounded bg-purple-500 px-3 py-1 text-white transition-colors hover:bg-purple-600\">\n                                自定义按钮\n                            </button>\n                        </template>\n                    </Tooltip>\n\n                    <Tooltip content=\"默认触发器\">\n                        <!-- 使用默认的问号图标 -->\n                    </Tooltip>\n                </div>\n                <div class=\"mt-4 rounded bg-gray-100 p-3 dark:bg-gray-700\">\n                    <pre class=\"text-sm\">{{ codeCustomTrigger }}</pre>\n                </div>\n            </div>\n        </section>\n\n        <!-- 不同偏移距离和触发方式 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">偏移距离和触发方式</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"items中心 mb-6 flex flex-wrap gap-4\">\n                    <h3 class=\"mb-2 w-full text-lg font-semibold\">偏移距离</h3>\n                    <Tooltip content=\"默认偏移 (10px)\" position=\"top\">\n                        <template #trigger>\n                            <Button type=\"info\">默认偏移</Button>\n                        </template>\n                    </Tooltip>\n\n                    <Tooltip content=\"较大偏移 (20px)\" position=\"top\" :offset=\"20\">\n                        <template #trigger>\n                            <Button type=\"info\">较大偏移 (20px)</Button>\n                        </template>\n                    </Tooltip>\n\n                    <Tooltip content=\"更大偏移 (30px)\" position=\"top\" :offset=\"30\">\n                        <template #trigger>\n                            <Button type=\"info\">更大偏移 (30px)</Button>\n                        </template>\n                    </Tooltip>\n                </div>\n\n                <div class=\"mb-4\">\n                    <h3 class=\"mb-4 w-full text-lg font-semibold\">触发方式</h3>\n                    <div class=\"flex flex-wrap gap-4\">\n                        <Tooltip content=\"鼠标悬停时显示（默认）\" trigger=\"hover\">\n                            <template #trigger>\n                                <Button type=\"primary\">悬停触发</Button>\n                            </template>\n                        </Tooltip>\n\n                        <Tooltip content=\"点击时显示\" trigger=\"click\">\n                            <template #trigger>\n                                <Button type=\"danger\">点击触发</Button>\n                            </template>\n                        </Tooltip>\n\n                        <Tooltip content=\"聚焦时显示\" trigger=\"focus\">\n                            <template #trigger>\n                                <input type=\"text\" placeholder=\"聚焦时显示提示\"\n                                    class=\"rounded-md border px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700\" />\n                            </template>\n                        </Tooltip>\n                    </div>\n                </div>\n                <div class=\"mt-4 rounded bg-gray-100 p-3 dark:bg-gray-700\">\n                    <pre class=\"text-sm\">{{ codeOffset }}</pre>\n                </div>\n            </div>\n        </section>\n\n        <!-- 智能位置调整 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">智能位置调整</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"items中心 mb-4 flex\">\n                    <p class=\"text-sm text-gray-600 dark:text-gray-300\">\n                        当屏幕空间不足时，Tooltip\n                        会智能调整显示位置，确保内容始终可见。尝试将窗口滚动到边缘，或调整浏览器大小，观察提示框的位置变化。\n                    </p>\n                </div>\n                <div class=\"items开始 flex h-48\">\n                    <div class=\"mt-2\">\n                        <Tooltip content=\"我在顶部时会自动避免被截断\" position=\"top\">\n                            <template #trigger>\n                                <Button type=\"warning\">靠近顶部的元素</Button>\n                            </template>\n                        </Tooltip>\n                    </div>\n                </div>\n                <div class=\"flex justify-end\">\n                    <Tooltip content=\"我会避免超出右侧边界\" position=\"top\">\n                        <template #trigger>\n                            <Button type=\"warning\">靠近右侧的元素</Button>\n                        </template>\n                    </Tooltip>\n                </div>\n                <div class=\"mt-4 rounded bg-gray-100 p-3 dark:bg-gray-700\">\n                    <pre class=\"text-sm\">{{ codeSmartPosition }}</pre>\n                </div>\n            </div>\n        </section>\n\n        <!-- 复杂场景应用 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">复杂场景应用</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"flex flex-col gap-4\">\n                    <!-- 表单中的帮助提示 -->\n                    <div class=\"items中心 flex gap-2\">\n                        <label for=\"username\" class=\"min-w-32 text-gray-700 dark:text-gray-300\">用户名</label>\n                        <input id=\"username\" type=\"text\"\n                            class=\"rounded border px-3 py-2 dark:border-gray-600 dark:bg-gray-700\"\n                            placeholder=\"请输入用户名\" />\n                        <Tooltip content=\"用户名长度需要在3-20个字符之间，只能包含字母、数字和下划线\">\n                            <template #trigger>\n                                <span class=\"cursor-pointer text-gray-500\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\"\n                                        viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                            d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                    </svg>\n                                </span>\n                            </template>\n                        </Tooltip>\n                    </div>\n\n                    <!-- 表格中的数据说明 -->\n                    <div class=\"mt-4\">\n                        <table class=\"min-w-full border-collapse border border-gray-300 dark:border-gray-700\">\n                            <thead>\n                                <tr class=\"bg-gray-100 dark:bg-gray-700\">\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">\n                                        产品名称\n                                    </th>\n                                    <th class=\"text左 border border-gray-300 p-2 dark:border-gray-600\">\n                                        <div class=\"items中心 flex gap-1\">\n                                            <span>库存状态</span>\n                                            <Tooltip content=\"绿色表示库存充足，黄色表示库存较低，红色表示缺货\">\n                                                <template #trigger>\n                                                    <span class=\"cursor-pointer text-gray-500\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\"\n                                                            fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                                                                stroke-width=\"2\"\n                                                                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                                        </svg>\n                                                    </span>\n                                                </template>\n                                            </Tooltip>\n                                        </div>\n                                    </th>\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">\n                                        操作\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        智能手表 Pro\n                                    </td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        <span class=\"inline-block h-3 w-3 rounded-full bg-green-500\"></span>\n                                    </td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        <Tooltip content=\"点击查看详细库存信息和历史变动\">\n                                            <template #trigger>\n                                                <Button type=\"secondary\" size=\"sm\">查看详情</Button>\n                                            </template>\n                                        </Tooltip>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        无线耳机\n                                    </td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        <span class=\"bg黄色-500 inline-block h-3 w-3 rounded-full\"></span>\n                                    </td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        <Tooltip content=\"点击查看详细库存信息和历史变动\">\n                                            <template #trigger>\n                                                <Button type=\"secondary\" size=\"sm\">查看详情</Button>\n                                            </template>\n                                        </Tooltip>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div class=\"mt-4 rounded bg-gray-100 p-3 dark:bg-gray-700\">\n                    <pre class=\"text-sm\">{{ codeComplexScenario }}</pre>\n                </div>\n            </div>\n        </section>\n\n        <!-- 深色模式切换 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">深色模式切换</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"items中心 flex gap-4\">\n                    <Button @click=\"toggleDarkMode\" type=\"info\" class=\"items中心 flex gap-2\">\n                        <svg v-if=\"isDarkMode\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\"\n                            viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                        </svg>\n                        <svg v-else xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n                        </svg>\n                        切换{{ isDarkMode ? \"浅色\" : \"深色\" }}模式\n                    </Button>\n                    <Tooltip content=\"Tooltip 会自动适应当前主题模式，无需额外配置\">\n                        <template #trigger>\n                            <span class=\"cursor-pointer text-blue-500 hover:text-blue-600\">\n                                查看效果\n                            </span>\n                        </template>\n                    </Tooltip>\n                </div>\n                <div class=\"mt-6 rounded border bg-white p-4 dark:border-gray-700 dark:bg-gray-900\">\n                    <p class=\"mb-4 text-sm text-gray-600 dark:text-gray-300\">\n                        Tooltip\n                        组件会自动检测并适应当前的主题模式，当网站切换到深色模式时，提示框会相应地调整颜色和样式。\n                    </p>\n\n                    <div class=\"flex gap-4\">\n                        <Tooltip content=\"深色模式下我会更换颜色\">\n                            <template #trigger>\n                                <Button>查看深色模式适配</Button>\n                            </template>\n                        </Tooltip>\n\n                        <Tooltip position=\"bottom\">\n                            <template #trigger>\n                                <Button type=\"secondary\">自定义内容示例</Button>\n                            </template>\n                            <template #content>\n                                <div class=\"flex flex-col gap-2\">\n                                    <h3 class=\"font-bold\">深色模式支持</h3>\n                                    <p>此提示框在深色模式下会自动调整样式</p>\n                                    <div class=\"rounded bg-gray-100 p-2 dark:bg-gray-700\">\n                                        <code class=\"text-xs\">自动适配主题</code>\n                                    </div>\n                                </div>\n                            </template>\n                        </Tooltip>\n                    </div>\n                </div>\n                <div class=\"mt-4 rounded bg-gray-100 p-3 dark:bg-gray-700\">\n                    <pre class=\"text-sm\">{{ codeDarkMode }}</pre>\n                </div>\n            </div>\n        </section>\n\n        <!-- API 文档 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">API 文档</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"space-y-6\">\n                    <!-- 属性 Props -->\n                    <div>\n                        <h3 class=\"mb-3 text-lg font-semibold\">属性 Props</h3>\n                        <table class=\"min-w-full border-collapse border border-gray-300 dark:border-gray-700\">\n                            <thead>\n                                <tr class=\"bg-gray-100 dark:bg-gray-700\">\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">属性名</th>\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">类型</th>\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">默认值</th>\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">说明</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">content</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">string</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">''</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">提示文本内容</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">position</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        'top' | 'right' | 'bottom' | 'left'\n                                    </td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">'top'</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">提示框显示位置</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">offset</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">number</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">10</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        提示框与触发元素的偏移距离（像素）\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">title</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">string</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">undefined</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">提示框标题（可选）</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">trigger</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        'hover' | 'click' | 'focus'\n                                    </td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">'hover'</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">触发提示显示的方式</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <!-- 插槽 Slots -->\n                    <div>\n                        <h3 class=\"mb-3 text-lg font-semibold\">插槽 Slots</h3>\n                        <table class=\"min-w-full border-collapse border border-gray-300 dark:border-gray-700\">\n                            <thead>\n                                <tr class=\"bg-gray-100 dark:bg-gray-700\">\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">插槽名</th>\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">说明</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">trigger</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        触发提示的元素，默认为问号图标按钮\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">content</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">\n                                        提示框内容，默认显示 content 属性设置的文本\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <!-- 事件 Events -->\n                    <div>\n                        <h3 class=\"mb-3 text-lg font-semibold\">事件 Events</h3>\n                        <table class=\"min-w-full border-collapse border border-gray-300 dark:border-gray-700\">\n                            <thead>\n                                <tr class=\"bg-gray-100 dark:bg-gray-700\">\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">事件名</th>\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">参数</th>\n                                    <th class=\"border border-gray-300 p-2 text-left dark:border-gray-600\">说明</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">show</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">-</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">提示框显示时触发</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">hide</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">-</td>\n                                    <td class=\"border border-gray-300 p-2 dark:border-gray-600\">提示框隐藏时触发</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 小结与最佳实践 -->\n        <section>\n            <h2 class=\"mb-4 text-xl font-bold\">小结与最佳实践</h2>\n            <div class=\"rounded-lg bg-gray-50 p-6 dark:bg-gray-800\">\n                <div class=\"space-y-4\">\n                    <h3 class=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">适用场景</h3>\n                    <ul class=\"list-disc pl-5 text-gray-600 dark:text-gray-300 space-y-2\">\n                        <li>当需要为用户提供额外信息或帮助说明但又不想占用页面空间时</li>\n                        <li>为表单字段提供说明，如格式要求、字符限制等</li>\n                        <li>在复杂的数据表格中解释列头或数据含义</li>\n                        <li>为功能按钮提供辅助说明，提升用户理解</li>\n                        <li>在精简界面中隐藏不常用的详细信息</li>\n                    </ul>\n\n                    <h3 class=\"mt-6 text-lg font-semibold text-gray-800 dark:text-gray-200\">最佳实践</h3>\n                    <ul class=\"list-disc pl-5 text-gray-600 dark:text-gray-300 space-y-2\">\n                        <li>\n                            <strong>简洁明了</strong>：提示内容应简洁明了，避免冗长的文本。如需展示大量信息，考虑使用其他组件如弹窗或抽屉。\n                        </li>\n                        <li>\n                            <strong>位置选择</strong>：根据页面布局和可用空间选择合适的提示方向，一般上方和下方是最常用的方向。\n                        </li>\n                        <li>\n                            <strong>触发方式</strong>：对于帮助信息，通常使用悬停触发；对于需要保持显示的信息，可使用点击触发；对于表单输入辅助信息，使用聚焦触发更合适。\n                        </li>\n                        <li>\n                            <strong>避免滥用</strong>：不要在页面中过度使用 Tooltip，这会导致用户体验下降，只在真正需要额外解释的元素上使用。\n                        </li>\n                        <li>\n                            <strong>保持一致性</strong>：在整个应用中，对类似元素使用一致的 Tooltip 样式和触发方式，提高用户的可预测性。\n                        </li>\n                        <li>\n                            <strong>无障碍考虑</strong>：确保 Tooltip 可以通过键盘访问，并提供适当的 ARIA 属性以支持屏幕阅读器用户。\n                        </li>\n                    </ul>\n\n                    <div class=\"mt-6 rounded-lg bg-blue-50 p-4 dark:bg-blue-900/30\">\n                        <h4 class=\"font-medium text-blue-700 dark:text-blue-300\">提示</h4>\n                        <p class=\"mt-1 text-blue-600 dark:text-blue-200\">\n                            Tooltip 组件会自动检测边界，确保提示内容始终可见。在设计界面时，无需担心靠近窗口边缘的元素显示不完整问题。\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, defineComponent, h, computed, PropType } from \"vue\";\nimport Tooltip from \"./Tooltip\";\n\n// Local Button component definition\nconst Button = defineComponent({\n    props: {\n        type: {\n            type: String as PropType<\n                \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"info\" | \"danger\"\n            >,\n            default: \"primary\",\n            validator: (value: string) =>\n                [\n                    \"primary\",\n                    \"secondary\",\n                    \"success\",\n                    \"warning\",\n                    \"info\",\n                    \"danger\",\n                ].includes(value),\n        },\n        size: {\n            type: String as PropType<\"sm\" | \"md\" | \"lg\">,\n            default: \"md\",\n            validator: (value: string) => [\"sm\", \"md\", \"lg\"].includes(value),\n        },\n    },\n    setup(props, { slots }) {\n        const getButtonClasses = computed(() => {\n            const baseClasses =\n                \"px-4 py-2 rounded font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2\";\n            const sizeClasses = {\n                sm: \"px-2 py-1 text-sm\",\n                md: \"px-4 py-2\",\n                lg: \"px-6 py-3 text-lg\",\n            };\n            const typeClasses = {\n                primary: \"bg-blue-600 hover:bg-blue-700 text-white focus:ring-blue-500\",\n                secondary:\n                    \"bg-gray-600 hover:bg-gray-700 text-white focus:ring-gray-500\",\n                success:\n                    \"bg-green-600 hover:bg-green-700 text-white focus:ring-green-500\",\n                warning:\n                    \"bg-yellow-500 hover:bg-yellow-600 text-white focus:ring-yellow-500\",\n                info: \"bg-cyan-500 hover:bg-cyan-600 text-white focus:ring-cyan-500\",\n                danger: \"bg-red-600 hover:bg-red-700 text-white focus:ring-red-500\",\n            };\n\n            return `${baseClasses} ${sizeClasses[props.size]} ${typeClasses[props.type]}`;\n        });\n\n        return () =>\n            h(\"button\", { class: getButtonClasses.value }, slots.default?.());\n    },\n});\n\nconst isDarkMode = ref(false);\n\nconst toggleDarkMode = () => {\n    isDarkMode.value = !isDarkMode.value;\n    if (isDarkMode.value) {\n        document.documentElement.classList.add(\"dark\");\n    } else {\n        document.documentElement.classList.remove(\"dark\");\n    }\n};\n\n// 示例代码片段\nconst codeBasic = `<Tooltip content=\"这是一个简单的提示\">\n  <template #trigger>\n    <Button>悬停查看提示</Button>\n  </template>\n</Tooltip>\n\n<!-- 使用默认问号图标 -->\n<Tooltip content=\"默认使用问号图标作为触发器\">\n  <!-- 使用默认问号图标 -->\n</Tooltip>\n\n<!-- 带标题的提示 -->\n<Tooltip content=\"带有标题的提示\" title=\"温馨提示\">\n  <template #trigger>\n    <Button type=\"success\">带标题的提示</Button>\n  </template>\n</Tooltip>`;\n\nconst codePositions = `<Tooltip content=\"上方提示\" position=\"top\">\n  <template #trigger>\n    <Button type=\"secondary\">上方显示</Button>\n  </template>\n</Tooltip>\n\n<Tooltip content=\"右侧提示\" position=\"right\">\n  <template #trigger>\n    <Button type=\"secondary\">右侧显示</Button>\n  </template>\n</Tooltip>\n\n<Tooltip content=\"下方提示\" position=\"bottom\">\n  <template #trigger>\n    <Button type=\"secondary\">下方显示</Button>\n  </template>\n</Tooltip>\n\n<Tooltip content=\"左侧提示\" position=\"left\">\n  <template #trigger>\n    <Button type=\"secondary\">左侧显示</Button>\n  </template>\n</Tooltip>\n\n<!-- 当空间不足时，会自动切换方向 -->`;\n\nconst codeCustomContent = `<Tooltip position=\"bottom\">\n  <template #trigger>\n    <Button type=\"success\">产品详情</Button>\n  </template>\n  <template #content>\n    <div class=\"flex flex-col gap-2 min-w-60\">\n      <h3 class=\"font-bold border-b pb-2\">高级智能手表</h3>\n      <p>全新一代智能手表，支持健康监测和运动追踪</p>\n      <div class=\"flex items中心 gap-2\">\n        <span>⭐️</span>\n        <span>4.8 评分 (128条评价)</span>\n      </div>\n      <div class=\"flex items中心 gap-2\">\n        <span>📅</span>\n        <span>2024-05-10 发布</span>\n      </div>\n      <div class=\"flex items中心 gap-2 text-green-600 font-medium\">\n        <span>💰</span>\n        <span>¥1,299</span>\n      </div>\n    </div>\n  </template>\n</Tooltip>`;\n\n// 示例代码片段\nconst codeCustomTrigger = `<!-- 图标触发器 -->\n<Tooltip content=\"图标触发的提示\">\n  <template #trigger>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"1.5\"\n      stroke=\"currentColor\"\n      class=\"w-6 h-6 text-blue-500 hover:text-blue-600 cursor-pointer\"\n    >\n      <!-- 图标路径 -->\n    </svg>\n  </template>\n</Tooltip>\n\n<!-- 文本触发器 -->\n<Tooltip content=\"文本链接提示\">\n  <template #trigger>\n    <span class=\"text-blue-500 hover:text-blue-600 cursor-pointer underline\">\n      帮助文档\n    </span>\n  </template>\n</Tooltip>\n\n<!-- 图片触发器 -->\n<Tooltip content=\"图片作为触发器\">\n  <template #trigger>\n    <div class=\"w-10 h-10 rounded overflow-hidden cursor-pointer hover:opacity-80\">\n      <img src=\"...\" alt=\"触发图片\" class=\"w-full h-full object-cover\" />\n    </div>\n  </template>\n</Tooltip>\n\n<!-- 默认触发器 -->\n<Tooltip content=\"默认触发器\">\n  <!-- 使用默认的问号图标 -->\n</Tooltip>`;\n\n// 示例代码片段\nconst codeOffset = `<!-- 偏移距离 -->\n<Tooltip content=\"默认偏移 (10px)\" position=\"top\">\n  <template #trigger>\n    <Button type=\"info\">默认偏移</Button>\n  </template>\n</Tooltip>\n\n<Tooltip content=\"较大偏移 (20px)\" position=\"top\" :offset=\"20\">\n  <template #trigger>\n    <Button type=\"info\">较大偏移 (20px)</Button>\n  </template>\n</Tooltip>\n\n<!-- 触发方式 -->\n<Tooltip content=\"鼠标悬停时显示（默认）\" trigger=\"hover\">\n  <template #trigger>\n    <Button type=\"primary\">悬停触发</Button>\n  </template>\n</Tooltip>\n\n<Tooltip content=\"点击时显示\" trigger=\"click\">\n  <template #trigger>\n    <Button type=\"danger\">点击触发</Button>\n  </template>\n</Tooltip>\n\n<Tooltip content=\"聚焦时显示\" trigger=\"focus\">\n  <template #trigger>\n    <input type=\"text\" placeholder=\"聚焦时显示提示\" \n      class=\"px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n  </template>\n</Tooltip>`;\n\n// 示例代码片段\nconst codeSmartPosition = `<!-- 靠近边缘时的智能调整 -->\n<Tooltip content=\"我在顶部时会自动避免被截断\" position=\"top\">\n  <template #trigger>\n    <Button type=\"warning\">靠近顶部的元素</Button>\n  </template>\n</Tooltip>\n\n<Tooltip content=\"我会避免超出右侧边界\" position=\"top\">\n  <template #trigger>\n    <Button type=\"warning\">靠近右侧的元素</Button>\n  </template>\n</Tooltip>`;\n\n// 示例代码片段\nconst codeComplexScenario = `<!-- 表单帮助信息 -->\n<div class=\"flex items中心 gap-2\">\n  <label for=\"username\">用户名</label>\n  <input id=\"username\" type=\"text\" class=\"px-3 py-2 border rounded\" />\n  <Tooltip content=\"用户名长度需要在3-20个字符之间，只能包含字母、数字和下划线\">\n    <template #trigger>\n      <span class=\"cursor-pointer text-gray-500\">\n        <svg><!-- 信息图标 --></svg>\n      </span>\n    </template>\n  </Tooltip>\n</div>\n\n<!-- 表格中的提示 -->\n<table class=\"min-w-full border-collapse border\">\n  <thead>\n    <tr>\n      <th>产品名称</th>\n      <th>\n        <div class=\"flex items中心 gap-1\">\n          <span>库存状态</span>\n          <Tooltip content=\"绿色表示库存充足，黄色表示库存较低，红色表示缺货\">\n            <template #trigger>\n              <span class=\"cursor-pointer text-gray-500\">\n                <svg><!-- 信息图标 --></svg>\n              </span>\n            </template>\n          </Tooltip>\n        </div>\n      </th>\n      <th>操作</th>\n    </tr>\n  </thead>\n  <!-- 表格内容... -->\n</table>`;\n\n// 示例代码片段\nconst codeDarkMode = `<!-- 深色模式自动适配 -->\n<Tooltip content=\"深色模式下我会更换颜色\">\n  <template #trigger>\n    <Button>查看深色模式适配</Button>\n  </template>\n</Tooltip>\n\n<Tooltip position=\"bottom\">\n  <template #trigger>\n    <Button type=\"secondary\">自定义内容示例</Button>\n  </template>\n  <template #content>\n    <div class=\"flex flex-col gap-2\">\n      <h3 class=\"font-bold\">深色模式支持</h3>\n      <p>此提示框在深色模式下会自动调整样式</p>\n      <div class=\"p-2 bg-gray-100 dark:bg-gray-700 rounded\">\n        <code class=\"text-xs\">自动适配主题</code>\n      </div>\n    </div>\n  </template>\n</Tooltip>`;\n</script>\n\n<style scoped>\n/* 处理代码高亮显示 */\npre {\n    white-space: pre-wrap;\n    word-break: break-word;\n    font-family:\n        ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\",\n        \"Courier New\", monospace;\n}\n\n/* Add button-specific styles if needed */\n</style>\n"],"names":["Tooltip","defineComponent","name","props","content","type","String","default","position","offset","Number","setup","slots","tooltipContainer","ref","tooltip","isVisible","positionStyle","currentPosition","tooltipClasses","computed","value","arrowClasses","tooltipStyles","top","left","zIndex","calculatePosition","triggerRect","getBoundingClientRect","tooltipRect","viewportWidth","document","documentElement","clientWidth","viewportHeight","clientHeight","safeMargin","width","height","bottom","showTooltip","nextTick","hideTooltip","onMounted","window","addEventListener","passive","onBeforeUnmount","removeEventListener","_createVNode","trigger","Teleport","Transition","codeBasic","codePositions","codeCustomContent","codeCustomTrigger","codeOffset","codeSmartPosition","codeComplexScenario","codeDarkMode","Button","getButtonClasses","baseClasses","sizeClasses","typeClasses","h","_a","isDarkMode","toggleDarkMode"],"mappings":"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"}