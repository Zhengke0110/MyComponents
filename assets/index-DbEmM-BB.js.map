{"version":3,"file":"index-DbEmM-BB.js","sources":["../../src/libs/Notification/Notification.tsx","../../src/libs/Notification/View.vue"],"sourcesContent":["import { defineComponent, h, PropType, ref, TransitionGroup, onMounted, computed, watch, onUnmounted } from 'vue';\n\n// 通知类型\nexport type NotificationType = 'info' | 'success' | 'warning' | 'error';\n\n// 通知项接口\nexport interface NotificationItem {\n    id: string;\n    title: string;\n    message: string;\n    type: NotificationType;\n    duration?: number; // 自动关闭时间，单位毫秒，设置为0则不自动关闭\n    closable?: boolean; // 是否显示关闭按钮\n    onClose?: () => void; // 关闭时的回调\n    action?: {\n        text: string;\n        onClick: () => void;\n    };\n}\n\n// 通知配置\nexport interface NotificationConfig {\n    maxCount?: number; // 最大显示数量\n}\n\n// 存储当前通知列表\nconst notificationList = ref<NotificationItem[]>([]);\nlet seed = 0; // ID生成器种子\nlet config: NotificationConfig = {\n    maxCount: 10,\n};\n\n// 生成唯一ID\nconst generateId = (): string => {\n    return `notification_${Date.now()}_${seed++}`;\n};\n\n// 通知图标组件\nconst NotificationIcon = defineComponent({\n    props: {\n        type: {\n            type: String as PropType<NotificationType>,\n            default: 'info',\n        },\n    },\n    setup(props) {\n        return () => {\n            const iconMap = {\n                info: (\n                    <svg class=\"w-6 h-6 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                    </svg>\n                ),\n                success: (\n                    <svg class=\"w-6 h-6 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                    </svg>\n                ),\n                warning: (\n                    <svg class=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\n                    </svg>\n                ),\n                error: (\n                    <svg class=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                    </svg>\n                ),\n            };\n\n            return (\n                <div class=\"flex-shrink-0\">{iconMap[props.type]}</div>\n            );\n        };\n    },\n});\n\n// 单个通知项组件\nconst NotificationItem = defineComponent({\n    props: {\n        notification: {\n            type: Object as PropType<NotificationItem>,\n            required: true,\n        },\n    },\n    setup(props) {\n        const timeoutId = ref<number | null>(null);\n        const visible = ref(true);\n\n        const handleClose = () => {\n            visible.value = false;\n            if (props.notification.onClose) {\n                props.notification.onClose();\n            }\n            // 延迟移除元素，等待动画结束\n            setTimeout(() => {\n                removeNotification(props.notification.id);\n            }, 300);\n        };\n\n        // 根据通知类型设置背景颜色\n        const bgClass = computed(() => {\n            const typeMap = {\n                info: 'bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700',\n                success: 'bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700',\n                warning: 'bg-yellow-50 dark:bg-yellow-900/30 border-yellow-200 dark:border-yellow-700',\n                error: 'bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700',\n            };\n            return typeMap[props.notification.type] || typeMap.info;\n        });\n        \n        // 设置进入/离开动画类 - 现在固定为右侧进入\n        const transitionClass = computed(() => {\n            const baseClass = 'transition-all duration-300 ease-in-out';\n            return `${baseClass} ${visible.value ? 'opacity-100 transform-none' : 'opacity-0 translate-x-full'}`;\n        });\n\n        // 自动关闭逻辑\n        onMounted(() => {\n            if (props.notification.duration !== 0) {\n                timeoutId.value = window.setTimeout(() => {\n                    handleClose();\n                }, props.notification.duration || 4500);\n            }\n        });\n\n        // 清除计时器\n        onUnmounted(() => {\n            if (timeoutId.value) {\n                clearTimeout(timeoutId.value);\n            }\n        });\n\n        return () => (\n            <div\n                data-notification-id={props.notification.id}\n                class={`${bgClass.value} w-96 rounded-lg shadow-lg border overflow-hidden ${transitionClass.value} dark:text-gray-100`}\n            >\n                <div class=\"p-4 flex gap-3\">\n                    <NotificationIcon type={props.notification.type} />\n\n                    <div class=\"flex-grow\">\n                        <h3 class=\"font-semibold text-gray-900 dark:text-gray-100\">{props.notification.title}</h3>\n                        <p class=\"text-gray-700 dark:text-gray-300 text-sm mt-1\">{props.notification.message}</p>\n\n                        {props.notification.action && (\n                            <div class=\"mt-2 action-container\">\n                                <button\n                                    onClick={props.notification.action.onClick}\n                                    class=\"text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors\"\n                                >\n                                    {props.notification.action.text}\n                                </button>\n                            </div>\n                        )}\n                    </div>\n\n                    {(props.notification.closable !== false) && (\n                        <button\n                            onClick={handleClose}\n                            class=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors\"\n                            aria-label=\"关闭\"\n                        >\n                            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n                            </svg>\n                        </button>\n                    )}\n                </div>\n            </div>\n        );\n    },\n});\n\n// 通知容器组件\nexport const NotificationContainer = defineComponent({\n    setup() {\n        // 计算容器样式，固定在右上角\n        const containerClass = computed(() => {\n            return `fixed z-50 top-4 right-4 flex flex-col-reverse items-end`;\n        });\n\n        // 子容器类名\n        const childContainerClass = computed(() => {\n            return 'space-y-4 space-y-reverse w-full';\n        });\n\n        return () => h('div', { \n            class: containerClass.value\n        }, [\n            h(TransitionGroup, { \n                name: 'notification-transition',\n                tag: 'div',\n                class: childContainerClass.value\n            }, () => notificationList.value.map(notification => \n                h('div', { \n                    key: notification.id,\n                    class: 'mb-3 notification-item' \n                }, [\n                    h(NotificationItem, { notification })\n                ])\n            ))\n        ]);\n    },\n});\n\n// 移除通知\nconst removeNotification = (id: string) => {\n    const index = notificationList.value.findIndex(item => item.id === id);\n    if (index !== -1) {\n        notificationList.value.splice(index, 1);\n    }\n};\n\n// 添加通知\nconst addNotification = (notification: Omit<NotificationItem, 'id'>) => {\n    const id = generateId();\n    const newNotification = { id, ...notification };\n\n    // 检查是否超过最大显示数量\n    if (config.maxCount && notificationList.value.length >= config.maxCount) {\n        notificationList.value.shift(); // 移除最早的通知\n    }\n\n    notificationList.value.push(newNotification);\n    return id;\n};\n\n// 公共 API\nconst Notification = {\n    // 配置方法\n    config(options: NotificationConfig) {\n        config = { ...config, ...options };\n        return Notification;\n    },\n\n    // 销毁所有通知\n    destroyAll() {\n        notificationList.value = [];\n    },\n\n    // 移除指定通知\n    remove(id: string) {\n        removeNotification(id);\n    },\n\n    // 创建不同类型的通知\n    info(config: Omit<NotificationItem, 'id' | 'type'>) {\n        return addNotification({ ...config, type: 'info' });\n    },\n\n    success(config: Omit<NotificationItem, 'id' | 'type'>) {\n        return addNotification({ ...config, type: 'success' });\n    },\n\n    warning(config: Omit<NotificationItem, 'id' | 'type'>) {\n        return addNotification({ ...config, type: 'warning' });\n    },\n\n    error(config: Omit<NotificationItem, 'id' | 'type'>) {\n        return addNotification({ ...config, type: 'error' });\n    },\n\n    // 打开通知\n    open(config: Omit<NotificationItem, 'id'>) {\n        return addNotification(config);\n    },\n\n    // 安装到 Vue 应用\n    install(app: any) {\n        app.component('NotificationContainer', NotificationContainer);\n        app.config.globalProperties.$notification = Notification;\n    },\n};\n\nexport default Notification;\n","<template>\n    <div class=\"p-6 notification-demo\">\n        <h2 class=\"text-2xl font-bold mb-6 dark:text-white\">通知提醒框</h2>\n\n        <div class=\"space-y-6 mb-10\">\n            <!-- 基本类型 -->\n            <div>\n                <h3 class=\"text-lg font-semibold mb-3 dark:text-gray-200\">基本类型</h3>\n                <div class=\"space-x-4\">\n                    <button v-for=\"type in notificationTypes\" :key=\"type\" @click=\"showNotification(type)\" :class=\"[\n                        'px-4 py-2 rounded-md font-medium transition-all duration-300 transform hover:scale-105',\n                        {\n                            'bg-blue-500 hover:bg-blue-600 text-white shadow hover:shadow-md': type === 'info',\n                            'bg-green-500 hover:bg-green-600 text-white shadow hover:shadow-md': type === 'success',\n                            'bg-yellow-500 hover:bg-yellow-600 text-white shadow hover:shadow-md': type === 'warning',\n                            'bg-red-500 hover:bg-red-600 text-white shadow hover:shadow-md': type === 'error',\n                        }\n                    ]\">\n                        {{ type.charAt(0).toUpperCase() + type.slice(1) }} 通知\n                    </button>\n                </div>\n            </div>\n\n            <!-- 高级配置 -->\n            <div>\n                <h3 class=\"text-lg font-semibold mb-3 dark:text-gray-200\">高级配置</h3>\n                <div class=\"flex flex-wrap gap-4\">\n                    <button @click=\"showWithAction\"\n                        class=\"px-4 py-2 bg-purple-500 hover:bg-purple-600 text-white rounded-md font-medium transition-colors duration-300\">\n                        带操作按钮的通知\n                    </button>\n                    <button @click=\"showNoAutoClose\"\n                        class=\"px-4 py-2 bg-indigo-500 hover:bg-indigo-600 text-white rounded-md font-medium transition-colors duration-300\">\n                        不自动关闭的通知\n                    </button>\n                    <button @click=\"showDelayNotification\"\n                        class=\"px-4 py-2 bg-teal-500 hover:bg-teal-600 text-white rounded-md font-medium transition-colors duration-300\">\n                        延迟2秒显示通知\n                    </button>\n                    <button @click=\"showCustomDuration\"\n                        class=\"px-4 py-2 bg-cyan-500 hover:bg-cyan-600 text-white rounded-md font-medium transition-colors duration-300\">\n                        自定义持续时间 (10秒)\n                    </button>\n                    <button @click=\"destroyAll\"\n                        class=\"px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-md font-medium transition-colors duration-300\">\n                        清除所有通知\n                    </button>\n                </div>\n            </div>\n\n            <!-- 自定义内容 -->\n            <div>\n                <h3 class=\"text-lg font-semibold mb-3 dark:text-gray-200\">自定义内容</h3>\n                <div class=\"flex flex-wrap gap-4\">\n                    <button @click=\"showCustomMessage\"\n                        class=\"px-4 py-2 bg-pink-500 hover:bg-pink-600 text-white rounded-md font-medium transition-colors duration-300\">\n                        自定义内容通知\n                    </button>\n                    <button @click=\"showMultipleActions\"\n                        class=\"px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md font-medium transition-colors duration-300\">\n                        多个操作按钮\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <!-- 通知容器 -->\n        <notification-container  />\n\n        <!-- API 文档部分 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">组件API</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">全局方法</h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">方法名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">参数</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">说明</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">Notification.info(config)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">NotificationConfig</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">显示信息通知</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">Notification.success(config)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">NotificationConfig</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">显示成功通知</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">Notification.warning(config)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">NotificationConfig</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">显示警告通知</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">Notification.error(config)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">NotificationConfig</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">显示错误通知</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">Notification.open(config)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">NotificationConfig</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">显示自定义类型通知</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">Notification.destroyAll()</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">销毁所有通知</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">Notification.remove(id)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">移除指定ID的通知</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">Notification.config(options)</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">NotificationGlobalConfig</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">设置全局配置</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">通知配置选项</h3>\n                <div class=\"mb-6 overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">属性名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">类型</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">默认值</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">title</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">通知标题</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">message</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">通知内容</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">type</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">NotificationType</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">通知类型（info/success/warning/error）</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">duration</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">number</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">4500</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">自动关闭时间，单位毫秒，设置为0则不自动关闭</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">closable</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否显示关闭按钮</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">onClose</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">() => void</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">关闭时的回调函数</td>\n                            </tr>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">action</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">{ text: string, onClick: () => void }</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">操作按钮的配置</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">全局配置项</h3>\n                <div class=\"overflow-x-auto\">\n                    <table class=\"min-w-full border-collapse\">\n                        <thead>\n                            <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">属性名</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">类型</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">默认值</th>\n                                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">maxCount</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">number</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">10</td>\n                                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">最大显示数量，超出时会移除最早的通知</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section>\n\n        <!-- 小结与最佳实践 -->\n        <section class=\"mb-10\">\n            <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">小结与最佳实践</h2>\n            <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n                <div class=\"space-y-4\">\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        通知提醒框是一个用于全局展示操作反馈的轻量级组件，能够提供非阻断式的信息反馈。\n                        以下是一些使用建议：\n                    </p>\n\n                    <ul class=\"ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300\">\n                        <li>根据消息的重要程度选择合适的通知类型：\n                            <span \n                                class=\"inline-flex items-center rounded-md bg-blue-50 px-2 py-1 text-xs font-medium text-blue-700 dark:bg-blue-900/30 dark:text-blue-300\">\n                                info\n                            </span> 用于普通信息，\n                            <span \n                                class=\"inline-flex items-center rounded-md bg-green-50 px-2 py-1 text-xs font-medium text-green-700 dark:bg-green-900/30 dark:text-green-300\">\n                                success\n                            </span> 表示操作成功，\n                            <span \n                                class=\"inline-flex items-center rounded-md bg-yellow-50 px-2 py-1 text-xs font-medium text-yellow-700 dark:bg-yellow-900/30 dark:text-yellow-300\">\n                                warning\n                            </span> 表示警告信息，\n                            <span \n                                class=\"inline-flex items-center rounded-md bg-red-50 px-2 py-1 text-xs font-medium text-red-700 dark:bg-red-900/30 dark:text-red-300\">\n                                error\n                            </span> 表示错误信息\n                        </li>\n                        <li>通知内容应简洁明了，避免过长的文本信息</li>\n                        <li>对于需要用户进一步操作的通知，可以设置 <code class=\"bg-gray-100 px-1 py-0.5 rounded dark:bg-gray-800\">duration: 0</code> 防止自动关闭</li>\n                        <li>使用 action 属性添加操作按钮，引导用户进行后续操作</li>\n                        <li>避免同时显示过多通知，会导致视觉干扰，可通过 maxCount 配置控制</li>\n                        <li>对于关键操作的反馈，使用较长的显示时间确保用户看到</li>\n                    </ul>\n\n                    <div\n                        class=\"rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20\">\n                        <h4 class=\"mb-2 flex items-center text-blue-800 dark:text-blue-300\">\n                            <span class=\"icon-[material-symbols--info-outline-rounded] mr-2 h-5 w-5\"></span>\n                            暗色模式支持\n                        </h4>\n                        <p class=\"text-sm text-blue-700 dark:text-blue-300\">\n                            通知组件已内置支持暗色模式，无需额外配置。只要在应用的根元素上添加 <code\n                                class=\"rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60\">.dark</code> 类，\n                            组件就会自动切换为暗色样式。\n                        </p>\n                    </div>\n\n                    <p class=\"text-gray-700 dark:text-gray-300\">\n                        通知提醒框是应用中不可或缺的反馈机制，合理使用可以有效提升用户体验。统一的视觉样式和交互方式有助于用户快速理解信息的重要性和类型。\n                    </p>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Notification, { NotificationContainer, NotificationType } from './Notification';\n\n// 定义通知类型\nconst notificationTypes: NotificationType[] = ['info', 'success', 'warning', 'error'];\n\n// 显示不同类型的通知\nconst showNotification = (type: NotificationType): void => {\n    const titles: Record<NotificationType, string> = {\n        info: '通知',\n        success: '成功',\n        warning: '警告',\n        error: '错误'\n    };\n\n    const messages: Record<NotificationType, string> = {\n        info: '这是一条普通通知信息',\n        success: '操作已成功完成',\n        warning: '系统检测到一些问题，请注意',\n        error: '操作失败，请重试'\n    };\n\n    Notification[type]({\n        title: titles[type],\n        message: messages[type],\n        duration: 4500\n    });\n};\n\n// 显示带操作按钮的通知\nconst showWithAction = (): void => {\n    Notification.info({\n        title: '新消息通知',\n        message: '您有一条新的消息待处理',\n        duration: 0, // 不自动关闭\n        action: {\n            text: '查看详情',\n            onClick: () => {\n                alert('点击了查看详情');\n            }\n        }\n    });\n};\n\n// 显示不会自动关闭的通知\nconst showNoAutoClose = (): void => {\n    Notification.warning({\n        title: '系统维护通知',\n        message: '系统将于今晚22:00进行维护，请保存好您的工作',\n        duration: 0 // 设置为0表示不自动关闭\n    });\n};\n\n// 显示延迟通知\nconst showDelayNotification = (): void => {\n    // 显示一个加载中通知\n    Notification.info({\n        title: '处理中',\n        message: '正在准备通知内容...'\n    });\n    \n    // 2秒后显示真正的通知\n    setTimeout(() => {\n        Notification.success({\n            title: '延迟通知',\n            message: '这是一条延迟2秒后显示的通知'\n        });\n    }, 2000);\n};\n\n// 显示自定义持续时间的通知\nconst showCustomDuration = (): void => {\n    Notification.info({\n        title: '自定义持续时间',\n        message: '这条通知将显示10秒钟',\n        duration: 10000 // 10秒\n    });\n};\n\n// 显示自定义内容通知\nconst showCustomMessage = (): void => {\n    const now = new Date().toLocaleTimeString();\n    Notification.success({\n        title: '自定义内容示例',\n        message: `当前时间: ${now}\\n您可以添加更丰富的内容在这里`\n    });\n};\n\n// 显示多个操作按钮\nconst showMultipleActions = (): void => {\n    const id = Notification.warning({\n        title: '文件未保存',\n        message: '您有未保存的更改，是否保存？',\n        duration: 0,\n        action: {\n            text: '保存',\n            onClick: () => {\n                Notification.success({\n                    title: '已保存',\n                    message: '文件已成功保存'\n                });\n                Notification.remove(id);\n            }\n        }\n    });\n    \n    // 因为组件原生不支持多按钮，这里使用setTimeout来模拟第二个操作\n    setTimeout(() => {\n        const notificationElement = document.querySelector(`[data-notification-id=\"${id}\"]`) as HTMLElement;\n        if (notificationElement) {\n            const actionContainer = notificationElement.querySelector('.action-container') as HTMLElement;\n            if (actionContainer) {\n                const cancelButton = document.createElement('button');\n                cancelButton.className = 'text-sm font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300 ml-4 transition-colors';\n                cancelButton.innerText = '不保存';\n                cancelButton.onclick = () => {\n                    Notification.remove(id);\n                };\n                actionContainer.appendChild(cancelButton);\n            }\n        }\n    }, 100);\n};\n\n// 销毁所有通知\nconst destroyAll = (): void => {\n    Notification.destroyAll();\n};\n</script>\n\n<style>\n/* 通知动画 - 简化为右侧进入/退出 */\n.notification-transition-enter-active,\n.notification-transition-leave-active {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.notification-transition-enter-from,\n.notification-transition-leave-to {\n    opacity: 0;\n    transform: translateX(30px);\n}\n\n/* 手动调整项目可见性以确保新通知有正确动画 */\n.notification-item {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* 部分UI增强 */\n.notification-demo button {\n    transition: all 0.2s ease;\n}\n\n.notification-demo button:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n\n.notification-demo button:active {\n    transform: translateY(0);\n}\n</style>\n"],"names":["notificationList","ref","seed","config","maxCount","generateId","Date","now","NotificationIcon","defineComponent","props","type","String","default","setup","iconMap","info","_createVNode","success","warning","error","NotificationItem","notification","Object","required","timeoutId","visible","handleClose","value","onClose","setTimeout","removeNotification","id","bgClass","computed","typeMap","transitionClass","onMounted","duration","window","onUnmounted","clearTimeout","title","message","action","onClick","text","closable","NotificationContainer","containerClass","childContainerClass","h","class","TransitionGroup","name","tag","map","key","index","findIndex","item","splice","addNotification","newNotification","length","shift","push","Notification","options","destroyAll","remove","open","install","app","component","globalProperties","$notification","notificationTypes","showNotification","titles","messages","showWithAction","showNoAutoClose","showDelayNotification","showCustomDuration","showCustomMessage","showMultipleActions","notificationElement","actionContainer","cancelButton"],"mappings":"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"}