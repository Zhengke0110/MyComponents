{"version":3,"file":"index-ChOc2h0Z.js","sources":["../../src/libs/TextInput/config.ts","../../src/libs/TextInput/TextInput.tsx","../../src/libs/TextInput/View.vue"],"sourcesContent":["\n// 颜色主题类型\nexport type ColorType =\n    | 'slate'\n    | 'gray'\n    | 'zinc'\n    | 'neutral'\n    | 'stone'\n    | 'red'\n    | 'orange'\n    | 'amber'\n    | 'yellow'\n    | 'lime'\n    | 'green'\n    | 'emerald'\n    | 'teal'\n    | 'cyan'\n    | 'sky'\n    | 'blue'\n    | 'indigo'\n    | 'violet'\n    | 'purple'\n    | 'fuchsia'\n    | 'pink'\n    | 'rose'\n\nexport type TextInputSize = 'sm' | 'md' | 'lg'\n\nexport interface TextInputProps {\n    modelValue?: string\n    id: string\n    name?: string\n    label?: string\n    type?: string\n    placeholder?: string\n    disabled?: boolean\n    required?: boolean\n    description?: string\n    error?: string\n    color?: ColorType\n    size?: TextInputSize\n    wrapperClass?: string\n    labelClass?: string\n    multiline?: boolean\n    rows?: number\n}\n\n// 颜色映射支持深色模式\nexport const colorMap = {\n    // 浅色模式\n    light: {\n        slate: { light: '#cbd5e1', medium: '#64748b', dark: '#475569', hover: '#94a3b8', focus: '#475569', text: '#334155', bgAlpha: 'rgba(148, 163, 184, 0.08)' },\n        gray: { light: '#d1d5db', medium: '#6b7280', dark: '#4b5563', hover: '#9ca3af', focus: '#4b5563', text: '#374151', bgAlpha: 'rgba(156, 163, 175, 0.08)' },\n        zinc: { light: '#d4d4d8', medium: '#71717a', dark: '#52525b', hover: '#a1a1aa', focus: '#52525b', text: '#3f3f46', bgAlpha: 'rgba(161, 161, 170, 0.08)' },\n        neutral: { light: '#d4d4d4', medium: '#737373', dark: '#525252', hover: '#a3a3a3', focus: '#525252', text: '#404040', bgAlpha: 'rgba(163, 163, 163, 0.08)' },\n        stone: { light: '#d6d3d1', medium: '#78716c', dark: '#57534e', hover: '#a8a29e', focus: '#57534e', text: '#44403c', bgAlpha: 'rgba(168, 162, 158, 0.08)' },\n        red: { light: '#fca5a5', medium: '#ef4444', dark: '#dc2626', hover: '#f87171', focus: '#dc2626', text: '#b91c1c', bgAlpha: 'rgba(248, 113, 113, 0.08)' },\n        orange: { light: '#fdba74', medium: '#f97316', dark: '#ea580c', hover: '#fb923c', focus: '#ea580c', text: '#c2410c', bgAlpha: 'rgba(251, 146, 60, 0.08)' },\n        amber: { light: '#fcd34d', medium: '#f59e0b', dark: '#d97706', hover: '#fbbf24', focus: '#d97706', text: '#b45309', bgAlpha: 'rgba(251, 191, 36, 0.08)' },\n        yellow: { light: '#fde047', medium: '#eab308', dark: '#ca8a04', hover: '#facc15', focus: '#ca8a04', text: '#a16207', bgAlpha: 'rgba(250, 204, 21, 0.08)' },\n        lime: { light: '#bef264', medium: '#84cc16', dark: '#65a30d', hover: '#a3e635', focus: '#65a30d', text: '#4d7c0f', bgAlpha: 'rgba(163, 230, 53, 0.08)' },\n        green: { light: '#86efac', medium: '#22c55e', dark: '#16a34a', hover: '#4ade80', focus: '#16a34a', text: '#15803d', bgAlpha: 'rgba(74, 222, 128, 0.08)' },\n        emerald: { light: '#6ee7b7', medium: '#10b981', dark: '#059669', hover: '#34d399', focus: '#059669', text: '#047857', bgAlpha: 'rgba(52, 211, 153, 0.08)' },\n        teal: { light: '#5eead4', medium: '#14b8a6', dark: '#0d9488', hover: '#2dd4bf', focus: '#0d9488', text: '#0f766e', bgAlpha: 'rgba(45, 212, 191, 0.08)' },\n        cyan: { light: '#67e8f9', medium: '#06b6d4', dark: '#0891b2', hover: '#22d3ee', focus: '#0891b2', text: '#0e7490', bgAlpha: 'rgba(34, 211, 238, 0.08)' },\n        sky: { light: '#7dd3fc', medium: '#0ea5e9', dark: '#0284c7', hover: '#38bdf8', focus: '#0284c7', text: '#0369a1', bgAlpha: 'rgba(56, 189, 248, 0.08)' },\n        blue: { light: '#93c5fd', medium: '#3b82f6', dark: '#2563eb', hover: '#60a5fa', focus: '#2563eb', text: '#1d4ed8', bgAlpha: 'rgba(96, 165, 250, 0.08)' },\n        indigo: { light: '#a5b4fc', medium: '#6366f1', dark: '#4f46e5', hover: '#818cf8', focus: '#4f46e5', text: '#4338ca', bgAlpha: 'rgba(129, 140, 248, 0.08)' },\n        violet: { light: '#c4b5fd', medium: '#8b5cf6', dark: '#7c3aed', hover: '#a78bfa', focus: '#7c3aed', text: '#6d28d9', bgAlpha: 'rgba(167, 139, 250, 0.08)' },\n        purple: { light: '#d8b4fe', medium: '#a855f7', dark: '#9333ea', hover: '#c084fc', focus: '#9333ea', text: '#7e22ce', bgAlpha: 'rgba(192, 132, 252, 0.08)' },\n        fuchsia: { light: '#f0abfc', medium: '#d946ef', dark: '#c026d3', hover: '#e879f9', focus: '#c026d3', text: '#a21caf', bgAlpha: 'rgba(232, 121, 249, 0.08)' },\n        pink: { light: '#f9a8d4', medium: '#ec4899', dark: '#db2777', hover: '#f472b6', focus: '#db2777', text: '#be185d', bgAlpha: 'rgba(244, 114, 182, 0.08)' },\n        rose: { light: '#fda4af', medium: '#f43f5e', dark: '#e11d48', hover: '#fb7185', focus: '#e11d48', text: '#be123c', bgAlpha: 'rgba(251, 113, 133, 0.08)' },\n    },\n    // 深色模式\n    dark: {\n        slate: { light: '#475569', medium: '#94a3b8', dark: '#cbd5e1', hover: '#64748b', focus: '#94a3b8', text: '#e2e8f0', bgAlpha: 'rgba(71, 85, 105, 0.2)' },\n        gray: { light: '#4b5563', medium: '#9ca3af', dark: '#d1d5db', hover: '#6b7280', focus: '#9ca3af', text: '#f3f4f6', bgAlpha: 'rgba(75, 85, 99, 0.2)' },\n        zinc: { light: '#52525b', medium: '#a1a1aa', dark: '#d4d4d8', hover: '#71717a', focus: '#a1a1aa', text: '#f4f4f5', bgAlpha: 'rgba(82, 82, 91, 0.2)' },\n        neutral: { light: '#525252', medium: '#a3a3a3', dark: '#d4d4d4', hover: '#737373', focus: '#a3a3a3', text: '#f5f5f5', bgAlpha: 'rgba(82, 82, 82, 0.2)' },\n        stone: { light: '#57534e', medium: '#a8a29e', dark: '#d6d3d1', hover: '#78716c', focus: '#a8a29e', text: '#f5f5f4', bgAlpha: 'rgba(87, 83, 78, 0.2)' },\n        red: { light: '#b91c1c', medium: '#f87171', dark: '#fca5a5', hover: '#ef4444', focus: '#f87171', text: '#fee2e2', bgAlpha: 'rgba(185, 28, 28, 0.2)' },\n        orange: { light: '#c2410c', medium: '#fb923c', dark: '#fdba74', hover: '#f97316', focus: '#fb923c', text: '#ffedd5', bgAlpha: 'rgba(194, 65, 12, 0.2)' },\n        amber: { light: '#b45309', medium: '#fbbf24', dark: '#fcd34d', hover: '#f59e0b', focus: '#fbbf24', text: '#fef3c7', bgAlpha: 'rgba(180, 83, 9, 0.2)' },\n        yellow: { light: '#a16207', medium: '#facc15', dark: '#fde047', hover: '#eab308', focus: '#facc15', text: '#fef9c3', bgAlpha: 'rgba(161, 98, 7, 0.2)' },\n        lime: { light: '#4d7c0f', medium: '#a3e635', dark: '#bef264', hover: '#84cc16', focus: '#a3e635', text: '#ecfccb', bgAlpha: 'rgba(77, 124, 15, 0.2)' },\n        green: { light: '#15803d', medium: '#4ade80', dark: '#86efac', hover: '#22c55e', focus: '#4ade80', text: '#dcfce7', bgAlpha: 'rgba(21, 128, 61, 0.2)' },\n        emerald: { light: '#047857', medium: '#34d399', dark: '#6ee7b7', hover: '#10b981', focus: '#34d399', text: '#d1fae5', bgAlpha: 'rgba(4, 120, 87, 0.2)' },\n        teal: { light: '#0f766e', medium: '#2dd4bf', dark: '#5eead4', hover: '#14b8a6', focus: '#2dd4bf', text: '#ccfbf1', bgAlpha: 'rgba(15, 118, 110, 0.2)' },\n        cyan: { light: '#0e7490', medium: '#22d3ee', dark: '#67e8f9', hover: '#06b6d4', focus: '#22d3ee', text: '#cffafe', bgAlpha: 'rgba(14, 116, 144, 0.2)' },\n        sky: { light: '#0369a1', medium: '#38bdf8', dark: '#7dd3fc', hover: '#0ea5e9', focus: '#38bdf8', text: '#e0f2fe', bgAlpha: 'rgba(3, 105, 161, 0.2)' },\n        blue: { light: '#1d4ed8', medium: '#60a5fa', dark: '#93c5fd', hover: '#3b82f6', focus: '#60a5fa', text: '#dbeafe', bgAlpha: 'rgba(29, 78, 216, 0.2)' },\n        indigo: { light: '#4338ca', medium: '#818cf8', dark: '#a5b4fc', hover: '#6366f1', focus: '#818cf8', text: '#e0e7ff', bgAlpha: 'rgba(67, 56, 202, 0.2)' },\n        violet: { light: '#6d28d9', medium: '#a78bfa', dark: '#c4b5fd', hover: '#8b5cf6', focus: '#a78bfa', text: '#ede9fe', bgAlpha: 'rgba(109, 40, 217, 0.2)' },\n        purple: { light: '#7e22ce', medium: '#c084fc', dark: '#d8b4fe', hover: '#a855f7', focus: '#c084fc', text: '#f3e8ff', bgAlpha: 'rgba(126, 34, 206, 0.2)' },\n        fuchsia: { light: '#a21caf', medium: '#e879f9', dark: '#f0abfc', hover: '#d946ef', focus: '#e879f9', text: '#fae8ff', bgAlpha: 'rgba(162, 28, 175, 0.2)' },\n        pink: { light: '#be185d', medium: '#f472b6', dark: '#f9a8d4', hover: '#ec4899', focus: '#f472b6', text: '#fce7f3', bgAlpha: 'rgba(190, 24, 93, 0.2)' },\n        rose: { light: '#be123c', medium: '#fb7185', dark: '#fda4af', hover: '#f43f5e', focus: '#fb7185', text: '#ffe4e6', bgAlpha: 'rgba(190, 18, 60, 0.2)' },\n    }\n}","import { computed, defineComponent, ref, type PropType } from 'vue'\nimport { ColorType, TextInputProps, colorMap, TextInputSize } from './config'\nexport type { ColorType, TextInputSize }\nexport const TextInput = defineComponent({\n  name: 'TextInput',\n  props: {\n    modelValue: String as PropType<TextInputProps['modelValue']>,\n    id: {\n      type: String as PropType<TextInputProps['id']>,\n      required: true\n    },\n    name: String as PropType<TextInputProps['name']>,\n    label: String as PropType<TextInputProps['label']>,\n    type: {\n      type: String as PropType<TextInputProps['type']>,\n      default: 'text'\n    },\n    placeholder: {\n      type: String as PropType<TextInputProps['placeholder']>,\n      default: ''\n    },\n    disabled: {\n      type: Boolean as PropType<TextInputProps['disabled']>,\n      default: false\n    },\n    required: {\n      type: Boolean as PropType<TextInputProps['required']>,\n      default: false\n    },\n    description: String as PropType<TextInputProps['description']>,\n    error: String as PropType<TextInputProps['error']>,\n    color: {\n      type: String as PropType<TextInputProps['color']>,\n      default: 'indigo'\n    },\n    size: {\n      type: String as PropType<TextInputProps['size']>,\n      default: 'md'\n    },\n    wrapperClass: {\n      type: String as PropType<TextInputProps['wrapperClass']>,\n      default: ''\n    },\n    labelClass: {\n      type: String as PropType<TextInputProps['labelClass']>,\n      default: ''\n    },\n    multiline: {\n      type: Boolean as PropType<TextInputProps['multiline']>,\n      default: false\n    },\n    rows: {\n      type: Number as PropType<TextInputProps['rows']>,\n      default: 3\n    }\n  },\n  emits: ['update:modelValue', 'focus', 'blur'],\n  setup(props, { emit, slots }) {\n    const isFocused = ref(false);\n\n    // 尺寸相关样式\n    const sizeClasses = computed(() => ({\n      sm: {\n        input: 'py-1 px-2.5 text-sm tracking-tight',\n      },\n      md: {\n        input: 'py-1.5 px-3 text-base tracking-normal',\n      },\n      lg: {\n        input: 'py-2 px-3.5 text-lg tracking-normal',\n      }\n    }[props.size ?? 'md']));\n\n\n\n    // 获取颜色样式对象，现在支持深色模式\n    const colorStyle = computed(() => {\n      const color = props.color as ColorType || 'indigo';\n      const defaultTheme = colorMap.light.indigo;\n\n      // 根据是否启用了深色模式选择对应的调色板\n      const themeGroup = document.documentElement.classList.contains('dark')\n        ? colorMap.dark\n        : colorMap.light;\n\n      const theme = themeGroup[color] || defaultTheme;\n\n      return {\n        ring: isFocused.value ? `2px solid ${theme.focus}` : `1px solid ${document.documentElement.classList.contains('dark') ? '#4b5563' : '#e5e7eb'}`,\n        hoverRing: !props.disabled && !isFocused.value ? theme.hover : undefined,\n        text: props.modelValue && !props.disabled ? theme.text : document.documentElement.classList.contains('dark') ? '#e5e7eb' : '#111827',\n        errorRing: props.error ? (isFocused.value ? document.documentElement.classList.contains('dark') ? '#ef4444' : '#ef4444' : document.documentElement.classList.contains('dark') ? '#b91c1c' : '#fca5a5') : undefined,\n        background: props.color && !props.error && !props.disabled ? theme.bgAlpha : document.documentElement.classList.contains('dark') ? 'rgba(31, 41, 55, 0.5)' : '#ffffff',\n      };\n    });\n\n    // 容器样式，支持深色模式\n    const containerStyle = computed(() => {\n      const base = {\n        transition: 'all 250ms ease-in-out',\n        boxShadow: props.disabled ? 'none' : undefined,\n        opacity: props.disabled ? '0.5' : '1',\n        cursor: props.disabled ? 'not-allowed' : 'text',\n        backgroundColor: colorStyle.value.background,\n      };\n\n      if (props.error) {\n        return {\n          ...base,\n          backgroundColor: document.documentElement.classList.contains('dark') ? 'rgba(127, 29, 29, 0.1)' : '#ffffff',\n          boxShadow: `0 0 0 ${isFocused.value ? '2px' : '1px'} ${colorStyle.value.errorRing}`,\n        };\n      }\n\n      return {\n        ...base,\n        boxShadow: `0 0 0 ${colorStyle.value.ring}`,\n      };\n    });\n\n    // 输入框基础样式\n    const inputBaseStyle = computed(() => ({\n      color: colorStyle.value.text,\n      transition: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n      transform: isFocused.value ? 'scale(1.005)' : 'scale(1)',\n      outline: 'none',\n      backgroundColor: 'transparent'\n    }));\n\n    // 图标容器样式\n    const iconContainerStyle = computed(() => ({\n      transition: 'color 250ms ease',\n      color: document.documentElement.classList.contains('dark') ? '#9ca3af' : '#6b7280',\n    }));\n\n    // 图标悬停和聚焦样式\n    const getIconActiveStyle = (isActive: boolean) => ({\n      ...iconContainerStyle.value,\n      color: isActive\n        ? document.documentElement.classList.contains('dark')\n          ? '#e5e7eb'\n          : '#4b5563'\n        : undefined,\n    });\n\n    // 输入框通用类\n    const inputBaseClasses = computed(() => [\n      'block min-w-0 flex-1 border-0 bg-transparent focus:ring-0 disabled:cursor-not-allowed',\n      sizeClasses.value.input,\n      'text-gray-900 dark:text-gray-100 placeholder:text-gray-400 dark:placeholder:text-gray-500',\n      'placeholder:transition-opacity placeholder:duration-200',\n      'placeholder:select-none',\n      'placeholder:tracking-wide',\n      'focus:placeholder:opacity-50',\n      'transition-all duration-300 ease-in-out'\n    ]);\n\n    // 输入框特定类\n    const inputClasses = computed(() => [\n      ...inputBaseClasses.value,\n      '[appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none',\n      slots.prefix ? 'pl-3' : '',\n      props.modelValue && slots.suffix ? 'pr-16' : props.modelValue ? 'pr-8' : slots.suffix ? 'pr-10' : 'pr-3',\n    ]);\n\n    // 文本区域特定类\n    const textareaClasses = computed(() => [\n      ...inputBaseClasses.value,\n      'resize-none',\n      slots.prefix ? 'pl-3' : '',\n      slots.suffix ? 'pr-10' : '',\n    ]);\n\n    // 图标容器类\n    const iconContainerClasses = computed(() => {\n      return {\n        prefix: 'flex items-center justify-center pl-3 pr-2 transition-colors duration-300',\n        suffix: 'flex items-center justify-center pr-3 pl-2 transition-colors duration-300',\n      };\n    });\n\n    // 清除按钮类\n    const clearButtonClasses = computed(() => [\n      'absolute flex h-full items-center px-2 transition-all duration-300',\n      slots.suffix ? 'right-8 border-r border-gray-200 dark:border-gray-700' : 'right-0',\n      isFocused.value ? 'opacity-100' : 'opacity-0 group-hover:opacity-100',\n    ]);\n\n    // 事件处理\n    const handleInput = (event: Event) => {\n      const target = event.target as HTMLInputElement | HTMLTextAreaElement;\n      let value = target.value;\n\n      // 如果是数字输入框，进行额外处理\n      if (props.type === 'number') {\n        // 移除非数字字符（保留负号和小数点）\n        value = value.replace(/[^\\d.-]/g, '');\n        // 确保只有一个小数点和一个负号\n        const parts = value.split('.');\n        if (parts.length > 2) {\n          value = parts[0] + '.' + parts.slice(1).join('');\n        }\n        if (value.split('-').length > 2) {\n          value = value.replace(/-/g, '');\n          if (value.startsWith('.')) {\n            value = '0' + value;\n          }\n          value = '-' + value;\n        }\n        // 如果不是第一位，移除负号\n        if (value.indexOf('-') > 0) {\n          value = value.replace(/-/g, '');\n        }\n      }\n\n      emit('update:modelValue', value);\n    };\n\n    const handleFocus = (event: FocusEvent) => {\n      isFocused.value = true;\n      emit('focus', event);\n    };\n\n    const handleBlur = (event: FocusEvent) => {\n      isFocused.value = false;\n      emit('blur', event);\n    };\n\n    const clearInput = () => {\n      emit('update:modelValue', '');\n    };\n\n    return () => (\n      <div class={['relative space-y-1.5', props.wrapperClass]}>\n        {props.label && (\n          <label\n            for={props.id}\n            class={['block text-sm font-medium text-gray-700 dark:text-gray-300', props.labelClass]}\n          >\n            {props.label}\n            {props.required && <span class=\"ml-1 text-red-500 dark:text-red-400\">*</span>}\n          </label>\n        )}\n\n        <div class=\"relative\">\n          <div\n            class=\"group flex w-full items-center rounded-md\"\n            style={containerStyle.value}\n            onMouseover={(e) => {\n              if (!props.disabled && !props.error && !isFocused.value) {\n                (e.currentTarget as HTMLElement).style.boxShadow = `0 0 0 1px ${colorStyle.value.hoverRing}`;\n              }\n            }}\n            onMouseleave={(e) => {\n              if (!isFocused.value) {\n                (e.currentTarget as HTMLElement).style.boxShadow = `0 0 0 ${colorStyle.value.ring}`;\n              }\n            }}\n          >\n            {slots.prefix && (\n              <div\n                class={iconContainerClasses.value.prefix}\n                style={getIconActiveStyle(isFocused.value)}\n              >\n                {slots.prefix()}\n              </div>\n            )}\n\n            {props.multiline ? (\n              <textarea\n                id={props.id}\n                name={props.name}\n                value={props.modelValue}\n                disabled={props.disabled}\n                placeholder={props.placeholder}\n                required={props.required}\n                rows={props.rows}\n                onInput={handleInput}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                class={textareaClasses.value}\n                style={inputBaseStyle.value}\n              />\n            ) : (\n              <input\n                id={props.id}\n                type={props.type}\n                name={props.name}\n                value={props.modelValue}\n                disabled={props.disabled}\n                placeholder={props.placeholder}\n                required={props.required}\n                onInput={handleInput}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                class={inputClasses.value}\n                style={inputBaseStyle.value}\n              />\n            )}\n\n            {/* 清除按钮 */}\n            {props.modelValue && !props.disabled && (\n              <button\n                type=\"button\"\n                class={clearButtonClasses.value}\n                style={{ zIndex: 2 }}\n                onClick={clearInput}\n              >\n                <svg\n                  class=\"size-4 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors duration-200\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                >\n                  <path\n                    d=\"M6 18L18 6M6 6l12 12\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                </svg>\n              </button>\n            )}\n\n            {slots.suffix && (\n              <div\n                class={iconContainerClasses.value.suffix}\n                style={getIconActiveStyle(isFocused.value)}\n              >\n                {slots.suffix()}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {props.error ? (\n          <p class=\"mt-1 text-sm text-red-500 dark:text-red-400 transition-all duration-200\">\n            {props.error}\n          </p>\n        ) : props.description ? (\n          <p class=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n            {props.description}\n          </p>\n        ) : null}\n      </div>\n    )\n  }\n})\n\nexport default TextInput\n","<template>\n  <div class=\"text-input-view space-y-12 p-6\">\n    <!-- Basic Usage Section -->\n    <section>\n      <h2 class=\"text-2xl font-semibold mb-4\">Basic Usage</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <TextInput id=\"basic-input\" v-model=\"basicValue\" label=\"Basic Text Input\" placeholder=\"Enter some text\"\n          description=\"This is a basic text input example\" />\n        <div class=\"p-4 border rounded-lg bg-gray-50 dark:bg-gray-800\">\n          <p class=\"text-sm font-mono\">Value: {{ basicValue || '\"\"' }}</p>\n        </div>\n      </div>\n    </section>\n\n    <!-- Sizes Section -->\n    <section>\n      <h2 class=\"text-2xl font-semibold mb-4\">Sizes</h2>\n      <div class=\"space-y-4\">\n        <TextInput id=\"small-input\" v-model=\"sizeValues.sm\" label=\"Small Input\" size=\"sm\" placeholder=\"Small input\" />\n        <TextInput id=\"medium-input\" v-model=\"sizeValues.md\" label=\"Medium Input (Default)\" size=\"md\"\n          placeholder=\"Medium input\" />\n        <TextInput id=\"large-input\" v-model=\"sizeValues.lg\" label=\"Large Input\" size=\"lg\" placeholder=\"Large input\" />\n      </div>\n    </section>\n\n    <!-- Colors Section -->\n    <section>\n      <h2 class=\"text-2xl font-semibold mb-4\">Colors</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        <TextInput v-for=\"color in colorOptions\" :key=\"color\" :id=\"`color-${color}`\" v-model=\"colorValues[color]\"\n          :label=\"`${capitalize(color)} Color`\" :color=\"color\" :placeholder=\"`${capitalize(color)} themed input`\" />\n      </div>\n    </section>\n\n    <!-- Icons and Prefixes/Suffixes -->\n    <section>\n      <h2 class=\"text-2xl font-semibold mb-4\">Icons & Prefixes/Suffixes</h2>\n      <div class=\"space-y-4\">\n        <TextInput id=\"prefix-input\" v-model=\"iconValues.prefix\" label=\"Input with Prefix\"\n          placeholder=\"Search something...\">\n          <template #prefix>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\n              stroke-width=\"2\">\n              <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n              <path d=\"M21 21l-4.35-4.35\"></path>\n            </svg>\n          </template>\n        </TextInput>\n\n        <TextInput id=\"suffix-input\" v-model=\"iconValues.suffix\" label=\"Input with Suffix\" placeholder=\"Enter email...\">\n          <template #suffix>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\n              stroke-width=\"2\">\n              <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\n              <polyline points=\"22,6 12,13 2,6\"></polyline>\n            </svg>\n          </template>\n        </TextInput>\n\n        <TextInput id=\"both-input\" v-model=\"iconValues.both\" label=\"Input with Both\" placeholder=\"Enter amount...\">\n          <template #prefix>\n            <span class=\"text-lg font-medium\">$</span>\n          </template>\n          <template #suffix>\n            <span class=\"text-sm font-medium\">USD</span>\n          </template>\n        </TextInput>\n      </div>\n    </section>\n\n    <!-- States Section -->\n    <section>\n      <h2 class=\"text-2xl font-semibold mb-4\">States</h2>\n      <div class=\"space-y-4\">\n        <TextInput id=\"disabled-input\" v-model=\"stateValues.disabled\" label=\"Disabled Input\"\n          placeholder=\"You can't edit this\" disabled description=\"This input is disabled\" />\n\n        <TextInput id=\"required-input\" v-model=\"stateValues.required\" label=\"Required Input\"\n          placeholder=\"This field is required\" required description=\"This input is required\" />\n\n        <TextInput id=\"error-input\" v-model=\"stateValues.error\" label=\"Input with Error\" placeholder=\"Enter a value\"\n          error=\"This field has an error message\" />\n      </div>\n    </section>\n\n    <!-- Multiline (Textarea) Section -->\n    <section>\n      <h2 class=\"text-2xl font-semibold mb-4\">Multiline Input (Textarea)</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <TextInput id=\"textarea-input\" v-model=\"multilineValue\" label=\"Multiline Input\"\n          placeholder=\"Enter multiple lines of text...\" multiline :rows=\"4\"\n          description=\"This is a textarea for longer content\" />\n        <div class=\"p-4 border rounded-lg bg-gray-50 dark:bg-gray-800\">\n          <p class=\"text-sm font-mono whitespace-pre-wrap\">Value: {{ multilineValue || '\"\"' }}</p>\n        </div>\n      </div>\n    </section>\n\n    <!-- Input Types Section -->\n    <section>\n      <h2 class=\"text-2xl font-semibold mb-4\">Input Types</h2>\n      <div class=\"space-y-4\">\n        <TextInput id=\"password-input\" v-model=\"typeValues.password\" label=\"Password Input\" type=\"password\"\n          placeholder=\"Enter your password\" />\n\n        <TextInput id=\"number-input\" v-model=\"typeValues.number\" label=\"Number Input\" type=\"number\"\n          placeholder=\"Enter a number\" />\n\n        <TextInput id=\"email-input\" v-model=\"typeValues.email\" label=\"Email Input\" type=\"email\"\n          placeholder=\"Enter your email\" />\n      </div>\n    </section>\n\n    <!-- Form Example Section -->\n    <section>\n      <h2 class=\"text-2xl font-semibold mb-4\">Form Example</h2>\n      <form @submit.prevent=\"submitForm\" class=\"space-y-4 border p-6 rounded-lg bg-gray-50 dark:bg-gray-800\">\n        <TextInput id=\"form-name\" v-model=\"formValues.name\" label=\"Full Name\" placeholder=\"Enter your full name\"\n          required :error=\"formErrors.name\" />\n\n        <TextInput id=\"form-email\" v-model=\"formValues.email\" label=\"Email Address\" type=\"email\"\n          placeholder=\"Enter your email address\" required :error=\"formErrors.email\">\n          <template #suffix>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\n              stroke-width=\"2\">\n              <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\n              <polyline points=\"22,6 12,13 2,6\"></polyline>\n            </svg>\n          </template>\n        </TextInput>\n\n        <TextInput id=\"form-message\" v-model=\"formValues.message\" label=\"Message\" placeholder=\"Enter your message\"\n          multiline :rows=\"3\" :error=\"formErrors.message\" />\n\n        <div class=\"pt-2\">\n          <button type=\"submit\"\n            class=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\">\n            Submit Form\n          </button>\n        </div>\n      </form>\n\n      <div v-if=\"formSubmitted\"\n        class=\"mt-4 p-4 bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-100 rounded-md\">\n        Form submitted successfully!\n      </div>\n    </section>\n\n    <!-- Summary and Best Practices Section -->\n    <section class=\"border-t pt-10 mt-12\">\n      <h2 class=\"text-2xl font-semibold mb-6\">小结与最佳实践</h2>\n\n      <div class=\"prose prose-slate dark:prose-invert max-w-none\">\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n            <h3 class=\"text-xl font-medium mb-3 text-indigo-600 dark:text-indigo-400 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-5 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\"\n                stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\"></path>\n              </svg>\n              何时使用 TextInput 组件\n            </h3>\n            <ul class=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-300\">\n              <li>需要用户输入单行文本（如用户名、邮箱、密码等）</li>\n              <li>需要用户输入多行文本（如评论、描述、详情等）</li>\n              <li>表单中需要用户填写各种类型信息</li>\n              <li>需要提供详细的输入反馈（如错误信息、描述信息等）</li>\n            </ul>\n          </div>\n\n          <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n            <h3 class=\"text-xl font-medium mb-3 text-indigo-600 dark:text-indigo-400 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-5 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\"\n                stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>\n              </svg>\n              可访问性最佳实践\n            </h3>\n            <ul class=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-300\">\n              <li><strong class=\"text-gray-800 dark:text-gray-100\">始终提供标签</strong> - 确保每个输入框都有一个关联的标签 (label)，通过 <code\n                  class=\"bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded text-sm\">id</code> 属性与输入框关联。</li>\n              <li><strong class=\"text-gray-800 dark:text-gray-100\">添加描述信息</strong> - 使用 <code\n                  class=\"bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded text-sm\">description</code> 属性为复杂输入框提供额外指导。\n              </li>\n              <li><strong class=\"text-gray-800 dark:text-gray-100\">错误反馈</strong> - 使用 <code\n                  class=\"bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded text-sm\">error</code> 属性提供具体、清晰的错误信息，而非模糊提示。\n              </li>\n              <li><strong class=\"text-gray-800 dark:text-gray-100\">必填项标记</strong> - 为必填字段设置 <code\n                  class=\"bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded text-sm\">required</code> 属性，组件会自动添加视觉指示器。</li>\n              <li><strong class=\"text-gray-800 dark:text-gray-100\">合适的输入类型</strong> - 根据输入内容选择正确的 <code\n                  class=\"bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded text-sm\">type</code> 属性（如 email、password 等）。\n              </li>\n            </ul>\n          </div>\n\n          <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n            <h3 class=\"text-xl font-medium mb-3 text-indigo-600 dark:text-indigo-400 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-5 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\"\n                stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M13 2L3 14h9l-1 8 10-12h-9l1-8z\"></path>\n              </svg>\n              性能优化\n            </h3>\n            <ul class=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-300\">\n              <li>避免在单个表单中使用过多的 TextInput 组件，特别是在移动设备上</li>\n              <li>对于长表单，考虑使用分步骤表单或延迟加载策略</li>\n              <li>当需要大量文本编辑功能时，考虑使用专门的富文本编辑器组件</li>\n            </ul>\n          </div>\n\n          <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n            <h3 class=\"text-xl font-medium mb-3 text-indigo-600 dark:text-indigo-400 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-5 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\"\n                stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n              </svg>\n              最佳实践\n            </h3>\n            <ol class=\"list-decimal pl-5 space-y-2 text-gray-600 dark:text-gray-300\">\n              <li>为每个输入框提供清晰简洁的标签</li>\n              <li>默认提供有意义的占位符文本，但不要仅依赖占位符来传达重要信息</li>\n              <li>在合适的地方使用图标增强用户体验，如搜索框使用放大镜图标</li>\n              <li>谨慎选择输入框的大小和颜色，以便与整个设计系统保持一致</li>\n              <li>在移动设备上，确保输入框有足够大的点击区域（至少使用 md 尺寸）</li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- API Documentation Section -->\n    <section class=\"border-t pt-10 mt-12\">\n      <h2 class=\"text-2xl font-semibold mb-6\">API 文档</h2>\n\n      <div class=\"space-y-8\">\n        <!-- Props Documentation -->\n        <div>\n          <h3 class=\"text-xl font-medium mb-4\">属性 Props</h3>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead class=\"bg-gray-50 dark:bg-gray-800\">\n                <tr>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    属性名</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    类型</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    默认值</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    说明</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-800\">\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">modelValue\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">-</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框的值，支持 v-model 双向绑定</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">id <span\n                      class=\"text-red-600 dark:text-red-400\">*</span></td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">-</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框的唯一标识，必填</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">name</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">-</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框的名称</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">label</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">-</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框的标签文本</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">type</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">'text'</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框类型，如 'text', 'password', 'number' 等\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">placeholder\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">''</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框的占位符文本</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">disabled\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">boolean</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">false</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">是否禁用输入框</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">required\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">boolean</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">false</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">是否为必填项</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">description\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">-</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框下方的描述文本</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">error</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">-</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">错误信息，设置后会显示错误状态</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">color</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">ColorType</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">'indigo'</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">主题颜色</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">size</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">'sm' | 'md' | 'lg'\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">'md'</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框大小</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">wrapperClass\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">''</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">容器元素的自定义类名</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">labelClass\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">''</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">标签元素的自定义类名</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">multiline\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">boolean</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">false</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">是否为多行文本区域</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">rows</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">number</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">3</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">多行文本区域的行数</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <!-- Events Documentation -->\n        <div>\n          <h3 class=\"text-xl font-medium mb-4\">事件 Events</h3>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead class=\"bg-gray-50 dark:bg-gray-800\">\n                <tr>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    事件名</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    参数</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    说明</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-800\">\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                    update:modelValue</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">string</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入值改变时触发</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">focus</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">FocusEvent</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框获得焦点时触发</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">blur</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">FocusEvent</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框失去焦点时触发</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <!-- Slots Documentation -->\n        <div>\n          <h3 class=\"text-xl font-medium mb-4\">插槽 Slots</h3>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead class=\"bg-gray-50 dark:bg-gray-800\">\n                <tr>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    插槽名</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    说明</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-800\">\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">prefix</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框前缀内容，通常用于放置图标</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">suffix</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框后缀内容，通常用于放置图标</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <!-- Color Options Documentation -->\n        <div>\n          <h3 class=\"text-xl font-medium mb-4\">颜色主题 Color Options</h3>\n          <p class=\"mb-4 text-gray-600 dark:text-gray-400\">\n            组件支持以下所有 Tailwind 颜色主题，在浅色和深色模式下均提供良好的显示效果：\n          </p>\n\n          <div class=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-6 gap-3\">\n            <!-- 灰度系列 -->\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-slate-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">slate</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-gray-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">gray</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-zinc-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">zinc</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-neutral-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">neutral</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-stone-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">stone</h4>\n              </div>\n            </div>\n\n            <!-- 红色系列 -->\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-red-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">red</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-orange-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">orange</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-amber-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">amber</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-yellow-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">yellow</h4>\n              </div>\n            </div>\n\n            <!-- 绿色系列 -->\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-lime-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">lime</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-green-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">green</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-emerald-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">emerald</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-teal-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">teal</h4>\n              </div>\n            </div>\n\n            <!-- 蓝色系列 -->\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-cyan-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">cyan</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-sky-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">sky</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-blue-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">blue</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-indigo-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">indigo</h4>\n              </div>\n            </div>\n\n            <!-- 紫色系列 -->\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-violet-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">violet</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-purple-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">purple</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-fuchsia-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">fuchsia</h4>\n              </div>\n            </div>\n\n            <!-- 粉色系列 -->\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-pink-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">pink</h4>\n              </div>\n            </div>\n\n            <div class=\"rounded-lg overflow-hidden shadow-sm\">\n              <div class=\"bg-rose-500 h-10\"></div>\n              <div class=\"p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\">\n                <h4 class=\"font-medium text-center\">rose</h4>\n              </div>\n            </div>\n          </div>\n\n          <div\n            class=\"mt-5 px-4 py-3 bg-amber-50 dark:bg-amber-900/30 border border-amber-200 dark:border-amber-800 rounded-lg\">\n            <p class=\"text-amber-800 dark:text-amber-300 text-sm flex items-start\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-5 mr-2 flex-shrink-0\" viewBox=\"0 0 24 24\" fill=\"none\"\n                stroke=\"currentColor\" stroke-width=\"2\">\n                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n                <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n              </svg>\n              <span>颜色会根据深色/浅色模式自动调整，确保在任何背景下都有良好的可读性和对比度。默认颜色为 <code\n                  class=\"bg-amber-100 dark:bg-amber-800 px-1 py-0.5 rounded text-sm\">indigo</code>。</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n\n\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { reactive, ref } from 'vue'\nimport TextInput, { type ColorType } from './TextInput'\n\n\n// Basic value\nconst basicValue = ref('')\n\n// Size examples\nconst sizeValues = reactive({\n  sm: '',\n  md: '',\n  lg: ''\n})\n\n// Color options\nconst colorOptions = [\n  'indigo', 'blue', 'red', 'green', 'purple', 'teal'\n] as Array<ColorType>\n\n// Color values\nconst colorValues = reactive<Record<string, string>>({\n  indigo: '',\n  blue: '',\n  red: '',\n  green: '',\n  purple: '',\n  teal: ''\n})\n\n// Icon examples\nconst iconValues = reactive({\n  prefix: '',\n  suffix: '',\n  both: ''\n})\n\n// State examples\nconst stateValues = reactive({\n  disabled: 'This input is disabled',\n  required: '',\n  error: ''\n})\n\n// Multiline example\nconst multilineValue = ref('')\n\n// Type examples\nconst typeValues = reactive({\n  password: '',\n  number: '',\n  email: ''\n})\n\n// Form example\nconst formValues = reactive({\n  name: '',\n  email: '',\n  message: ''\n})\n\nconst formErrors = reactive({\n  name: '',\n  email: '',\n  message: ''\n})\n\nconst formSubmitted = ref(false)\n\nconst validateForm = () => {\n  let isValid = true\n\n  // Reset errors\n  formErrors.name = ''\n  formErrors.email = ''\n  formErrors.message = ''\n\n  // Validate name\n  if (!formValues.name.trim()) {\n    formErrors.name = 'Name is required'\n    isValid = false\n  }\n\n  // Validate email\n  if (!formValues.email.trim()) {\n    formErrors.email = 'Email is required'\n    isValid = false\n  } else if (!/^\\S+@\\S+\\.\\S+$/.test(formValues.email)) {\n    formErrors.email = 'Please enter a valid email address'\n    isValid = false\n  }\n\n  // Validate message\n  if (!formValues.message.trim()) {\n    formErrors.message = 'Message is required'\n    isValid = false\n  }\n\n  return isValid\n}\n\nconst submitForm = () => {\n  if (validateForm()) {\n    formSubmitted.value = true\n    setTimeout(() => {\n      formSubmitted.value = false\n    }, 3000)\n  }\n}\n\n\n\nconst capitalize = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\n</script>\n"],"names":["colorMap","TextInput","defineComponent","name","props","modelValue","String","id","type","required","label","default","placeholder","disabled","Boolean","description","error","color","size","wrapperClass","labelClass","multiline","rows","Number","emits","setup","emit","slots","isFocused","ref","sizeClasses","computed","sm","input","md","lg","colorStyle","defaultTheme","light","indigo","theme","document","documentElement","classList","contains","dark","ring","value","focus","hoverRing","hover","undefined","text","errorRing","background","bgAlpha","containerStyle","base","transition","boxShadow","opacity","cursor","backgroundColor","inputBaseStyle","transform","outline","iconContainerStyle","getIconActiveStyle","isActive","inputBaseClasses","inputClasses","prefix","suffix","textareaClasses","iconContainerClasses","clearButtonClasses","handleInput","event","target","replace","parts","split","length","slice","join","startsWith","indexOf","handleFocus","handleBlur","clearInput","_createVNode","_createTextVNode","e","currentTarget","style","zIndex","basicValue","sizeValues","reactive","colorOptions","colorValues","iconValues","stateValues","multilineValue","typeValues","formValues","formErrors","formSubmitted","validateForm","isValid","submitForm","capitalize","str"],"mappings":"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"}