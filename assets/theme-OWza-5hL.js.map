{"version":3,"file":"theme-OWza-5hL.js","sources":["../../src/utils/theme.ts"],"sourcesContent":["import { ref, computed, watch, onMounted, onUnmounted } from 'vue';\nimport { \n  usePreferredDark, \n  useLocalStorage, \n  useEventListener,\n  useMutationObserver,\n  useMediaQuery\n} from '@vueuse/core';\n\n// 主题模式类型\nexport type ThemeMode = 'light' | 'dark' | 'system';\n\n// 当前主题模式 - 使用useLocalStorage自动同步到本地存储\nexport const themeMode = useLocalStorage<ThemeMode>(\n  'theme', \n  'system',\n  { listenToStorageChanges: true }\n);\n\n// 系统是否偏好暗色模式\nexport const preferredDark = usePreferredDark();\n\n// 媒体查询增强 - 检测系统颜色方案变化，增加可靠性\nexport const systemDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n// 是否处于暗色模式 (根据当前主题模式和系统偏好计算)\nexport const isDark = computed<boolean>(() => {\n  switch (themeMode.value) {\n    case 'dark':\n      return true;\n    case 'light':\n      return false;\n    default:\n      return preferredDark.value;\n  }\n});\n\n// 切换暗色/亮色模式 (不再直接修改isDark)\nexport function toggleDark(): void {\n  themeMode.value = isDark.value ? 'light' : 'dark';\n}\n\n// 更新 HTML 类名\nconst updateHTMLClass = (): void => {\n  if (isDark.value) {\n    document.documentElement.classList.add('dark');\n    document.documentElement.style.colorScheme = 'dark';\n  } else {\n    document.documentElement.classList.remove('dark');\n    document.documentElement.style.colorScheme = 'light';\n  }\n};\n\n// 设置主题模式\nexport function setTheme(mode: ThemeMode): void {\n  themeMode.value = mode;\n}\n\n// 使用系统偏好\nexport function useSystemTheme(): void {\n  setTheme('system');\n}\n\n// 设置亮色模式\nexport function setLightTheme(): void {\n  setTheme('light');\n}\n\n// 设置暗色模式\nexport function setDarkTheme(): void {\n  setTheme('dark');\n}\n\n// 初始化主题 (通常在应用启动时调用)\nexport function initTheme(): void {\n  updateHTMLClass();\n  \n  // 页面加载后移除初始化类，允许过渡效果生效\n  window.setTimeout(() => {\n    document.documentElement.classList.remove('theme-initializing');\n    document.body.classList.remove('theme-initializing');\n  }, 100);\n}\n\n// 监视主题变化，自动更新类名\nwatch([isDark, themeMode], () => {\n  updateHTMLClass();\n}, { immediate: true });\n\n// 在每个组件中可以使用这些钩子来确保主题正确应用\nexport function useTheme() {\n  onMounted(() => {\n    updateHTMLClass();\n    \n    // 使用 MutationObserver 监听 class 变化\n    // 这有助于在其他代码可能修改了 class 的情况下保持一致性\n    const stopObserver = useMutationObserver(\n      document.documentElement,\n      (mutations) => {\n        for (const mutation of mutations) {\n          if (mutation.attributeName === 'class') {\n            // 确保 dark 类与 isDark 状态保持一致\n            const hasDarkClass = document.documentElement.classList.contains('dark');\n            if (hasDarkClass !== isDark.value) {\n              updateHTMLClass();\n            }\n          }\n        }\n      },\n      { attributes: true }\n    );\n    \n    onUnmounted(() => {\n      stopObserver.stop();\n    });\n  });\n  \n  return {\n    isDark,\n    themeMode,\n    preferredDark,\n    systemDarkMode,\n    toggleDark,\n    setTheme,\n    useSystemTheme,\n    setLightTheme,\n    setDarkTheme\n  };\n}\n\n// 这个代码片段更新为包含theme-initializing类\nexport const themeScript = `\n  (function() {\n    try {\n      document.documentElement.classList.add('theme-initializing');\n      document.body.classList.add('theme-initializing');\n      \n      var theme = localStorage.getItem('theme');\n      if (theme === 'dark' || (theme === null && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n        document.documentElement.classList.add('dark');\n        document.documentElement.style.colorScheme = 'dark';\n      } else {\n        document.documentElement.classList.remove('dark');\n        document.documentElement.style.colorScheme = 'light';\n      }\n    } catch (e) {}\n  })();\n`;\n\n// 导出默认对象，方便一次性导入所有功能\nexport default {\n  isDark,\n  themeMode,\n  preferredDark,\n  systemDarkMode,\n  toggleDark,\n  setTheme,\n  useSystemTheme,\n  setLightTheme,\n  setDarkTheme,\n  initTheme,\n  useTheme,\n  themeScript\n};\n"],"names":["themeMode","useLocalStorage","preferredDark","usePreferredDark","useMediaQuery","isDark","computed","toggleDark","updateHTMLClass","setTheme","mode","useSystemTheme","setLightTheme","setDarkTheme","watch"],"mappings":"gGAaO,MAAMA,EAAYC,EACvB,QACA,SACA,CAAE,uBAAwB,EAAK,CACjC,EAGaC,EAAgBC,EAAiB,EAGhBC,EAAc,8BAA8B,EAG7D,MAAAC,EAASC,EAAkB,IAAM,CAC5C,OAAQN,EAAU,MAAO,CACvB,IAAK,OACI,MAAA,GACT,IAAK,QACI,MAAA,GACT,QACE,OAAOE,EAAc,KAAA,CAE3B,CAAC,EAGM,SAASK,GAAmB,CACvBP,EAAA,MAAQK,EAAO,MAAQ,QAAU,MAC7C,CAGA,MAAMG,EAAkB,IAAY,CAC9BH,EAAO,OACA,SAAA,gBAAgB,UAAU,IAAI,MAAM,EACpC,SAAA,gBAAgB,MAAM,YAAc,SAEpC,SAAA,gBAAgB,UAAU,OAAO,MAAM,EACvC,SAAA,gBAAgB,MAAM,YAAc,QAEjD,EAGO,SAASI,EAASC,EAAuB,CAC9CV,EAAU,MAAQU,CACpB,CAGO,SAASC,GAAuB,CACrCF,EAAS,QAAQ,CACnB,CAGO,SAASG,GAAsB,CACpCH,EAAS,OAAO,CAClB,CAGO,SAASI,GAAqB,CACnCJ,EAAS,MAAM,CACjB,CAcAK,EAAM,CAACT,EAAQL,CAAS,EAAG,IAAM,CACfQ,EAAA,CAClB,EAAG,CAAE,UAAW,GAAM"}