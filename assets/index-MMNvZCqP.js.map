{"version":3,"file":"index-MMNvZCqP.js","sources":["../../src/libs/ModalBox/constant.ts","../../src/libs/ModalBox/ModalBox.tsx","../../src/libs/ModalBox/View.vue"],"sourcesContent":["export const THEME_COLOR_MAP = {\n  primary: 'blue',\n  secondary: 'gray',\n  success: 'green',\n  warning: 'yellow',\n  danger: 'red',\n  info: 'sky'\n} as const;\n","import { defineComponent, computed, PropType, Transition } from 'vue';\nimport type { ColorType, ThemeColorType, ModalBoxProps } from './types';\nimport { THEME_COLOR_MAP } from './constant';\n\nexport { ColorType, ThemeColorType, THEME_COLOR_MAP, type ModalBoxProps };\n\nexport default defineComponent({\n  name: 'ModalBox',\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: true,\n    },\n    theme: {\n      type: String as PropType<ColorType | ThemeColorType>,\n      default: 'primary',\n    },\n    fullscreen: {\n      type: Boolean,\n      default: false,\n    },\n    contentClass: {\n      type: String,\n      default: '',\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: true,\n    },\n    transitionDuration: {\n      type: Number,\n      default: 200,\n    },\n  } as const,\n  emits: ['update:modelValue', 'open', 'close'],\n\n  setup(props: ModalBoxProps, { emit, slots }) {\n    const isVisible = computed(() => props.modelValue);\n\n    // 计算动画持续时间的样式\n    const transitionStyle = computed(() => ({\n      '--transition-duration': `${props.transitionDuration || 200}ms`,\n    }));\n\n    const modalClass = computed(() => [\n      'relative transform-gpu',\n      props.fullscreen ? 'w-screen h-screen' : 'max-w-3xl mx-auto',\n      props.contentClass,\n    ]);\n\n    const handleOverlayClick = () => {\n      if (props.closeOnClickOverlay) {\n        emit('update:modelValue', false);\n        emit('close');\n      }\n    };\n\n    // 显示时触发 open 事件\n    const handleAfterEnter = () => {\n      emit('open');\n    };\n\n    // 根据模式选择不同的遮罩层样式\n    const overlayClass = computed(() => {\n      // 全屏模式使用实色背景，非全屏模式使用半透明背景\n      return props.fullscreen \n        ? 'bg-white dark:bg-gray-900' // 全屏模式使用浅色/深色实色背景\n        : 'bg-black/60 dark:bg-black/70'; // 普通模式使用黑色半透明遮罩\n    });\n\n    return () => (\n      <Transition\n        enterActiveClass=\"transition-opacity duration-300 ease-out\"\n        enterFromClass=\"opacity-0\"\n        enterToClass=\"opacity-100\"\n        leaveActiveClass=\"transition-opacity duration-200 ease-in\"\n        leaveFromClass=\"opacity-100\"\n        leaveToClass=\"opacity-0\"\n        onAfterEnter={handleAfterEnter}\n      >\n        {isVisible.value && (\n          <div class=\"fixed inset-0 z-50 overflow-auto\" style={transitionStyle.value}>\n            {/* 背景遮罩 - 根据全屏模式使用不同的样式 */}\n            <div\n              class={['fixed inset-0 z-0', overlayClass.value]}\n              onClick={handleOverlayClick}\n            />\n\n            {/* 模态框容器 */}\n            <div class=\"fixed inset-0 z-10 overflow-hidden\">\n              <div class={`flex min-h-full items-center justify-center ${!props.fullscreen ? 'p-4' : ''}`}>\n                <Transition\n                  enterActiveClass=\"transform-gpu transition-all ease-out\"\n                  enterFromClass=\"opacity-0 scale-95 blur-[1px]\"\n                  enterToClass=\"opacity-100 scale-100 blur-0\"\n                  leaveActiveClass=\"transform-gpu transition-all ease-in\"\n                  leaveFromClass=\"opacity-100 scale-100 blur-0\"\n                  leaveToClass=\"opacity-0 scale-95 blur-[1px]\"\n                >\n                  {isVisible.value && (\n                    <div \n                      class={modalClass.value} \n                      style={{\n                        transitionDuration: `${props.transitionDuration || 200}ms`,\n                      }}\n                    >\n                      {slots.default?.()}\n                    </div>\n                  )}\n                </Transition>\n              </div>\n            </div>\n          </div>\n        )}\n      </Transition>\n    );\n  },\n});\n","<template>\n  <div class=\"p-8 space-y-8\">\n    <h1 class=\"text-2xl font-bold mb-6\">ModalBox 模态框组件示例</h1>\n\n    <!-- 基础用法 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold\">基础用法</h2>\n      <button class=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700\"\n        @click=\"basicModalVisible = true\">\n        打开基础模态框\n      </button>\n      <ModalBox v-model=\"basicModalVisible\" theme=\"primary\">\n        <div class=\"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\">\n          <h3 class=\"text-lg font-medium mb-4 text-gray-900 dark:text-white\">基础模态框</h3>\n          <p class=\"text-gray-600 mb-4 dark:text-gray-300\">这是一个基础的模态框示例，使用 primary 主题色</p>\n          <div class=\"flex justify-end\">\n            <button\n              class=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700\"\n              @click=\"basicModalVisible = false\">\n              关闭\n            </button>\n          </div>\n        </div>\n      </ModalBox>\n    </section>\n\n    <!-- 全屏模式 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold\">全屏模式</h2>\n      <button\n        class=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700\"\n        @click=\"fullscreenModalVisible = true\">\n        打开全屏模态框\n      </button>\n      <ModalBox v-model=\"fullscreenModalVisible\" :fullscreen=\"true\" contentClass=\"flex items-center justify-center\"\n        theme=\"success\" :transitionDuration=\"300\">\n        <div class=\"w-full h-full flex flex-col bg-white text-gray-800 dark:bg-gray-900 dark:text-white\">\n          <div class=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n            <h3 class=\"text-2xl font-bold\">全屏模态框</h3>\n            <button\n              class=\"p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors w-10 h-10 flex items-center justify-center\"\n              @click=\"fullscreenModalVisible = false\">\n              <span class=\"icon-[solar--close-circle-bold] w-6 h-6\"></span>\n            </button>\n          </div>\n          <div class=\"flex-1 overflow-auto p-8\">\n            <div class=\"max-w-4xl mx-auto w-full\">\n              <p class=\"mb-6 text-lg\">这是一个全屏模式的模态框，使用简洁的配色方案，提供更好的内容阅读体验</p>\n              <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n                <div class=\"bg-gray-50 p-6 rounded-lg shadow-md dark:bg-gray-800\">\n                  <h4 class=\"text-xl font-medium mb-3\">内容区域 1</h4>\n                  <p class=\"text-gray-600 dark:text-gray-300\">全屏模态框适合展示复杂内容或需要用户全神贯注的任务</p>\n                </div>\n                <div class=\"bg-gray-50 p-6 rounded-lg shadow-md dark:bg-gray-800\">\n                  <h4 class=\"text-xl font-medium mb-3\">内容区域 2</h4>\n                  <p class=\"text-gray-600 dark:text-gray-300\">可以包含表单、图表、大型图片或视频等内容</p>\n                </div>\n                <div class=\"bg-gray-50 p-6 rounded-lg shadow-md dark:bg-gray-800\">\n                  <h4 class=\"text-xl font-medium mb-3\">内容区域 3</h4>\n                  <p class=\"text-gray-600 dark:text-gray-300\">使用简洁配色可以提供更好的视觉体验和内容可读性</p>\n                </div>\n              </div>\n              <div class=\"flex justify-end mt-4\">\n                <button\n                  class=\"px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors shadow-lg dark:bg-blue-600 dark:hover:bg-blue-700\"\n                  @click=\"fullscreenModalVisible = false\">\n                  关闭全屏\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ModalBox>\n    </section>\n\n    <!-- 主题颜色展示 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold\">主题颜色模式</h2>\n\n      <!-- 语义化主题色卡片 -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-4\">\n        <div class=\"bg-white rounded-lg p-5 shadow-sm dark:bg-gray-800\">\n          <h3 class=\"font-medium mb-3 text-gray-900 dark:text-white\">语义化主题 (ThemeColorType)</h3>\n          <p class=\"text-gray-500 dark:text-gray-400 text-sm mb-3\">点击查看对应的模态框效果</p>\n          <div class=\"flex flex-wrap gap-2\">\n            <button v-for=\"color in themeColors\" :key=\"color\"\n              class=\"px-3.5 py-2 text-white rounded-md transition-transform hover:scale-105\"\n              :class=\"getBgClassForThemeColor(color)\" @click=\"showThemeModal(color as ThemeColorType)\">\n              {{ color }}\n            </button>\n          </div>\n        </div>\n\n        <!-- 标准颜色卡片 -->\n        <div class=\"bg-white rounded-lg p-5 shadow-sm dark:bg-gray-800\">\n          <h3 class=\"font-medium mb-3 text-gray-900 dark:text-white\">标准色 (ColorType)</h3>\n          <p class=\"text-gray-500 dark:text-gray-400 text-sm mb-3\">点击查看对应的模态框效果</p>\n          <div class=\"grid grid-cols-3 sm:grid-cols-4 lg:grid-cols-6 gap-2\">\n            <button v-for=\"color in displayStandardColors\" :key=\"color\"\n              class=\"px-2 py-1.5 text-white text-sm rounded truncate transition-transform hover:scale-105\"\n              :class=\"`bg-${color}-500 dark:bg-${color}-600 hover:bg-${color}-600 dark:hover:bg-${color}-700`\"\n              @click=\"showColorModal(color as ColorType)\">\n              {{ color }}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 主题颜色模态框 -->\n      <ModalBox v-model=\"themeModalVisible\" :theme=\"currentTheme\">\n        <div class=\"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">{{ currentTheme }} 主题</h3>\n            <div class=\"px-2.5 py-1 text-xs font-medium rounded\" :class=\"getThemeTagClass()\">\n              {{ isThemeColor ? `实际颜色: ${getActualColor(currentTheme as ThemeColorType)}` : '标准颜色' }}\n            </div>\n          </div>\n          <p class=\"text-gray-600 mb-4 dark:text-gray-300\">\n            这是使用 {{ currentTheme }} 主题的模态框，现在使用统一的黑色半透明遮罩，获得更一致的视觉体验。\n          </p>\n          <div class=\"flex justify-end\">\n            <button class=\"px-4 py-2 text-white rounded-md\" :class=\"getThemeButtonClass()\"\n              @click=\"themeModalVisible = false\">\n              关闭\n            </button>\n          </div>\n        </div>\n      </ModalBox>\n    </section>\n\n    <!-- 图片查看器 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold\">图片查看器</h2>\n      <p class=\"text-gray-600 dark:text-gray-400 text-sm mb-3\">\n        ModalBox 非常适合用作图片查看器，点击图片查看大图效果\n      </p>\n      <div class=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n        <div v-for=\"(image, index) in sampleImages\" :key=\"index\"\n          class=\"aspect-square cursor-pointer overflow-hidden rounded-lg shadow-md hover:shadow-lg transition-all duration-300\"\n          @click=\"showImage(image)\">\n          <img :src=\"image.thumbnailUrl\" :alt=\"image.alt\"\n            class=\"w-full h-full object-cover hover:scale-110 transition-transform duration-300\" />\n        </div>\n      </div>\n\n      <!-- 图片查看模态框 -->\n      <ModalBox v-model=\"imageModalVisible\" :fullscreen=\"true\" contentClass=\"flex items-center justify-center\"\n        theme=\"info\" :transitionDuration=\"400\">\n        <div class=\"w-screen h-screen p-4 flex flex-col items-center justify-center relative\">\n          <img :src=\"currentImage?.url\" :alt=\"currentImage?.alt\"\n            class=\"max-w-[95vw] max-h-[90vh] w-auto h-auto object-contain select-none shadow-2xl rounded\" @click.stop\n            @contextmenu.prevent />\n\n          <!-- 关闭按钮 -->\n          <button\n            class=\"absolute top-4 right-4 p-2 rounded-full bg-black/30 hover:bg-black/50 text-white transition-all duration-200 w-10 h-10 flex items-center justify-center\"\n            @click=\"imageModalVisible = false\">\n            <span class=\"icon-[solar--close-circle-bold] w-6 h-6\"></span>\n          </button>\n\n          <!-- 图片描述 -->\n          <div class=\"mt-4 px-4 py-2 bg-black/30 text-white rounded-lg\">\n            {{ currentImage?.alt }}\n          </div>\n        </div>\n      </ModalBox>\n    </section>\n\n    <!-- 禁用遮罩层关闭 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold\">禁用遮罩层关闭</h2>\n      <button\n        class=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 dark:bg-purple-600 dark:hover:bg-purple-700\"\n        @click=\"noOverlayCloseModalVisible = true\">\n        打开模态框\n      </button>\n      <ModalBox v-model=\"noOverlayCloseModalVisible\" :closeOnClickOverlay=\"false\" theme=\"danger\"\n        :transitionDuration=\"250\">\n        <div class=\"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\">\n          <div class=\"flex items-center mb-4\">\n            <span class=\"icon-[solar--shield-warning-bold] w-5 h-5 text-red-500 mr-2\"></span>\n            <h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">禁用遮罩层关闭的模态框</h3>\n          </div>\n          <p class=\"text-gray-600 mb-4 dark:text-gray-300\">\n            这个模态框禁用了点击遮罩层关闭的功能，必须点击按钮才能关闭。适用于需要确认操作的场景。\n          </p>\n          <div class=\"flex justify-end\">\n            <button\n              class=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 dark:bg-red-600 dark:hover:bg-red-700\"\n              @click=\"noOverlayCloseModalVisible = false\">\n              我已了解，关闭\n            </button>\n          </div>\n        </div>\n      </ModalBox>\n    </section>\n\n    <!-- 自定义过渡动画 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold\">自定义过渡动画</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n        <div>\n          <button\n            class=\"px-4 py-2 bg-amber-500 text-white rounded hover:bg-amber-600 dark:bg-amber-600 dark:hover:bg-amber-700\"\n            @click=\"showTransitionModal('slow')\">\n            慢速动画 (600ms)\n          </button>\n          <p class=\"text-gray-500 dark:text-gray-400 text-sm mt-2\">展示更缓慢的过渡效果</p>\n        </div>\n\n        <div>\n          <button\n            class=\"px-4 py-2 bg-cyan-500 text-white rounded hover:bg-cyan-600 dark:bg-cyan-600 dark:hover:bg-cyan-700\"\n            @click=\"showTransitionModal('fast')\">\n            快速动画 (150ms)\n          </button>\n          <p class=\"text-gray-500 dark:text-gray-400 text-sm mt-2\">展示更迅速的过渡效果</p>\n        </div>\n      </div>\n\n      <!-- 自定义动画模态框 -->\n      <ModalBox v-model=\"transitionModalVisible\" :theme=\"transitionTheme\" :transitionDuration=\"transitionDuration\">\n        <div class=\"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\">\n          <h3 class=\"text-lg font-medium mb-4 text-gray-900 dark:text-white\">自定义过渡动画模态框</h3>\n          <p class=\"text-gray-600 mb-4 dark:text-gray-300\">\n            这个模态框使用了自定义的过渡动画速度 ({{ transitionDuration }}ms)\n          </p>\n          <div class=\"bg-gray-100 dark:bg-gray-700 p-3 rounded mb-4\">\n            <code class=\"text-sm\">:transitionDuration=\"{{ transitionDuration }}\"</code>\n          </div>\n          <div class=\"flex justify-end\">\n            <button class=\"px-4 py-2 text-white rounded\"\n              :class=\"transitionTheme === 'warning' ? 'bg-amber-500 hover:bg-amber-600 dark:bg-amber-600 dark:hover:bg-amber-700' : 'bg-cyan-500 hover:bg-cyan-600 dark:bg-cyan-600 dark:hover:bg-cyan-700'\"\n              @click=\"transitionModalVisible = false\">\n              关闭\n            </button>\n          </div>\n        </div>\n      </ModalBox>\n    </section>\n\n    <!-- 接口文档展示 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold\">组件接口</h2>\n      <div class=\"bg-white p-6 rounded-lg shadow-sm dark:bg-gray-800\">\n        <h3 class=\"font-medium mb-4 text-gray-900 dark:text-white\">ModalBoxProps 接口</h3>\n        <div class=\"bg-gray-100 p-4 rounded-lg overflow-auto dark:bg-gray-700\">\n          <pre class=\"text-sm text-gray-800 dark:text-gray-200\">\nexport interface ModalBoxProps {\n  /**\n   * 控制模态框的显示与隐藏\n   */\n  modelValue: boolean;\n  \n  /**\n   * 模态框主题颜色，可以是预设主题或具体颜色\n   * @default 'primary'\n   */\n  theme?: ColorType | ThemeColorType;\n  \n  /**\n   * 是否全屏显示\n   * @default false\n   */\n  fullscreen?: boolean;\n  \n  /**\n   * 内容区域的自定义类名\n   * @default ''\n   */\n  contentClass?: string;\n  \n  /**\n   * 是否点击遮罩层关闭模态框\n   * @default true\n   */\n  closeOnClickOverlay?: boolean;\n  \n  /**\n   * 过渡动画持续时间（毫秒）\n   * @default 200\n   */\n  transitionDuration?: number;\n}</pre>\n        </div>\n      </div>\n    </section>\n\n    <!-- API 文档部分 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">详细 API 文档</h2>\n      <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n        <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">属性 (Props)</h3>\n        <div class=\"mb-6 overflow-x-auto\">\n          <table class=\"min-w-full border-collapse\">\n            <thead>\n              <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">属性名</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">类型</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">默认值</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n              </tr>\n            </thead>\n            <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">modelValue</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">控制模态框显示状态（必填）</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">theme</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">ColorType | ThemeColorType</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'primary'</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">模态框主题颜色</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">fullscreen</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否全屏显示模态框</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">contentClass</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">内容区域的自定义类名</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">closeOnClickOverlay</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">true</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否允许点击遮罩层关闭模态框</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">transitionDuration</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">number</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">200</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">过渡动画持续时间（毫秒）</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">事件 (Events)</h3>\n        <div class=\"mb-6 overflow-x-auto\">\n          <table class=\"min-w-full border-collapse\">\n            <thead>\n              <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">事件名</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">参数</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">说明</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">update:modelValue</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">(value: boolean)</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">当模态框显示状态变化时触发</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">open</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">当模态框打开时触发</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">close</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">当模态框关闭时触发</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">插槽 (Slots)</h3>\n        <div class=\"overflow-x-auto\">\n          <table class=\"min-w-full border-collapse\">\n            <thead>\n              <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">插槽名</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">说明</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">default</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">模态框的内容</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </section>\n\n    <!-- 主题颜色部分 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">主题与颜色系统</h2>\n      <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n        <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">语义化主题</h3>\n        <div class=\"mb-4\">\n          <p class=\"text-gray-700 dark:text-gray-300 mb-2\">\n            ModalBox 组件支持以下语义化主题，每个主题映射到特定的颜色：\n          </p>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full border-collapse\">\n              <thead>\n                <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                  <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">主题</th>\n                  <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">对应颜色</th>\n                  <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">用途</th>\n                </tr>\n              </thead>\n              <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                <tr>\n                  <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">primary</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">blue</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">主要操作、强调内容</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">secondary</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">gray</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">次要操作、中性内容</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">success</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">green</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">成功操作、积极反馈</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">warning</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">yellow</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">警告提示、需要注意</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">danger</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">red</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">危险操作、错误提示</td>\n                </tr>\n                <tr>\n                  <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">info</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">sky</td>\n                  <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">信息提示、中性通知</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <h3 class=\"mb-3 mt-6 text-lg font-medium text-gray-900 dark:text-white\">标准颜色系统</h3>\n        <p class=\"text-gray-700 dark:text-gray-300 mb-2\">\n          除了语义化主题，组件还支持直接使用 Tailwind CSS 的标准颜色：\n        </p>\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 mb-4\">\n          <div>\n            <h4 class=\"text-base font-medium mb-1 text-gray-900 dark:text-white\">灰色系</h4>\n            <ul class=\"list-disc pl-5 text-sm text-gray-700 dark:text-gray-300\">\n              <li>slate, gray, zinc, neutral, stone</li>\n            </ul>\n          </div>\n          <div>\n            <h4 class=\"text-base font-medium mb-1 text-gray-900 dark:text-white\">暖色系</h4>\n            <ul class=\"list-disc pl-5 text-sm text-gray-700 dark:text-gray-300\">\n              <li>red, orange, amber, yellow</li>\n            </ul>\n          </div>\n          <div>\n            <h4 class=\"text-base font-medium mb-1 text-gray-900 dark:text-white\">绿色系</h4>\n            <ul class=\"list-disc pl-5 text-sm text-gray-700 dark:text-gray-300\">\n              <li>lime, green, emerald, teal</li>\n            </ul>\n          </div>\n          <div>\n            <h4 class=\"text-base font-medium mb-1 text-gray-900 dark:text-white\">蓝色系</h4>\n            <ul class=\"list-disc pl-5 text-sm text-gray-700 dark:text-gray-300\">\n              <li>cyan, sky, blue, indigo</li>\n            </ul>\n          </div>\n          <div>\n            <h4 class=\"text-base font-medium mb-1 text-gray-900 dark:text-white\">紫粉色系</h4>\n            <ul class=\"list-disc pl-5 text-sm text-gray-700 dark:text-gray-300\">\n              <li>violet, purple, fuchsia, pink, rose</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- 小结与最佳实践 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">小结与最佳实践</h2>\n      <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n        <div class=\"space-y-4\">\n          <p class=\"text-gray-700 dark:text-gray-300\">\n            ModalBox 是一个灵活的模态框组件，适用于各种场景，如信息展示、表单提交、确认操作和图片查看等。\n            以下是一些使用建议：\n          </p>\n\n          <ul class=\"ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300\">\n            <li>根据内容的重要性和用途选择合适的主题颜色，如\n              <span class=\"inline-block px-2 py-0.5 text-xs font-medium rounded bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">primary</span>\n              用于主要信息，\n              <span class=\"inline-block px-2 py-0.5 text-xs font-medium rounded bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300\">danger</span>\n              用于警告或删除确认\n            </li>\n            <li>为重要或复杂的内容使用\n              <span class=\"inline-block px-2 py-0.5 text-xs font-medium rounded bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300\">fullscreen</span>\n              属性，提供沉浸式体验\n            </li>\n            <li>对于需要用户确认的重要操作，设置\n              <span class=\"inline-block px-2 py-0.5 text-xs font-medium rounded bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300\">closeOnClickOverlay: false</span>\n              避免误触关闭\n            </li>\n            <li>通过\n              <span class=\"inline-block px-2 py-0.5 text-xs font-medium rounded bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300\">contentClass</span>\n              属性添加自定义样式，增强视觉效果和用户体验\n            </li>\n            <li>根据内容复杂度和用户期望，调整\n              <span class=\"inline-block px-2 py-0.5 text-xs font-medium rounded bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300\">transitionDuration</span>\n              实现更平滑的动画效果\n            </li>\n          </ul>\n\n          <div class=\"rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20\">\n            <h4 class=\"mb-2 flex items-center text-blue-800 dark:text-blue-300\">\n              <span class=\"icon-[material-symbols--info-outline-rounded] mr-2 h-5 w-5\"></span>\n              全屏模式提示\n            </h4>\n            <p class=\"text-sm text-blue-700 dark:text-blue-300\">\n              全屏模式下，模态框不再使用半透明遮罩，而是采用实色背景以提供更好的内容可读性。适用于内容丰富、需要用户专注的场景，如图片查看、复杂表单或数据详情展示。\n            </p>\n          </div>\n\n          <div class=\"rounded-lg bg-gray-50 p-4 dark:bg-gray-700/30\">\n            <h4 class=\"mb-2 text-base font-medium text-gray-900 dark:text-white\">常见使用场景</h4>\n            <ul class=\"space-y-1 text-sm text-gray-600 dark:text-gray-300\">\n              <li>• 表单提交：收集用户输入数据</li>\n              <li>• 确认对话框：请求用户确认重要操作</li>\n              <li>• 详情展示：显示项目的详细信息</li>\n              <li>• 图片查看器：以全屏模式展示图片</li>\n              <li>• 通知和警告：显示重要提示信息</li>\n            </ul>\n          </div>\n\n          <p class=\"text-gray-700 dark:text-gray-300\">\n            在设计模态框时，内容的层次结构和视觉引导非常重要。推荐在模态框中包含明确的标题、内容区和操作按钮区，\n            并使用适当的间距和颜色对比度来提高可读性。\n          </p>\n\n          <div class=\"rounded-lg bg-gray-50 p-4 dark:bg-gray-700/30 mt-2\">\n            <h4 class=\"mb-2 text-base font-medium text-gray-900 dark:text-white\">模态框内容组织示例</h4>\n            <pre class=\"text-xs overflow-auto text-gray-600 dark:text-gray-300\">\n&lt;ModalBox v-model=\"showModal\" theme=\"primary\"&gt;\n  &lt;div class=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md\"&gt;\n    &lt;!-- 标题区域 --&gt;\n    &lt;div class=\"flex justify-between items-center mb-4\"&gt;\n      &lt;h3 class=\"text-lg font-medium\"&gt;模态框标题&lt;/h3&gt;\n      &lt;button @click=\"showModal = false\"&gt;关闭&lt;/button&gt;\n    &lt;/div&gt;\n    \n    &lt;!-- 内容区域 --&gt;\n    &lt;div class=\"py-2\"&gt;\n      &lt;p&gt;模态框内容...&lt;/p&gt;\n    &lt;/div&gt;\n    \n    &lt;!-- 按钮区域 --&gt;\n    &lt;div class=\"flex justify-end gap-2 mt-4\"&gt;\n      &lt;button @click=\"showModal = false\"&gt;取消&lt;/button&gt;\n      &lt;button @click=\"handleConfirm\"&gt;确认&lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/ModalBox&gt;</pre>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue';\nimport ModalBox, { ColorType, ThemeColorType, THEME_COLOR_MAP } from './ModalBox';\n\n// Modal visibility states\nconst basicModalVisible = ref(false);\nconst fullscreenModalVisible = ref(false);\nconst imageModalVisible = ref(false);\nconst noOverlayCloseModalVisible = ref(false);\nconst themeModalVisible = ref(false);\nconst transitionModalVisible = ref(false);\n\n// 过渡动画设置\nconst transitionDuration = ref(600);\nconst transitionTheme = ref<ThemeColorType | ColorType>('warning');\n\n// 颜色选择状态\nconst currentTheme = ref<ColorType | ThemeColorType>('primary');\nconst isThemeColor = computed(() => themeColors.includes(currentTheme.value as ThemeColorType));\n\n// 获取主题色对应的实际颜色\nconst getActualColor = (theme: ThemeColorType): ColorType => {\n  return THEME_COLOR_MAP[theme];\n};\n\n// 可用的主题色和标准色列表\nconst themeColors: ThemeColorType[] = ['primary', 'secondary', 'success', 'warning', 'danger', 'info'];\n\n// 为了UI整洁，只显示部分标准色\nconst displayStandardColors: ColorType[] = [\n  'red', 'orange', 'amber', 'yellow',\n  'lime', 'green', 'emerald', 'teal',\n  'cyan', 'sky', 'blue', 'indigo',\n  'violet', 'purple', 'pink', 'rose',\n  'slate', 'gray'\n];\n\nconst standardColors: ColorType[] = [\n  'slate', 'gray', 'zinc', 'neutral', 'stone',\n  'red', 'orange', 'amber', 'yellow',\n  'lime', 'green', 'emerald', 'teal',\n  'cyan', 'sky', 'blue', 'indigo',\n  'violet', 'purple', 'fuchsia', 'pink', 'rose'\n];\n\n// 展示主题色模态框\nconst showThemeModal = (theme: ThemeColorType) => {\n  currentTheme.value = theme;\n  themeModalVisible.value = true;\n};\n\n// 展示标准色模态框\nconst showColorModal = (color: ColorType) => {\n  currentTheme.value = color;\n  themeModalVisible.value = true;\n};\n\n// 展示自定义过渡动画模态框\nconst showTransitionModal = (speed: 'slow' | 'fast') => {\n  if (speed === 'slow') {\n    transitionDuration.value = 600;\n    transitionTheme.value = 'warning';\n  } else {\n    transitionDuration.value = 150;\n    transitionTheme.value = 'cyan';\n  }\n  transitionModalVisible.value = true;\n};\n\n// 获取主题色按钮的背景类\nconst getBgClassForThemeColor = (theme: ThemeColorType) => {\n  const color = getActualColor(theme);\n  return getColorClassForButton(color);\n};\n\n// 获取模态框按钮样式\nconst getButtonClass = () => {\n  if (isThemeColor.value) {\n    const color = getActualColor(currentTheme.value as ThemeColorType);\n    return getColorClassForButton(color);\n  } else {\n    return getColorClassForButton(currentTheme.value as ColorType);\n  }\n};\n\n// 修改获取标签颜色类的方法，避免动态生成完整的类名（这会导致Tailwind无法识别）\nconst getThemeTagClass = () => {\n  if (isThemeColor.value) {\n    const color = getActualColor(currentTheme.value as ThemeColorType);\n    // 使用预定义的颜色类映射\n    return getColorClassForTag(color);\n  } else {\n    // 使用预定义的颜色类映射\n    return getColorClassForTag(currentTheme.value as ColorType);\n  }\n};\n\n// 预定义的颜色类映射，避免动态拼接类名\nconst getColorClassForTag = (color: ColorType) => {\n  const colorMap: Record<ColorType, string> = {\n    slate: 'bg-slate-100 dark:bg-slate-900/30 text-slate-800 dark:text-slate-300',\n    gray: 'bg-gray-100 dark:bg-gray-900/30 text-gray-800 dark:text-gray-300',\n    zinc: 'bg-zinc-100 dark:bg-zinc-900/30 text-zinc-800 dark:text-zinc-300',\n    neutral: 'bg-neutral-100 dark:bg-neutral-900/30 text-neutral-800 dark:text-neutral-300',\n    stone: 'bg-stone-100 dark:bg-stone-900/30 text-stone-800 dark:text-stone-300',\n\n    red: 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-300',\n    orange: 'bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-300',\n    amber: 'bg-amber-100 dark:bg-amber-900/30 text-amber-800 dark:text-amber-300',\n    yellow: 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-300',\n\n    lime: 'bg-lime-100 dark:bg-lime-900/30 text-lime-800 dark:text-lime-300',\n    green: 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300',\n    emerald: 'bg-emerald-100 dark:bg-emerald-900/30 text-emerald-800 dark:text-emerald-300',\n    teal: 'bg-teal-100 dark:bg-teal-900/30 text-teal-800 dark:text-teal-300',\n\n    cyan: 'bg-cyan-100 dark:bg-cyan-900/30 text-cyan-800 dark:text-cyan-300',\n    sky: 'bg-sky-100 dark:bg-sky-900/30 text-sky-800 dark:text-sky-300',\n    blue: 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300',\n    indigo: 'bg-indigo-100 dark:bg-indigo-900/30 text-indigo-800 dark:text-indigo-300',\n\n    violet: 'bg-violet-100 dark:bg-violet-900/30 text-violet-800 dark:text-violet-300',\n    purple: 'bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300',\n    fuchsia: 'bg-fuchsia-100 dark:bg-fuchsia-900/30 text-fuchsia-800 dark:text-fuchsia-300',\n    pink: 'bg-pink-100 dark:bg-pink-900/30 text-pink-800 dark:text-pink-300',\n    rose: 'bg-rose-100 dark:bg-rose-900/30 text-rose-800 dark:text-rose-300'\n  };\n\n  return colorMap[color] || colorMap.blue;\n};\n\n// 修改获取按钮样式的方法，避免动态拼接类名\nconst getThemeButtonClass = () => {\n  if (isThemeColor.value) {\n    const color = getActualColor(currentTheme.value as ThemeColorType);\n    // 使用预定义的按钮颜色类映射\n    return getColorClassForButton(color);\n  } else {\n    // 使用预定义的按钮颜色类映射\n    return getColorClassForButton(currentTheme.value as ColorType);\n  }\n};\n\n// 预定义的按钮颜色类映射\nconst getColorClassForButton = (color: ColorType) => {\n  const buttonColorMap: Record<ColorType, string> = {\n    slate: 'bg-slate-500 dark:bg-slate-600 hover:bg-slate-600 dark:hover:bg-slate-700',\n    gray: 'bg-gray-500 dark:bg-gray-600 hover:bg-gray-600 dark:hover:bg-gray-700',\n    zinc: 'bg-zinc-500 dark:bg-zinc-600 hover:bg-zinc-600 dark:hover:bg-zinc-700',\n    neutral: 'bg-neutral-500 dark:bg-neutral-600 hover:bg-neutral-600 dark:hover:bg-neutral-700',\n    stone: 'bg-stone-500 dark:bg-stone-600 hover:bg-stone-600 dark:hover:bg-stone-700',\n\n    red: 'bg-red-500 dark:bg-red-600 hover:bg-red-600 dark:hover:bg-red-700',\n    orange: 'bg-orange-500 dark:bg-orange-600 hover:bg-orange-600 dark:hover:bg-orange-700',\n    amber: 'bg-amber-500 dark:bg-amber-600 hover:bg-amber-600 dark:hover:bg-amber-700',\n    yellow: 'bg-yellow-500 dark:bg-yellow-600 hover:bg-yellow-600 dark:hover:bg-yellow-700',\n\n    lime: 'bg-lime-500 dark:bg-lime-600 hover:bg-lime-600 dark:hover:bg-lime-700',\n    green: 'bg-green-500 dark:bg-green-600 hover:bg-green-600 dark:hover:bg-green-700',\n    emerald: 'bg-emerald-500 dark:bg-emerald-600 hover:bg-emerald-600 dark:hover:bg-emerald-700',\n    teal: 'bg-teal-500 dark:bg-teal-600 hover:bg-teal-600 dark:hover:bg-teal-700',\n\n    cyan: 'bg-cyan-500 dark:bg-cyan-600 hover:bg-cyan-600 dark:hover:bg-cyan-700',\n    sky: 'bg-sky-500 dark:bg-sky-600 hover:bg-sky-600 dark:hover:bg-sky-700',\n    blue: 'bg-blue-500 dark:bg-blue-600 hover:bg-blue-600 dark:hover:bg-blue-700',\n    indigo: 'bg-indigo-500 dark:bg-indigo-600 hover:bg-indigo-600 dark:hover:bg-indigo-700',\n\n    violet: 'bg-violet-500 dark:bg-violet-600 hover:bg-violet-600 dark:hover:bg-violet-700',\n    purple: 'bg-purple-500 dark:bg-purple-600 hover:bg-purple-600 dark:hover:bg-purple-700',\n    fuchsia: 'bg-fuchsia-500 dark:bg-fuchsia-600 hover:bg-fuchsia-600 dark:hover:bg-fuchsia-700',\n    pink: 'bg-pink-500 dark:bg-pink-600 hover:bg-pink-600 dark:hover:bg-pink-700',\n    rose: 'bg-rose-500 dark:bg-rose-600 hover:bg-rose-600 dark:hover:bg-rose-700'\n  };\n\n  return buttonColorMap[color] || buttonColorMap.blue;\n};\n\ninterface ImageType {\n  url: string;\n  thumbnailUrl: string;\n  alt: string;\n}\n\nconst currentImage = ref<ImageType | null>(null);\n\nconst sampleImages = [\n  {\n    url: \"https://picsum.photos/1200/800\",\n    thumbnailUrl: \"https://picsum.photos/400/400\",\n    alt: \"示例图片 1 - 自然风光\",\n  },\n  {\n    url: \"https://picsum.photos/1200/801\",\n    thumbnailUrl: \"https://picsum.photos/400/401\",\n    alt: \"示例图片 2 - 城市景观\",\n  },\n  {\n    url: \"https://picsum.photos/1200/802\",\n    thumbnailUrl: \"https://picsum.photos/400/402\",\n    alt: \"示例图片 3 - 抽象艺术\",\n  },\n];\n\nconst showImage = (image: ImageType) => {\n  currentImage.value = image;\n  imageModalVisible.value = true;\n};\n</script>"],"names":["THEME_COLOR_MAP","defineComponent","name","props","modelValue","type","Boolean","required","theme","String","default","fullscreen","contentClass","closeOnClickOverlay","transitionDuration","Number","emits","setup","emit","slots","isVisible","computed","transitionStyle","modalClass","handleOverlayClick","handleAfterEnter","overlayClass","_createVNode","Transition","value","basicModalVisible","ref","fullscreenModalVisible","imageModalVisible","noOverlayCloseModalVisible","themeModalVisible","transitionModalVisible","transitionTheme","currentTheme","isThemeColor","themeColors","getActualColor","displayStandardColors","showThemeModal","showColorModal","color","showTransitionModal","speed","getBgClassForThemeColor","getColorClassForButton","getThemeTagClass","getColorClassForTag","colorMap","getThemeButtonClass","buttonColorMap","currentImage","sampleImages","showImage","image"],"mappings":"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"}