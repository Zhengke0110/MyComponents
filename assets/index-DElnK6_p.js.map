{"version":3,"file":"index-DElnK6_p.js","sources":["../../src/libs/Spin/Spin.tsx","../../src/libs/Spin/View.vue"],"sourcesContent":["import { defineComponent, ref, Transition, PropType, h, VNode, Slot, onMounted, onBeforeUnmount, reactive, watch } from 'vue';\n\ntype SpinSize = 'small' | 'default' | 'large';\n\n// 默认加载指示符\nlet defaultIndicator: any = null;\n\n// 全局设置默认指示符的方法\nexport const setDefaultIndicator = (options: { indicator: VNode }) => {\n    defaultIndicator = options.indicator;\n};\n\nexport default defineComponent({\n    name: 'Spin',\n    props: {\n        spinning: {\n            type: Boolean,\n            default: true,\n        },\n        delay: {\n            type: Number,\n        },\n        size: {\n            type: String as PropType<SpinSize>,\n            default: 'default',\n            validator: (val: string): boolean => ['small', 'default', 'large'].includes(val),\n        },\n        tip: {\n            type: String,\n        },\n        wrapperClassName: {\n            type: String,\n            default: '',\n        },\n        indicator: {\n            type: [Object, Function] as PropType<VNode | Slot>,\n        },\n    },\n    setup(props, { slots }) {\n        // 控制显示状态\n        const shouldShowSpin = ref(props.spinning && !props.delay);\n\n        // 延时计时器\n        let delayTimer: ReturnType<typeof setTimeout> | null = null;\n\n        // 监听 spinning 和 delay 变化\n        watch(\n            () => [props.spinning, props.delay],\n            ([spinning, delay]) => {\n                if (delayTimer) {\n                    clearTimeout(delayTimer);\n                    delayTimer = null;\n                }\n\n                if (spinning && delay) {\n                    delayTimer = setTimeout(() => {\n                        shouldShowSpin.value = !!spinning;\n                    }, typeof delay === 'number' ? delay : 0);\n                } else {\n                    shouldShowSpin.value = !!spinning;\n                }\n            },\n            { immediate: true }\n        );\n\n        // 组件卸载时清除计时器\n        onBeforeUnmount(() => {\n            if (delayTimer) {\n                clearTimeout(delayTimer);\n                delayTimer = null;\n            }\n        });\n\n        // 根据大小返回适当的类名\n        const getSpinSizeClass = (size: SpinSize) => {\n            switch (size) {\n                case 'small':\n                    return 'w-5 h-5';\n                case 'large':\n                    return 'w-10 h-10';\n                default:\n                    return 'w-8 h-8';\n            }\n        };\n\n        // 构建指示器\n        const renderIndicator = () => {\n            // 优先使用自定义指示器\n            if (props.indicator) {\n                if (typeof props.indicator === 'function') {\n                    return props.indicator();\n                }\n                return props.indicator;\n            }\n\n            // 其次使用全局默认指示器\n            if (defaultIndicator) {\n                return defaultIndicator;\n            }\n\n            // 最后使用默认指示器\n            return (\n                <div class={`animate-spin rounded-full border-4 border-t-transparent ${getSpinSizeClass(props.size)} dark:border-gray-600 dark:border-t-transparent border-blue-500`}></div>\n            );\n        };\n\n        // 渲染提示文本\n        const renderTip = () => {\n            if (slots.tip) {\n                return <div class=\"mt-2 text-sm text-gray-600 dark:text-gray-300\">{slots.tip()}</div>;\n            } else if (props.tip) {\n                return <div class=\"mt-2 text-sm text-gray-600 dark:text-gray-300\">{props.tip}</div>;\n            }\n            return null;\n        };\n\n        return () => {\n            // 如果有默认插槽，则为包装模式\n            const hasChildren = slots.default;\n\n            if (hasChildren) {\n                const containerClass = [\n                    'relative',\n                    props.wrapperClassName,\n                ].filter(Boolean).join(' ');\n\n                return (\n                    <div class={containerClass}>\n                        <div class={`${!shouldShowSpin.value ? 'opacity-100' : 'opacity-50'} transition-opacity duration-300`}>\n                            {slots.default?.()}\n                        </div>\n\n                        {shouldShowSpin.value && (\n                            <div class=\"absolute inset-0 flex items-center justify-center flex-col bg-white/30 dark:bg-black/30 backdrop-blur-[2px] z-10\">\n                                {renderIndicator()}\n                                {renderTip()}\n                            </div>\n                        )}\n                    </div>\n                );\n            }\n\n            // 独立使用模式\n            return (\n                <Transition name=\"fade\" appear>\n                    {shouldShowSpin.value && (\n                        <div class=\"inline-flex flex-col items-center justify-center\">\n                            {renderIndicator()}\n                            {renderTip()}\n                        </div>\n                    )}\n                </Transition>\n            );\n        };\n    },\n});\n","<template>\n    <div class=\"p-8 transition-colors duration-500 bg-gray-50 dark:bg-gray-900 min-h-screen\">\n        <h1 class=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white flex items-center\">\n            <span class=\"mr-3 text-blue-500 dark:text-blue-400\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8\" viewBox=\"0 0 24 24\" fill=\"none\"\n                    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                    <path d=\"M12 6v6l4 2\"></path>\n                </svg>\n            </span>\n            加载中 Spin\n        </h1>\n        <p class=\"mb-10 text-gray-600 dark:text-gray-300 max-w-3xl\">\n            Spin 用于页面和区块的加载中状态。当页面局部处于等待异步数据或正在渲染过程时，合适的加载动效会有效缓解用户的焦虑。\n        </p>\n\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <!-- 基础用法展示区 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-blue-500 dark:bg-blue-400 rounded-full mr-3\"></div>\n                    基础用法\n                </h2>\n                <div class=\"space-y-8 mb-4\">\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">默认加载效果</p>\n                        <div\n                            class=\"flex justify-center p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg\">\n                            <Spin />\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">不同尺寸</p>\n                        <div\n                            class=\"flex justify-around items-center p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg\">\n                            <div class=\"flex flex-col items-center\">\n                                <Spin size=\"small\" />\n                                <span class=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">小型</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <Spin />\n                                <span class=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">默认</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <Spin size=\"large\" />\n                                <span class=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">大型</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">带有文字提示</p>\n                        <div\n                            class=\"flex justify-center p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg\">\n                            <Spin tip=\"加载中...\" />\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 自定义指示符展示区 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-green-500 dark:bg-green-400 rounded-full mr-3\"></div>\n                    自定义指示符\n                </h2>\n                <div class=\"space-y-8 mb-4\">\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">自定义旋转图标</p>\n                        <div\n                            class=\"flex justify-center p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg\">\n                            <Spin :indicator=\"customIndicator1\" />\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">自定义动画加载图标</p>\n                        <div\n                            class=\"flex justify-center p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg\">\n                            <Spin :indicator=\"customIndicator2\" tip=\"数据加载中...\" />\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">使用插槽提示文本</p>\n                        <div\n                            class=\"flex justify-center p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg\">\n                            <Spin>\n                                <template #tip>\n                                    <span\n                                        class=\"text-blue-500 dark:text-blue-400 font-medium animate-pulse\">努力加载中...</span>\n                                </template>\n                            </Spin>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 延迟加载展示 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-purple-500 dark:bg-purple-400 rounded-full mr-3\"></div>\n                    延迟与控制\n                </h2>\n                <div class=\"space-y-8\">\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">延迟显示 (1000ms)</p>\n                        <div\n                            class=\"flex justify-center p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg min-h-[120px]\">\n                            <Spin :spinning=\"delayedSpinning\" :delay=\"1000\" tip=\"延迟显示中...\" />\n                        </div>\n                        <div class=\"mt-4 flex justify-center\">\n                            <button @click=\"toggleDelayedSpinning\"\n                                class=\"px-4 py-2 rounded transition-colors duration-300\"\n                                :class=\"delayedSpinning ? 'bg-red-500 hover:bg-red-600 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'\">\n                                {{ delayedSpinning ? \"停止加载\" : \"开始加载\" }}\n                            </button>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">手动控制显示状态</p>\n                        <div\n                            class=\"flex justify-center p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg min-h-[120px]\">\n                            <Spin :spinning=\"controlledSpinning\" tip=\"受控加载中...\" />\n                        </div>\n                        <div class=\"mt-4 flex justify-center space-x-4\">\n                            <button @click=\"startSpinning\"\n                                class=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded transition-colors duration-300\">\n                                开始加载\n                            </button>\n                            <button @click=\"stopSpinning\"\n                                class=\"px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded transition-colors duration-300\">\n                                停止加载\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 包装容器展示 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-yellow-500 dark:bg-yellow-400 rounded-full mr-3\"></div>\n                    包装容器\n                </h2>\n                <div class=\"space-y-8\">\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">包装卡片内容</p>\n                        <Spin :spinning=\"cardLoading\" tip=\"正在加载内容...\" wrapperClassName=\"rounded-lg overflow-hidden\">\n                            <div class=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4 min-h-[200px]\">\n                                <h4 class=\"font-medium text-gray-700 dark:text-gray-300\">卡片内容</h4>\n                                <p class=\"text-gray-500 dark:text-gray-400 mt-2\">\n                                    这是一个被 Spin 组件包裹的内容区域，当加载状态为 true 时会显示加载动画。\n                                </p>\n                                <div class=\"mt-4 flex gap-2\">\n                                    <span v-for=\"i in 3\" :key=\"i\"\n                                        class=\"inline-block px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded\">\n                                        标签 {{ i }}\n                                    </span>\n                                </div>\n                                <div class=\"mt-4 flex justify-end\">\n                                    <button\n                                        class=\"px-3 py-1.5 text-sm bg-blue-500 hover:bg-blue-600 text-white rounded transition-colors duration-300\">\n                                        操作按钮\n                                    </button>\n                                </div>\n                            </div>\n                        </Spin>\n                        <div class=\"mt-4 flex justify-center\">\n                            <button @click=\"toggleCardLoading\" class=\"px-4 py-2 rounded transition-colors duration-300\"\n                                :class=\"cardLoading ? 'bg-red-500 hover:bg-red-600 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'\">\n                                {{ cardLoading ? \"停止加载\" : \"开始加载\" }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 列表加载场景展示 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md col-span-1 lg:col-span-2\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-red-500 dark:bg-red-400 rounded-full mr-3\"></div>\n                    应用场景\n                </h2>\n\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                    <!-- 表格加载 -->\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">表格加载</p>\n                        <Spin :spinning=\"tableLoading\" tip=\"加载数据中...\" wrapperClassName=\"rounded-lg overflow-hidden\">\n                            <div\n                                class=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden\">\n                                <div\n                                    class=\"bg-gray-50 dark:bg-gray-700 p-3 border-b border-gray-200 dark:border-gray-600\">\n                                    <div class=\"flex justify-between items-center\">\n                                        <h5 class=\"font-medium text-gray-700 dark:text-gray-300\">用户列表</h5>\n                                        <button\n                                            class=\"p-1 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors duration-300\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\"\n                                                class=\"h-5 w-5 text-gray-500 dark:text-gray-400\" viewBox=\"0 0 20 20\"\n                                                fill=\"currentColor\">\n                                                <path fill-rule=\"evenodd\"\n                                                    d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\"\n                                                    clip-rule=\"evenodd\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                                    <div class=\"flex items-center p-3\" v-for=\"i in 5\" :key=\"i\">\n                                        <div class=\"w-8 h-8 bg-gray-100 dark:bg-gray-600 rounded-full\"></div>\n                                        <div class=\"ml-3\">\n                                            <div class=\"text-sm font-medium text-gray-800 dark:text-gray-200\">用户 {{ i }}\n                                            </div>\n                                            <div class=\"text-xs text-gray-500 dark:text-gray-400\">user{{ i\n                                            }}@example.com</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Spin>\n                        <div class=\"mt-4 flex justify-center\">\n                            <button @click=\"toggleTableLoading\" class=\"px-4 py-2 rounded transition-colors duration-300\"\n                                :class=\"tableLoading ? 'bg-red-500 hover:bg-red-600 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'\">\n                                {{ tableLoading ? \"停止加载\" : \"开始加载\" }}\n                            </button>\n                        </div>\n                    </div>\n\n                    <!-- 全屏加载效果 -->\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">页面加载</p>\n                        <div\n                            class=\"relative bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 min-h-[300px]\">\n                            <div class=\"p-4\">\n                                <h5 class=\"font-medium text-gray-700 dark:text-gray-300 mb-4\">页面内容</h5>\n                                <div class=\"space-y-3\">\n                                    <div class=\"h-4 bg-gray-100 dark:bg-gray-700 rounded w-full\"></div>\n                                    <div class=\"h-4 bg-gray-100 dark:bg-gray-700 rounded w-5/6\"></div>\n                                    <div class=\"h-4 bg-gray-100 dark:bg-gray-700 rounded w-4/6\"></div>\n                                </div>\n                                <div class=\"mt-6 space-y-2\">\n                                    <div class=\"flex items-center space-x-3\">\n                                        <div class=\"w-12 h-12 bg-gray-100 dark:bg-gray-700 rounded\"></div>\n                                        <div class=\"flex-1\">\n                                            <div class=\"h-4 bg-gray-100 dark:bg-gray-700 rounded w-3/4\"></div>\n                                            <div class=\"h-3 bg-gray-100 dark:bg-gray-700 rounded w-1/2 mt-2\"></div>\n                                        </div>\n                                    </div>\n                                    <div class=\"flex items-center space-x-3\">\n                                        <div class=\"w-12 h-12 bg-gray-100 dark:bg-gray-700 rounded\"></div>\n                                        <div class=\"flex-1\">\n                                            <div class=\"h-4 bg-gray-100 dark:bg-gray-700 rounded w-3/4\"></div>\n                                            <div class=\"h-3 bg-gray-100 dark:bg-gray-700 rounded w-1/2 mt-2\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- 全屏加载中覆盖层 -->\n                            <div class=\"absolute inset-0 bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm flex items-center justify-center transition-opacity duration-500\"\n                                :class=\"fullscreenLoading ? 'opacity-100' : 'opacity-0 pointer-events-none'\">\n                                <div class=\"flex flex-col items-center\">\n                                    <Spin :indicator=\"fullscreenIndicator\" size=\"large\" />\n                                    <div class=\"mt-4 text-blue-600 dark:text-blue-400 font-medium animate-pulse\">\n                                        页面加载中...</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"mt-4 flex justify-center\">\n                            <button @click=\"toggleFullscreenLoading\"\n                                class=\"px-4 py-2 rounded transition-colors duration-300\"\n                                :class=\"fullscreenLoading ? 'bg-red-500 hover:bg-red-600 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'\">\n                                {{ fullscreenLoading ? \"停止加载\" : \"开始加载\" }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 全局指示符和主题适配 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md col-span-1 lg:col-span-2\">\n                <h2 class=\"text-xl font-semibold mb-8 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-indigo-500 dark:bg-indigo-400 rounded-full mr-3\"></div>\n                    全局配置与主题适配\n                </h2>\n\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                    <!-- 全局指示符 -->\n                    <div class=\"bg-white dark:bg-gray-700 p-6 rounded-lg shadow-sm\">\n                        <h3 class=\"text-lg font-medium mb-6 text-gray-800 dark:text-gray-200\">全局默认指示符</h3>\n                        <div class=\"flex justify-center p-4 mb-6\">\n                            <Spin />\n                        </div>\n                        <div class=\"flex justify-center\">\n                            <button @click=\"toggleGlobalIndicator\"\n                                class=\"px-4 py-2 bg-indigo-500 hover:bg-indigo-600 text-white rounded transition-colors duration-300\">\n                                {{ useGlobalIndicator ? '恢复默认指示符' : '设置全局指示符' }}\n                            </button>\n                        </div>\n                    </div>\n\n                    <!-- 主题模式展示 -->\n                    <div class=\"bg-gray-900 p-6 rounded-lg shadow-sm\">\n                        <h3 class=\"text-lg font-medium mb-6 text-gray-200\">暗色模式展示</h3>\n                        <div class=\"grid grid-cols-3 gap-4\">\n                            <div class=\"flex flex-col items-center\">\n                                <Spin size=\"small\" />\n                                <span class=\"text-xs text-gray-400 mt-2\">小型</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <Spin :indicator=\"darkThemeIndicator\" />\n                                <span class=\"text-xs text-gray-400 mt-2\">自定义</span>\n                            </div>\n                            <div class=\"flex flex-col items-center\">\n                                <Spin size=\"large\" tip=\"加载中\" />\n                                <span class=\"text-xs text-gray-400 mt-2\">带提示</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 进度指示类型展示 - 新增 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-teal-500 dark:bg-teal-400 rounded-full mr-3\"></div>\n                    进度指示\n                </h2>\n                <div class=\"space-y-8\">\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">环形进度</p>\n                        <div\n                            class=\"flex justify-center p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg\">\n                            <Spin :indicator=\"circleProgressIndicator\" tip=\"加载进度：20%\" />\n                        </div>\n                        <div class=\"mt-4 flex justify-center space-x-2\">\n                            <button @click=\"decreaseProgress\"\n                                class=\"px-3 py-1.5 text-sm bg-gray-500 hover:bg-gray-600 text-white rounded transition-colors duration-300\">\n                                减少\n                            </button>\n                            <button @click=\"increaseProgress\"\n                                class=\"px-3 py-1.5 text-sm bg-teal-500 hover:bg-teal-600 text-white rounded transition-colors duration-300\">\n                                增加\n                            </button>\n                        </div>\n                    </div>\n\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">自动进度加载</p>\n                        <div class=\"p-6 border border-dashed border-gray-200 dark:border-gray-700 rounded-lg\">\n                            <Spin :spinning=\"progressBarSpinning\" :indicator=\"progressBarIndicator\"\n                                :tip=\"`数据加载中 ${loadingProgress}%`\">\n                                <div class=\"h-32 flex items-center justify-center text-gray-400 dark:text-gray-500\">\n                                    加载完成后显示内容\n                                </div>\n                            </Spin>\n                        </div>\n                        <div class=\"mt-4 flex justify-center\">\n                            <button @click=\"simulateProgressLoading\"\n                                class=\"px-3 py-1.5 text-sm bg-teal-500 hover:bg-teal-600 text-white rounded transition-colors duration-300\"\n                                :disabled=\"progressBarSpinning\">\n                                {{ progressBarSpinning ? '加载中...' : '模拟加载过程' }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 图片加载展示 - 新增 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-pink-500 dark:bg-pink-400 rounded-full mr-3\"></div>\n                    图片加载\n                </h2>\n                <div class=\"space-y-8\">\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">图片加载效果</p>\n                        <div class=\"grid grid-cols-2 gap-4\">\n                            <div v-for=\"(img, index) in imageCards\" :key=\"index\"\n                                class=\"relative overflow-hidden rounded-lg\">\n                                <Spin :spinning=\"img.loading\" wrapperClassName=\"h-40\">\n                                    <div\n                                        class=\"bg-gray-100 dark:bg-gray-700 h-40 w-full flex items-center justify-center rounded-lg overflow-hidden\">\n                                        <div v-if=\"img.loaded\" class=\"w-full h-full\">\n                                            <div class=\"w-full h-full bg-gradient-to-br\"\n                                                :class=\"`from-${img.color}-100 to-${img.color}-300 dark:from-${img.color}-800 dark:to-${img.color}-900`\">\n                                                <div class=\"w-full h-full flex items-center justify-center text-lg font-bold\"\n                                                    :class=\"`text-${img.color}-500 dark:text-${img.color}-300`\">\n                                                    图片 {{ index + 1 }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <span v-else class=\"text-gray-500 dark:text-gray-400\">图片加载中...</span>\n                                    </div>\n                                </Spin>\n                            </div>\n                        </div>\n                        <div class=\"mt-4 flex justify-center\">\n                            <button @click=\"reloadImages\"\n                                class=\"px-3 py-1.5 text-sm bg-pink-500 hover:bg-pink-600 text-white rounded transition-colors duration-300\">\n                                重新加载图片\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 标签页加载展示 - 新增 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md col-span-1 lg:col-span-2\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-orange-500 dark:bg-orange-400 rounded-full mr-3\"></div>\n                    复合组件\n                </h2>\n\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                    <!-- 标签页加载 -->\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">标签页内容加载</p>\n                        <div\n                            class=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden\">\n                            <div class=\"flex border-b border-gray-200 dark:border-gray-700\">\n                                <button v-for=\"(tab, index) in tabs\" :key=\"index\" @click=\"switchTab(index)\"\n                                    class=\"px-4 py-2 text-sm transition-colors duration-300\" :class=\"activeTabIndex === index\n                                        ? 'text-blue-600 dark:text-blue-400 border-b-2 border-blue-500 dark:border-blue-400 font-medium'\n                                        : 'text-gray-600 dark:text-gray-400'\">\n                                    {{ tab.label }}\n                                </button>\n                            </div>\n                            <div class=\"relative p-4 min-h-[200px]\">\n                                <Spin :spinning=\"tabs[activeTabIndex].loading\" tip=\"加载标签内容中...\">\n                                    <div>\n                                        <h4 class=\"font-medium text-gray-700 dark:text-gray-300 mb-3\">\n                                            {{ tabs[activeTabIndex].title }}\n                                        </h4>\n                                        <p class=\"text-gray-600 dark:text-gray-400\">\n                                            {{ tabs[activeTabIndex].content }}\n                                        </p>\n                                    </div>\n                                </Spin>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- 按钮加载状态 -->\n                    <div>\n                        <p class=\"mb-3 text-sm text-gray-600 dark:text-gray-400\">按钮加载状态</p>\n                        <div\n                            class=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 space-y-4\">\n                            <div class=\"flex flex-wrap gap-3\">\n                                <button\n                                    class=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg inline-flex items-center justify-center min-w-[100px]\"\n                                    @click=\"toggleButtonLoading(0)\" :disabled=\"buttonLoading[0]\">\n                                    <Spin v-if=\"buttonLoading[0]\" :indicator=\"buttonIndicator\" size=\"small\"\n                                        class=\"mr-1\" />\n                                    {{ buttonLoading[0] ? '提交中...' : '提交' }}\n                                </button>\n                                <button\n                                    class=\"px-4 py-2 bg-green-500 hover:bg-green-600 text-white rounded-lg inline-flex items-center justify-center min-w-[100px]\"\n                                    @click=\"toggleButtonLoading(1)\" :disabled=\"buttonLoading[1]\">\n                                    {{ buttonLoading[1] ? '保存中...' : '保存' }}\n                                    <Spin v-if=\"buttonLoading[1]\" :indicator=\"buttonIndicator\" size=\"small\"\n                                        class=\"ml-1\" />\n                                </button>\n                                <button\n                                    class=\"px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg inline-flex items-center justify-center min-w-[100px] disabled:opacity-50\"\n                                    :disabled=\"buttonLoading[2]\" @click=\"toggleButtonLoading(2)\">\n                                    <Spin v-if=\"buttonLoading[2]\" :indicator=\"buttonIndicator\" size=\"small\"\n                                        class=\"mr-1\" />\n                                    {{ buttonLoading[2] ? '处理中' : '重置' }}\n                                </button>\n                            </div>\n\n                            <div class=\"mt-4\">\n                                <div class=\"relative\">\n                                    <input type=\"text\"\n                                        class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 rounded-md text-gray-800 dark:text-gray-200 focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 outline-none transition-colors duration-300 pr-10\"\n                                        placeholder=\"搜索内容...\" :disabled=\"buttonLoading[3]\" />\n                                    <div class=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                                        <Spin v-if=\"buttonLoading[3]\" :indicator=\"searchIndicator\" size=\"small\" />\n                                        <svg v-else xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-400\"\n                                            fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                                        </svg>\n                                    </div>\n                                </div>\n                                <button @click=\"toggleButtonLoading(3)\"\n                                    class=\"mt-2 px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200\">\n                                    {{ buttonLoading[3] ? '取消搜索' : '模拟搜索' }}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 卡片组合展示 - 新增 -->\n            <section\n                class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm transition-all duration-300 hover:shadow-md col-span-1 lg:col-span-2\">\n                <h2 class=\"text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center\">\n                    <div class=\"w-1.5 h-6 bg-emerald-500 dark:bg-emerald-400 rounded-full mr-3\"></div>\n                    卡片组合\n                </h2>\n\n                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <!-- 数据卡片 -->\n                    <div v-for=\"(card, index) in dataCards\" :key=\"index\"\n                        class=\"bg-white dark:bg-gray-700 rounded-lg border border-gray-100 dark:border-gray-600 shadow-sm overflow-hidden\">\n                        <div class=\"p-4\">\n                            <div class=\"flex justify-between\">\n                                <div>\n                                    <h5 class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">{{ card.title }}\n                                    </h5>\n                                    <div class=\"mt-1 flex items-end\">\n                                        <Spin :spinning=\"card.loading\">\n                                            <span class=\"text-2xl font-bold text-gray-800 dark:text-white\">{{ card.value\n                                                }}</span>\n                                            <span class=\"ml-2 text-xs\"\n                                                :class=\"card.trend === 'up' ? 'text-green-500' : 'text-red-500'\">\n                                                {{ card.trend === 'up' ? '↑' : '↓' }} {{ card.change }}%\n                                            </span>\n                                        </Spin>\n                                    </div>\n                                </div>\n                                <div :class=\"`bg-${card.color}-100 dark:bg-${card.color}-900/30 p-2 rounded-lg`\">\n                                    <svg class=\"w-6 h-6\" :class=\"`text-${card.color}-500 dark:text-${card.color}-400`\"\n                                        fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\n                                        xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path v-if=\"card.icon === 'chart'\" stroke-linecap=\"round\"\n                                            stroke-linejoin=\"round\" stroke-width=\"2\"\n                                            d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\">\n                                        </path>\n                                        <path v-if=\"card.icon === 'users'\" stroke-linecap=\"round\"\n                                            stroke-linejoin=\"round\" stroke-width=\"2\"\n                                            d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\">\n                                        </path>\n                                        <path v-if=\"card.icon === 'dollar'\" stroke-linecap=\"round\"\n                                            stroke-linejoin=\"round\" stroke-width=\"2\"\n                                            d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\">\n                                        </path>\n                                    </svg>\n                                </div>\n                            </div>\n                            <div class=\"mt-4 h-1 bg-gray-200 dark:bg-gray-600 rounded-full overflow-hidden\">\n                                <div :class=\"`h-full bg-${card.color}-500 dark:bg-${card.color}-400 rounded-full`\"\n                                    :style=\"`width: ${card.progress}%`\"></div>\n                            </div>\n                        </div>\n                        <div\n                            class=\"px-4 py-3 bg-gray-50 dark:bg-gray-800 text-xs text-gray-500 dark:text-gray-400 border-t border-gray-100 dark:border-gray-600\">\n                            <span>{{ card.date }} 更新</span>\n                        </div>\n                    </div>\n\n                    <!-- 数据刷新按钮 -->\n                    <div class=\"md:col-span-3 mt-2 flex justify-center\">\n                        <button @click=\"refreshDataCards\"\n                            class=\"px-4 py-2 bg-emerald-500 hover:bg-emerald-600 text-white rounded transition-colors duration-300 flex items-center\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                    d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                            </svg>\n                            刷新数据卡片\n                        </button>\n                    </div>\n                </div>\n            </section>\n        </div>\n\n        <!-- 小结与最佳实践 -->\n        <section class=\"mt-16 bg-white dark:bg-gray-800 p-8 rounded-xl shadow-sm\">\n            <h2\n                class=\"text-2xl font-bold mb-6 text-gray-800 dark:text-white border-b pb-2 border-gray-200 dark:border-gray-700\">\n                小结与最佳实践\n            </h2>\n            <div class=\"space-y-6 text-gray-700 dark:text-gray-300\">\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n                        <span class=\"text-blue-500 dark:text-blue-400 mr-2\">•</span>何时使用加载中组件\n                    </h3>\n                    <ul class=\"list-disc list-inside space-y-2 ml-5 text-gray-600 dark:text-gray-400\">\n                        <li>当系统需要等待异步数据时</li>\n                        <li>页面或组件正在进行不能被打断的渲染时</li>\n                        <li>表单提交、数据处理等需要显示进度的场景</li>\n                        <li>需要阻止用户与某区域交互，同时表明系统正在工作</li>\n                    </ul>\n                </div>\n\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n                        <span class=\"text-green-500 dark:text-green-400 mr-2\">•</span>设计建议\n                    </h3>\n                    <ul class=\"list-disc list-inside space-y-2 ml-5 text-gray-600 dark:text-gray-400\">\n                        <li>为长时间的加载提供文字提示，减轻用户等待焦虑</li>\n                        <li>对于可能很快完成的操作，使用延迟属性避免闪烁</li>\n                        <li>考虑使用自定义指示符来匹配应用的品牌风格</li>\n                        <li>全屏加载时添加半透明遮罩和模糊效果，保持上下文可见</li>\n                        <li>对于需要精确进度的场景，考虑结合进度指示器使用</li>\n                    </ul>\n                </div>\n\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n                        <span class=\"text-purple-500 dark:text-purple-400 mr-2\">•</span>无障碍设计\n                    </h3>\n                    <ul class=\"list-disc list-inside space-y-2 ml-5 text-gray-600 dark:text-gray-400\">\n                        <li>添加适当的 ARIA 属性，如 aria-busy=\"true\" 和 aria-live=\"polite\"</li>\n                        <li>确保加载中的文字提示对屏幕阅读器可访问</li>\n                        <li>避免仅依赖颜色传达加载状态，结合动效和文本提示</li>\n                        <li>考虑为长时间加载添加进度指示或描述性提示</li>\n                    </ul>\n                </div>\n\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n                        <span class=\"text-yellow-500 dark:text-yellow-400 mr-2\">•</span>性能考量\n                    </h3>\n                    <ul class=\"list-disc list-inside space-y-2 ml-5 text-gray-600 dark:text-gray-400\">\n                        <li>在包裹模式下，避免内容频繁渲染导致的性能问题</li>\n                        <li>复杂的自定义指示符可能影响性能，尤其在低端设备上</li>\n                        <li>对于资源密集型操作，考虑使用 Web Workers 避免主线程阻塞</li>\n                        <li>不要同时显示过多的 Spin 组件，会增加用户困惑与性能负担</li>\n                    </ul>\n                </div>\n\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n                        <span class=\"text-red-500 dark:text-red-400 mr-2\">•</span>常见错误\n                    </h3>\n                    <ul class=\"list-disc list-inside space-y-2 ml-5 text-gray-600 dark:text-gray-400\">\n                        <li>没有设置合理的延迟时间，导致加载指示器频繁闪烁</li>\n                        <li>未提供明确的文字提示，用户不清楚正在等待什么</li>\n                        <li>加载状态无法取消或超时处理，导致用户体验不佳</li>\n                        <li>在首屏加载时使用过于复杂的动画，延长用户感知的等待时间</li>\n                    </ul>\n                </div>\n            </div>\n        </section>\n\n        <!-- API文档 -->\n        <section class=\"mt-12 bg-white dark:bg-gray-800 p-8 rounded-xl shadow-sm mb-8\">\n            <h2\n                class=\"text-2xl font-bold mb-6 text-gray-800 dark:text-white border-b pb-2 border-gray-200 dark:border-gray-700\">\n                API 文档\n            </h2>\n\n            <div class=\"overflow-x-auto\">\n                <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                属性\n                            </th>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                类型\n                            </th>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                默认值\n                            </th>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                说明\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                        <tr>\n                            <td\n                                class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                spinning\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                boolean\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                true\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                是否为加载中状态\n                            </td>\n                        </tr>\n                        <tr>\n                            <td\n                                class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                delay\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                number\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                -\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                延迟显示加载效果的时间（防止闪烁），单位毫秒\n                            </td>\n                        </tr>\n                        <tr>\n                            <td\n                                class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                size\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                string\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                'default'\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                组件大小，可选值为 'small', 'default', 'large'\n                            </td>\n                        </tr>\n                        <tr>\n                            <td\n                                class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                tip\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                string\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                -\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                当作为包裹元素时，可以自定义描述文案\n                            </td>\n                        </tr>\n                        <tr>\n                            <td\n                                class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                wrapperClassName\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                string\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                ''\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                包装器的类名\n                            </td>\n                        </tr>\n                        <tr>\n                            <td\n                                class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                indicator\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                VNode | slot\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">\n                                -\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                加载指示符，可以自定义指示符的内容和样式\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <h3 class=\"text-xl font-semibold mt-8 mb-4 text-gray-800 dark:text-white\">插槽</h3>\n            <div class=\"overflow-x-auto\">\n                <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                插槽名称\n                            </th>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                说明\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                        <tr>\n                            <td\n                                class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                default\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                需要被包裹的内容\n                            </td>\n                        </tr>\n                        <tr>\n                            <td\n                                class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                tip\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                自定义描述文案\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <h3 class=\"text-xl font-semibold mt-8 mb-4 text-gray-800 dark:text-white\">静态方法</h3>\n            <div class=\"overflow-x-auto\">\n                <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                方法名称\n                            </th>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                说明\n                            </th>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                参数\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                        <tr>\n                            <td\n                                class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 dark:text-blue-400\">\n                                setDefaultIndicator\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                设置全局默认的加载指示符\n                            </td>\n                            <td class=\"px-6 py-4 text-sm text-gray-600 dark:text-gray-300\">\n                                options: {indicator: VNode}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <h3 class=\"text-xl font-semibold mt-8 mb-4 text-gray-800 dark:text-white\">使用示例</h3>\n            <div class=\"bg-gray-50 dark:bg-gray-900 p-4 rounded-md overflow-auto mb-6\">\n                <pre class=\"text-sm text-gray-700 dark:text-gray-300\">\n            // 基础使用\n            &lt;Spin /&gt;\n\n            // 不同尺寸\n            &lt;Spin size=\"small\" /&gt;\n            &lt;Spin /&gt;\n            &lt;Spin size=\"large\" /&gt;\n\n            // 带有文字提示\n            &lt;Spin tip=\"加载中...\" /&gt;\n\n            // 延迟显示\n            &lt;Spin :spinning=\"loading\" :delay=\"500\" /&gt;\n\n            // 包裹模式\n            &lt;Spin :spinning=\"loading\" tip=\"加载数据中...\"&gt;\n            &lt;div class=\"content\"&gt;\n            内容区域\n            &lt;/div&gt;\n            &lt;/Spin&gt;\n\n            // 使用自定义指示符\n            &lt;Spin :indicator=\"customIndicator\" /&gt;\n\n            // 设置全局默认指示符\n            import { h } from 'vue';\n            import { setDefaultIndicator } from './Spin';\n\n            setDefaultIndicator({\n            indicator: h('div', {\n            class: 'custom-loading-indicator'\n            })\n            });</pre>\n            </div>\n\n            <h3 class=\"text-xl font-semibold mt-8 mb-4 text-gray-800 dark:text-white\">常见应用场景</h3>\n            <div class=\"space-y-4 text-gray-700 dark:text-gray-300\">\n                <p><strong class=\"text-gray-900 dark:text-white\">1. 页面加载：</strong> 在页面初始化数据时显示加载状态，给用户提供反馈。</p>\n                <p><strong class=\"text-gray-900 dark:text-white\">2. 内容更新：</strong> 当内容重新加载或更新时，在内容区域展示加载动效。</p>\n                <p><strong class=\"text-gray-900 dark:text-white\">3. 表单提交：</strong> 在表单提交过程中显示加载状态，防止用户重复提交。</p>\n                <p><strong class=\"text-gray-900 dark:text-white\">4. 按钮加载：</strong> 在按钮上显示加载状态，表明操作正在处理中。</p>\n                <p><strong class=\"text-gray-900 dark:text-white\">5. 懒加载：</strong> 在图片或大型组件加载时展示加载占位。</p>\n            </div>\n\n            <h3 class=\"text-xl font-semibold mt-8 mb-4 text-gray-800 dark:text-white\">注意事项</h3>\n            <div\n                class=\"bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-md text-sm text-yellow-800 dark:text-yellow-200 mb-6\">\n                <ul class=\"space-y-2\">\n                    <li>• 设置了 delay 属性后，短时间内的加载状态将不会显示，有效避免了闪烁</li>\n                    <li>• 使用 setDefaultIndicator 会影响所有未指定自定义 indicator 的 Spin 组件</li>\n                    <li>• 在包裹模式下，被包裹的内容会在加载状态时变为半透明</li>\n                    <li>• 自定义指示符需要自行处理动画效果，建议使用 CSS 动画而非 JavaScript 动画</li>\n                    <li>• 如果需要展示进度，可以结合 Progress 组件或自定义指示符实现</li>\n                </ul>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, h, onUnmounted, computed, onMounted } from 'vue';\nimport Spin, { setDefaultIndicator } from './Spin';\n\n// 自定义指示符\nconst customIndicator1 = h('div', {\n    class: 'animate-spin text-blue-500 dark:text-blue-400'\n}, [\n    h('svg', {\n        class: 'w-8 h-8',\n        xmlns: 'http://www.w3.org/2000/svg',\n        fill: 'none',\n        viewBox: '0 0 24 24'\n    }, [\n        h('circle', {\n            class: 'opacity-25',\n            cx: '12',\n            cy: '12',\n            r: '10',\n            stroke: 'currentColor',\n            'stroke-width': '4'\n        }),\n        h('path', {\n            class: 'opacity-75',\n            fill: 'currentColor',\n            d: 'M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n        })\n    ])\n]);\n\n// 自定义动画指示符\nconst customIndicator2 = h('div', {\n    class: 'flex space-x-1'\n}, [\n    h('div', {\n        class: 'w-2 h-2 bg-blue-500 dark:bg-blue-400 rounded-full animate-bounce',\n        style: 'animation-delay: 0s'\n    }),\n    h('div', {\n        class: 'w-2 h-2 bg-blue-500 dark:bg-blue-400 rounded-full animate-bounce',\n        style: 'animation-delay: 0.2s'\n    }),\n    h('div', {\n        class: 'w-2 h-2 bg-blue-500 dark:bg-blue-400 rounded-full animate-bounce',\n        style: 'animation-delay: 0.4s'\n    })\n]);\n\n// 全屏指示符\nconst fullscreenIndicator = h('div', {\n    class: 'flex items-center justify-center'\n}, [\n    h('div', {\n        class: 'w-16 h-16 border-4 border-blue-400 border-t-transparent rounded-full animate-spin'\n    })\n]);\n\n// 暗色主题特定指示符\nconst darkThemeIndicator = h('div', {\n    class: 'flex space-x-1'\n}, [\n    h('div', {\n        class: 'w-2 h-8 bg-indigo-400 rounded-full animate-pulse'\n    }),\n    h('div', {\n        class: 'w-2 h-8 bg-indigo-400 rounded-full animate-pulse',\n        style: 'animation-delay: 0.2s'\n    }),\n    h('div', {\n        class: 'w-2 h-8 bg-indigo-400 rounded-full animate-pulse',\n        style: 'animation-delay: 0.4s'\n    })\n]);\n\n// 全局自定义指示符\nconst globalIndicator = h('div', {\n    class: 'flex items-center justify-center'\n}, [\n    h('div', {\n        class: 'inline-flex rounded-md shadow-sm divide-x divide-indigo-200 dark:divide-indigo-700'\n    }, [\n        h('div', {\n            class: 'animate-pulse px-2 py-1 text-indigo-500 dark:text-indigo-400'\n        }, 'Loading'),\n        h('div', {\n            class: 'animate-pulse px-2 py-1 text-indigo-500 dark:text-indigo-400',\n            style: 'animation-delay: 0.3s'\n        }, '...'),\n    ])\n]);\n\n// 状态控制\nconst delayedSpinning = ref(false);\nconst controlledSpinning = ref(false);\nconst cardLoading = ref(false);\nconst tableLoading = ref(false);\nconst fullscreenLoading = ref(false);\nconst useGlobalIndicator = ref(false);\n\n// 延迟加载控制\nconst toggleDelayedSpinning = () => {\n    delayedSpinning.value = !delayedSpinning.value;\n};\n\n// 手动控制显示状态\nconst startSpinning = () => {\n    controlledSpinning.value = true;\n};\n\nconst stopSpinning = () => {\n    controlledSpinning.value = false;\n};\n\n// 卡片加载控制\nconst toggleCardLoading = () => {\n    cardLoading.value = !cardLoading.value;\n};\n\n// 表格加载控制\nconst toggleTableLoading = () => {\n    tableLoading.value = !tableLoading.value;\n};\n\n// 全屏加载控制\nconst toggleFullscreenLoading = () => {\n    fullscreenLoading.value = !fullscreenLoading.value;\n};\n// 定义一个空的默认指示符 VNode\nconst defaultIndicator = h('div', { class: 'flex items-center justify-center' }, [\n    h('span', { class: 'text-gray-500 dark:text-gray-400' }, 'Loading...')\n]);\n\n\n// 全局指示符控制逻辑中也使用此 VNode\nconst toggleGlobalIndicator = () => {\n    if (useGlobalIndicator.value) {\n        // 恢复默认指示符\n        setDefaultIndicator({ indicator: defaultIndicator });\n        useGlobalIndicator.value = false;\n    } else {\n        // 设置全局指示符\n        setDefaultIndicator({ indicator: globalIndicator });\n        useGlobalIndicator.value = true;\n    }\n};\n// 在组件卸载或恢复默认指示符时使用此 VNode\nonUnmounted(() => {\n    if (useGlobalIndicator.value) {\n        setDefaultIndicator({ indicator: defaultIndicator });\n    }\n});\n\n// 按钮指示符\nconst buttonIndicator = h('div', {\n    class: 'animate-spin h-4 w-4 text-white'\n}, [\n    h('svg', {\n        xmlns: 'http://www.w3.org/2000/svg',\n        fill: 'none',\n        viewBox: '0 0 24 24'\n    }, [\n        h('circle', {\n            class: 'opacity-25',\n            cx: '12',\n            cy: '12',\n            r: '10',\n            stroke: 'currentColor',\n            'stroke-width': '4'\n        }),\n        h('path', {\n            class: 'opacity-75',\n            fill: 'currentColor',\n            d: 'M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n        })\n    ])\n]);\n\n// 搜索指示符\nconst searchIndicator = h('div', {\n    class: 'animate-spin h-4 w-4 text-gray-500 dark:text-gray-400'\n}, [\n    h('svg', {\n        xmlns: 'http://www.w3.org/2000/svg',\n        fill: 'none',\n        viewBox: '0 0 24 24'\n    }, [\n        h('circle', {\n            class: 'opacity-25',\n            cx: '12',\n            cy: '12',\n            r: '10',\n            stroke: 'currentColor',\n            'stroke-width': '4'\n        }),\n        h('path', {\n            class: 'opacity-75',\n            fill: 'currentColor',\n            d: 'M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n        })\n    ])\n]);\n\n// 进度指示符相关\nconst progress = ref(20);\nconst circleProgressIndicator = computed(() => {\n    const normalizedProgress = Math.min(100, Math.max(0, progress.value));\n    const strokeDasharray = 2 * Math.PI * 12;\n    const strokeDashoffset = strokeDasharray * (1 - normalizedProgress / 100);\n\n    return h('div', {\n        class: 'relative flex items-center justify-center'\n    }, [\n        // 背景圆环\n        h('svg', {\n            class: 'w-16 h-16',\n            viewBox: '0 0 36 36'\n        }, [\n            // 背景圆\n            h('circle', {\n                class: 'text-gray-200 dark:text-gray-700 stroke-current',\n                cx: '18',\n                cy: '18',\n                r: '12',\n                'stroke-width': '3',\n                fill: 'none'\n            }),\n            // 进度圆\n            h('circle', {\n                class: 'text-teal-500 dark:text-teal-400 stroke-current',\n                cx: '18',\n                cy: '18',\n                r: '12',\n                'stroke-width': '3',\n                fill: 'none',\n                transform: 'rotate(-90 18 18)',\n                'stroke-dasharray': strokeDasharray,\n                'stroke-dashoffset': strokeDashoffset,\n                'stroke-linecap': 'round'\n            }),\n        ]),\n        // 中间文字\n        h('div', {\n            class: 'absolute inset-0 flex items-center justify-center text-sm font-medium text-teal-500 dark:text-teal-400'\n        }, `${normalizedProgress}%`)\n    ]);\n});\n\n// 进度条指示符\nconst loadingProgress = ref(0);\nconst progressBarSpinning = ref(false);\nconst progressBarIndicator = h('div', {\n    class: 'w-full'\n}, [\n    h('div', {\n        class: 'h-1.5 w-full bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden'\n    }, [\n        h('div', {\n            class: 'h-full bg-teal-500 dark:bg-teal-400 rounded-full transition-all duration-300',\n            style: {\n                width: `${loadingProgress.value}%`\n            }\n        })\n    ])\n]);\n\n// 增减进度控制\nconst increaseProgress = () => {\n    if (progress.value < 100) {\n        progress.value += 20;\n    }\n};\n\nconst decreaseProgress = () => {\n    if (progress.value > 0) {\n        progress.value -= 20;\n    }\n};\n\n// 模拟进度加载\nconst simulateProgressLoading = () => {\n    if (progressBarSpinning.value) return;\n\n    loadingProgress.value = 0;\n    progressBarSpinning.value = true;\n\n    const interval = setInterval(() => {\n        if (loadingProgress.value >= 100) {\n            clearInterval(interval);\n            setTimeout(() => {\n                progressBarSpinning.value = false;\n            }, 500);\n            return;\n        }\n\n        const increment = Math.floor(Math.random() * 10) + 1;\n        loadingProgress.value = Math.min(100, loadingProgress.value + increment);\n    }, 300);\n};\n\n// 图片卡片\nconst imageCards = ref([\n    { loading: false, loaded: true, color: 'blue' },\n    { loading: false, loaded: true, color: 'green' },\n    { loading: false, loaded: true, color: 'purple' },\n    { loading: false, loaded: true, color: 'orange' }\n]);\n\n// 重新加载图片\nconst reloadImages = () => {\n    imageCards.value.forEach(img => {\n        img.loading = true;\n        img.loaded = false;\n    });\n\n    setTimeout(() => {\n        imageCards.value.forEach((img, index) => {\n            setTimeout(() => {\n                img.loading = false;\n                img.loaded = true;\n            }, index * 600 + 400);\n        });\n    }, 500);\n};\n\n// 标签页相关\nconst tabs = ref([\n    {\n        label: '首页',\n        title: '欢迎内容',\n        content: '这是首页内容，包含了网站的基本介绍和最新信息。',\n        loading: false\n    },\n    {\n        label: '用户数据',\n        title: '用户统计分析',\n        content: '展示用户相关的统计数据，包括活跃度、增长率等信息。',\n        loading: false\n    },\n    {\n        label: '设置',\n        title: '系统设置',\n        content: '在这里可以修改系统配置、个人偏好和其他高级设置选项。',\n        loading: false\n    }\n]);\n\nconst activeTabIndex = ref(0);\n\n// 切换标签页\nconst switchTab = (index: number) => {\n    if (activeTabIndex.value === index) return;\n\n    activeTabIndex.value = index;\n    tabs.value[index].loading = true;\n\n    setTimeout(() => {\n        tabs.value[index].loading = false;\n    }, 1200);\n};\n\n// 按钮加载状态\nconst buttonLoading = ref([false, false, false, false]);\n\n// 切换按钮加载状态\nconst toggleButtonLoading = (index: number) => {\n    buttonLoading.value[index] = !buttonLoading.value[index];\n\n    if (buttonLoading.value[index]) {\n        setTimeout(() => {\n            buttonLoading.value[index] = false;\n        }, 2000);\n    }\n};\n\n// 数据卡片\nconst dataCards = ref([\n    {\n        title: '总访问量',\n        value: '254,321',\n        trend: 'up',\n        change: '12.5',\n        progress: 75,\n        color: 'blue',\n        icon: 'chart',\n        date: '今日',\n        loading: false\n    },\n    {\n        title: '活跃用户',\n        value: '12,543',\n        trend: 'up',\n        change: '8.2',\n        progress: 60,\n        color: 'green',\n        icon: 'users',\n        date: '本周',\n        loading: false\n    },\n    {\n        title: '总收入',\n        value: '¥83,214',\n        trend: 'down',\n        change: '3.1',\n        progress: 45,\n        color: 'purple',\n        icon: 'dollar',\n        date: '本月',\n        loading: false\n    }\n]);\n\n// 刷新数据卡片\nconst refreshDataCards = () => {\n    dataCards.value.forEach(card => {\n        card.loading = true;\n    });\n\n    setTimeout(() => {\n        dataCards.value.forEach((card, index) => {\n            setTimeout(() => {\n                card.loading = false;\n                // 随机更新数据\n                const isUp = Math.random() > 0.3;\n                card.trend = isUp ? 'up' : 'down';\n                card.change = (Math.random() * 15 + 1).toFixed(1);\n                card.progress = Math.floor(Math.random() * 80) + 20;\n            }, index * 500 + 600);\n        });\n    }, 800);\n}\n\n// 页面加载时初始化一些数据\nonMounted(() => {\n    // 确保首次加载标签页内容加载效果\n    tabs.value[0].loading = true;\n    setTimeout(() => {\n        tabs.value[0].loading = false;\n    }, 1000);\n});\n</script>\n\n<style scoped>\n/* 添加一些淡入淡出动画 */\n.fade-enter-active,\n.fade-leave-active {\n    transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n    opacity: 0;\n}\n</style>\n"],"names":["defaultIndicator","setDefaultIndicator","options","indicator","defineComponent","name","props","spinning","type","Boolean","default","delay","Number","size","String","validator","val","includes","tip","wrapperClassName","Object","Function","setup","slots","shouldShowSpin","ref","delayTimer","watch","clearTimeout","setTimeout","value","immediate","onBeforeUnmount","getSpinSizeClass","renderIndicator","_createVNode","renderTip","containerClass","filter","join","Transition","customIndicator1","h","customIndicator2","fullscreenIndicator","darkThemeIndicator","globalIndicator","delayedSpinning","controlledSpinning","cardLoading","tableLoading","fullscreenLoading","useGlobalIndicator","toggleDelayedSpinning","startSpinning","stopSpinning","toggleCardLoading","toggleTableLoading","toggleFullscreenLoading","toggleGlobalIndicator","onUnmounted","buttonIndicator","searchIndicator","progress","circleProgressIndicator","computed","normalizedProgress","strokeDasharray","strokeDashoffset","loadingProgress","progressBarSpinning","progressBarIndicator","increaseProgress","decreaseProgress","simulateProgressLoading","interval","increment","imageCards","reloadImages","img","index","tabs","activeTabIndex","switchTab","buttonLoading","toggleButtonLoading","dataCards","refreshDataCards","card","isUp","onMounted"],"mappings":"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"}