{"version":3,"file":"index-Ds23Exbk.js","sources":["../../src/libs/TagsList/config.ts","../../src/libs/TagsList/components/Tag.tsx","../../src/libs/TagsList/TagsList.tsx","../../src/libs/TagsList/View.vue"],"sourcesContent":["// 所有可用的颜色类型\nexport type ColorType = \n  | 'slate' | 'gray' | 'zinc' | 'neutral' | 'stone'  // 灰色系\n  | 'red' | 'orange' | 'amber' | 'yellow'            // 暖色系\n  | 'lime' | 'green' | 'emerald' | 'teal'            // 绿色系\n  | 'cyan' | 'sky' | 'blue' | 'indigo'               // 蓝色系\n  | 'violet' | 'purple' | 'fuchsia' | 'pink' | 'rose'; // 紫粉色系\n\n// 常用的主题色类型 (用于简化部分组件的类型定义)\nexport type ThemeColorType = 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'info';\n\n// 主题色对应的实际颜色\nexport const THEME_COLOR_MAP: Record<ThemeColorType, ColorType> = {\n  primary: 'indigo',\n  secondary: 'gray',\n  success: 'green',\n  warning: 'yellow',\n  danger: 'red',\n  info: 'blue'\n};\n\n// 精简优化的颜色映射表，同时支持浅色和深色模式\nexport const COLOR_MAP = {\n    // 灰色系列\n    slate: {\n      light: { bg: '#f1f5f9', text: '#334155', border: '#cbd5e1' },\n      dark: { bg: '#1e293b', text: '#e2e8f0', border: '#475569' }\n    },\n    gray: {\n      light: { bg: '#f3f4f6', text: '#374151', border: '#d1d5db' },\n      dark: { bg: '#1f2937', text: '#e5e7eb', border: '#4b5563' }\n    },\n    zinc: {\n      light: { bg: '#f4f4f5', text: '#3f3f46', border: '#d4d4d8' },\n      dark: { bg: '#27272a', text: '#e4e4e7', border: '#52525b' }\n    },\n    neutral: {\n      light: { bg: '#f5f5f5', text: '#404040', border: '#d4d4d4' },\n      dark: { bg: '#262626', text: '#e5e5e5', border: '#525252' }\n    },\n    stone: {\n      light: { bg: '#f5f5f4', text: '#44403c', border: '#d6d3d1' },\n      dark: { bg: '#292524', text: '#e7e5e4', border: '#57534e' }\n    },\n    // 彩色系列\n    red: {\n      light: { bg: '#fee2e2', text: '#b91c1c', border: '#fca5a5' },\n      dark: { bg: '#7f1d1d', text: '#fecaca', border: '#ef4444' }\n    },\n    orange: {\n      light: { bg: '#ffedd5', text: '#c2410c', border: '#fdba74' },\n      dark: { bg: '#7c2d12', text: '#fed7aa', border: '#f97316' }\n    },\n    amber: {\n      light: { bg: '#fef3c7', text: '#b45309', border: '#fcd34d' },\n      dark: { bg: '#78350f', text: '#fde68a', border: '#f59e0b' }\n    },\n    yellow: {\n      light: { bg: '#fef9c3', text: '#a16207', border: '#fde047' },\n      dark: { bg: '#713f12', text: '#fef08a', border: '#eab308' }\n    },\n    lime: {\n      light: { bg: '#ecfccb', text: '#4d7c0f', border: '#bef264' },\n      dark: { bg: '#3f6212', text: '#d9f99d', border: '#84cc16' }\n    },\n    green: {\n      light: { bg: '#dcfce7', text: '#15803d', border: '#86efac' },\n      dark: { bg: '#166534', text: '#bbf7d0', border: '#22c55e' }\n    },\n    emerald: {\n      light: { bg: '#d1fae5', text: '#047857', border: '#6ee7b7' },\n      dark: { bg: '#065f46', text: '#a7f3d0', border: '#10b981' }\n    },\n    teal: {\n      light: { bg: '#ccfbf1', text: '#0f766e', border: '#5eead4' },\n      dark: { bg: '#115e59', text: '#99f6e4', border: '#14b8a6' }\n    },\n    cyan: {\n      light: { bg: '#cffafe', text: '#0e7490', border: '#67e8f9' },\n      dark: { bg: '#155e75', text: '#a5f3fc', border: '#06b6d4' }\n    },\n    sky: {\n      light: { bg: '#e0f2fe', text: '#0369a1', border: '#7dd3fc' },\n      dark: { bg: '#075985', text: '#bae6fd', border: '#0ea5e9' }\n    },\n    blue: {\n      light: { bg: '#dbeafe', text: '#1d4ed8', border: '#93c5fd' },\n      dark: { bg: '#1e40af', text: '#bfdbfe', border: '#3b82f6' }\n    },\n    indigo: {\n      light: { bg: '#e0e7ff', text: '#4338ca', border: '#a5b4fc' },\n      dark: { bg: '#3730a3', text: '#c7d2fe', border: '#6366f1' }\n    },\n    violet: {\n      light: { bg: '#ede9fe', text: '#6d28d9', border: '#c4b5fd' },\n      dark: { bg: '#5b21b6', text: '#ddd6fe', border: '#8b5cf6' }\n    },\n    purple: {\n      light: { bg: '#f3e8ff', text: '#7e22ce', border: '#d8b4fe' },\n      dark: { bg: '#6b21a8', text: '#e9d5ff', border: '#a855f7' }\n    },\n    fuchsia: {\n      light: { bg: '#fae8ff', text: '#a21caf', border: '#e879f9' },\n      dark: { bg: '#86198f', text: '#f5d0fe', border: '#d946ef' }\n    },\n    pink: {\n      light: { bg: '#fce7f3', text: '#be185d', border: '#f9a8d4' },\n      dark: { bg: '#9d174d', text: '#fbcfe8', border: '#ec4899' }\n    },\n    rose: {\n      light: { bg: '#ffe4e6', text: '#be123c', border: '#fda4af' },\n      dark: { bg: '#9f1239', text: '#fecdd3', border: '#f43f5e' }\n    }\n  }\n  ","import { computed, defineComponent, type PropType } from 'vue'\nimport { ColorType, THEME_COLOR_MAP, COLOR_MAP } from '../config'\n\n\nexport type TagSize = 'sm' | 'md' | 'lg'\n\n\n// 颜色映射表的键数组\nconst TAILWIND_COLORS = Object.keys(COLOR_MAP)\n\n// 支持主题颜色\nconst getThemeColor = (color: string): string => {\n  if (color in THEME_COLOR_MAP) {\n    return THEME_COLOR_MAP[color as keyof typeof THEME_COLOR_MAP];\n  }\n  return color;\n}\n\nexport interface TagProps {\n  text: string\n  index: number\n  color?: ColorType\n  size?: TagSize\n  randomColor?: boolean\n}\n\nexport const Tag = defineComponent({\n  name: 'Tag',\n  props: {\n    text: {\n      type: String,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n    color: {\n      type: String as PropType<ColorType>,\n      default: 'blue'\n    },\n    size: {\n      type: String as PropType<TagSize>,\n      default: 'md'\n    },\n    randomColor: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['remove'],\n  setup(props: TagProps, { emit }) {\n    // 生成基于标签文本的稳定随机颜色\n    const getStableRandomColor = (text: string): string => {\n      const hashCode = Array.from(text).reduce(\n        (hash, char) => ((hash << 5) - hash) + char.charCodeAt(0), 0\n      )\n      const colorIndex = Math.abs(hashCode) % TAILWIND_COLORS.length\n      return TAILWIND_COLORS[colorIndex]\n    }\n\n    const tagColor = computed(() => {\n      if (props.randomColor) {\n        return getStableRandomColor(props.text)\n      }\n      return getThemeColor(props.color || 'blue')\n    })\n\n    // 优化尺寸类，调整padding和字体大小\n    const sizeClasses = computed(() => ({\n      sm: 'text-xs py-0.5 px-2',\n      md: 'text-sm py-0.5 px-2.5',\n      lg: 'text-base py-1 px-3'\n    }[props.size || 'md']))\n\n    const handleRemove = () => {\n      emit('remove', props.index)\n    }\n\n    // 使用CSS变量实现动态颜色切换\n    const colorVars = computed(() => {\n      const colorKey = tagColor.value as keyof typeof COLOR_MAP\n      const colorObj = COLOR_MAP[colorKey] || COLOR_MAP.blue\n\n      return {\n        '--tag-bg-light': colorObj.light.bg,\n        '--tag-text-light': colorObj.light.text,\n        '--tag-border-light': colorObj.light.border,\n        '--tag-bg-dark': colorObj.dark.bg,\n        '--tag-text-dark': colorObj.dark.text,\n        '--tag-border-dark': colorObj.dark.border,\n      }\n    })\n\n    return () => (\n      <div\n        class={[\n          'inline-flex items-center rounded-md gap-1',\n          sizeClasses.value,\n          'transition duration-200 ease-in-out',\n          // 使用CSS变量实现深色模式自动切换\n          'bg-[var(--tag-bg-light)] text-[var(--tag-text-light)] border border-[var(--tag-border-light)]',\n          'dark:bg-[var(--tag-bg-dark)] dark:text-[var(--tag-text-dark)] dark:border-[var(--tag-border-dark)]',\n        ]}\n        style={colorVars.value}\n      >\n        <span class=\"truncate max-w-[150px] font-medium\">{props.text}</span>\n        <button\n          type=\"button\"\n          onClick={handleRemove}\n          class=\"ml-1 rounded-full hover:bg-black/10 dark:hover:bg-white/10\n                focus:outline-none focus:ring-1 focus:ring-current focus:ring-opacity-50\n                w-4 h-4 flex items-center justify-center transition-all duration-150\"\n          aria-label=\"删除标签\"\n        >\n          <svg\n            class=\"w-3 h-3\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </button>\n      </div>\n    )\n  }\n})\n\nexport default Tag\n","import { computed, defineComponent, ref, type PropType, Transition, TransitionGroup, h } from 'vue'\nimport Tag from './components/Tag'\nimport type { TagSize } from './components/Tag'\nimport { ColorType } from './config'\n\nexport type ThemeColor = ColorType;\nexport { TagSize }\n\nexport interface TagsListProps {\n  modelValue: string[]\n  color?: ThemeColor\n  size?: TagSize\n  placeholder?: string\n  maxTags?: number\n  validation?: (tag: string) => boolean | string\n  allowDuplicates?: boolean\n  randomColors?: boolean\n}\n\nexport const TagsList = defineComponent({\n  name: 'TagsList',\n  props: {\n    modelValue: {\n      type: Array as PropType<string[]>,\n      required: true\n    },\n    color: {\n      type: String as PropType<ThemeColor>,\n      default: 'blue',\n      validator: (value: string) => {\n        const allowedColors: ThemeColor[] = [\n          'slate', 'gray', 'zinc', 'neutral', 'stone',\n          'red', 'orange', 'amber', 'yellow', 'lime',\n          'green', 'emerald', 'teal', 'cyan', 'sky',\n          'blue', 'indigo', 'violet', 'purple', 'fuchsia',\n          'pink', 'rose'\n        ]\n        return allowedColors.includes(value as ThemeColor)\n      }\n    },\n    size: {\n      type: String as PropType<TagSize>,\n      default: 'md'\n    },\n    placeholder: {\n      type: String,\n      default: '请输入标签'\n    },\n    maxTags: {\n      type: Number,\n      default: Infinity\n    },\n    validation: {\n      type: Function as PropType<(tag: string) => boolean | string>,\n      default: undefined\n    },\n    allowDuplicates: {\n      type: Boolean,\n      default: false\n    },\n    randomColors: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'error'],\n  setup(props, { emit }) {\n    const newTag = ref('')\n    const isFocused = ref(false)\n    const hasError = ref(false)\n    const errorMessage = ref('')\n\n    const inputSize = computed(() => ({\n      sm: 'px-2 py-1 text-sm',\n      md: 'p-2',\n      lg: 'px-4 py-3 text-lg',\n    }[props.size]))\n\n    const containerClass = computed(() => ({\n      sm: 'text-sm',\n      md: 'text-base',\n      lg: 'text-lg',\n    }[props.size]))\n\n    // 简化并优化颜色处理\n    const inputColorVars = computed(() => {\n      const color = props.color || 'blue';\n      return {\n        [`--input-color`]: color,\n        [`--input-focus-ring`]: `var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), 0 0 0 2px rgba(${color === 'blue' ? '59, 130, 246' : '107, 114, 128'}, 0.25)`,\n      };\n    });\n\n    const setError = (message: string) => {\n      hasError.value = true\n      errorMessage.value = message\n      emit('error', message)\n\n      setTimeout(() => {\n        hasError.value = false\n        errorMessage.value = ''\n      }, 3000)\n    }\n\n    const validateAndAddTag = (tag: string): boolean => {\n      hasError.value = false\n      errorMessage.value = ''\n\n      if (!tag.trim()) {\n        setError('标签不能为空')\n        return false\n      }\n\n      if (!props.allowDuplicates && props.modelValue.includes(tag)) {\n        setError('标签已存在')\n        return false\n      }\n\n      if (props.modelValue.length >= props.maxTags) {\n        setError(`最多只能添加 ${props.maxTags} 个标签`)\n        return false\n      }\n\n      if (props.validation) {\n        const validationResult = props.validation(tag)\n        if (validationResult !== true) {\n          setError(typeof validationResult === 'string' ? validationResult : '标签验证失败')\n          return false\n        }\n      }\n\n      return true\n    }\n\n    const addTag = () => {\n      const tag = newTag.value.trim()\n      if (validateAndAddTag(tag)) {\n        emit('update:modelValue', [...props.modelValue, tag])\n        newTag.value = ''\n      }\n    }\n\n    const removeTag = (index: number) => {\n      const newTags = [...props.modelValue]\n      newTags.splice(index, 1)\n      emit('update:modelValue', newTags)\n    }\n\n    const removeLastTag = (event: KeyboardEvent) => {\n      if (event.key === 'Backspace' && newTag.value === '' && props.modelValue.length > 0) {\n        removeTag(props.modelValue.length - 1)\n      }\n    }\n\n    return () => (\n      <div\n        class={['flex flex-col', containerClass.value]}\n        style={inputColorVars.value}\n      >\n        <div class=\"flex items-center mb-2 relative\">\n          <input\n            value={newTag.value}\n            onInput={(e: Event) => { newTag.value = (e.target as HTMLInputElement).value }}\n            onKeydown={(e: KeyboardEvent) => {\n              if (e.key === 'Enter') {\n                e.preventDefault()\n                addTag()\n              } else if (e.key === 'Backspace') {\n                removeLastTag(e)\n              }\n            }}\n            onFocus={() => { isFocused.value = true }}\n            onBlur={() => { isFocused.value = false }}\n            placeholder={props.placeholder}\n            class={[\n              'border rounded w-full transition-all duration-300 ease-in-out',\n              'focus:outline-none focus:ring-2 focus:ring-opacity-50',\n              inputSize.value,\n              // 使用内联变量而非动态类名\n              'border-gray-200 focus:border-[var(--input-color)]-500 focus:ring-[var(--input-color)]-500',\n              'dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100',\n              'dark:placeholder-gray-400',\n              { 'border-red-400 dark:border-red-600': hasError.value }\n            ]}\n          />\n\n          <Transition\n            enterActiveClass=\"transition duration-200 ease-out\"\n            enterFromClass=\"transform scale-95 opacity-0\"\n            enterToClass=\"transform scale-100 opacity-100\"\n            leaveActiveClass=\"transition duration-150 ease-in\"\n            leaveFromClass=\"transform scale-100 opacity-100\"\n            leaveToClass=\"transform scale-95 opacity-0\"\n          >\n            {hasError.value && (\n              <div class=\"absolute left-0 -bottom-7 flex items-center space-x-1 text-sm text-red-600 bg-red-50 dark:text-red-300 dark:bg-red-900/30 px-2 py-1 rounded-md shadow-sm\">\n                <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span>{errorMessage.value}</span>\n              </div>\n            )}\n          </Transition>\n        </div>\n\n        <div class=\"flex flex-wrap gap-2\">\n          {h(TransitionGroup,\n            {\n              name: 'tag',\n              tag: 'div',\n              class: 'flex flex-wrap gap-2'\n            },\n            () => props.modelValue.map((tag, index) => (\n              h(Tag, {\n                key: `${tag}-${index}`,\n                text: tag,\n                index: index,\n                color: props.color,\n                size: props.size,\n                randomColor: props.randomColors,\n                class: 'tag-transition',\n                onRemove: removeTag\n              })\n            ))\n          )}\n        </div>\n        <style scoped>{`\n          .tag-enter-active,\n          .tag-leave-active {\n            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n          }\n          \n          .tag-enter-from,\n          .tag-leave-to {\n            opacity: 0;\n            transform: translateY(-5px) scale(0.95);\n          }\n          \n          .tag-move {\n            transition: transform 0.4s ease;\n          }\n          \n          .tag-transition {\n            transition-property: all;\n            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            transition-duration: 200ms;\n          }\n          \n          @media (prefers-color-scheme: dark) {\n            input::placeholder {\n              color: rgba(255, 255, 255, 0.5);\n            }\n          }\n        `}</style>\n      </div>\n    )\n  }\n})\n\nexport default TagsList\n","<template>\n  <div class=\"p-6 space-y-10\">\n    <header class=\"flex justify-between items-center\">\n      <div>\n        <h1 class=\"text-2xl font-bold mb-2\">TagsList 标签列表组件</h1>\n        <p class=\"text-gray-600 dark:text-gray-300\">用于管理标签列表的交互式组件，支持添加和删除标签</p>\n      </div>\n    </header>\n\n    <!-- 基础用法 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">基础用法</h2>\n      <div class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n        <TagsList v-model=\"basicTags\" placeholder=\"输入标签并按回车\" />\n      </div>\n      <div class=\"bg-gray-50 dark:bg-gray-700 p-4 rounded border dark:border-gray-600\">\n        <p class=\"text-sm text-gray-600 dark:text-gray-300\">当前标签: {{ basicTags.join(', ') }}</p>\n      </div>\n    </section>\n\n    <!-- 深色模式展示 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">深色模式适配</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div class=\"bg-white p-4 rounded-lg shadow\">\n          <h3 class=\"mb-2\">浅色模式</h3>\n          <TagsList v-model=\"darkModeTags.light\" color=\"blue\" placeholder=\"浅色模式标签\" />\n        </div>\n        <div class=\"bg-gray-800 p-4 rounded-lg shadow\">\n          <h3 class=\"mb-2 text-white\">深色模式</h3>\n          <TagsList v-model=\"darkModeTags.dark\" color=\"blue\" placeholder=\"深色模式标签\" />\n        </div>\n      </div>\n      <div class=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">\n        <p>组件会自动适应系统的深色/浅色模式设置，或者点击右上角的按钮切换模式。</p>\n      </div>\n    </section>\n\n    <!-- 不同颜色 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">不同颜色</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div v-for=\"color in colors\" :key=\"color\" class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n          <h3 class=\"mb-2 dark:text-white\">{{ color }} 主题</h3>\n          <TagsList v-model=\"colorTags[color]\" :color=\"color\" :placeholder=\"`${color}主题`\" />\n        </div>\n      </div>\n    </section>\n\n    <!-- 不同尺寸 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">不同尺寸</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n          <h3 class=\"mb-2 dark:text-white\">小尺寸 (sm)</h3>\n          <TagsList v-model=\"sizeTags.small\" size=\"sm\" placeholder=\"小尺寸标签\" />\n        </div>\n        <div class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n          <h3 class=\"mb-2 dark:text-white\">中尺寸 (md)</h3>\n          <TagsList v-model=\"sizeTags.medium\" size=\"md\" placeholder=\"中尺寸标签\" />\n        </div>\n        <div class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n          <h3 class=\"mb-2 dark:text-white\">大尺寸 (lg)</h3>\n          <TagsList v-model=\"sizeTags.large\" size=\"lg\" placeholder=\"大尺寸标签\" />\n        </div>\n      </div>\n    </section>\n\n    <!-- 最大标签限制 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">最大标签限制</h2>\n      <div class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n        <p class=\"mb-2 text-sm text-gray-600 dark:text-gray-400\">最多只能添加3个标签</p>\n        <TagsList v-model=\"maxTags\" :maxTags=\"3\" placeholder=\"最多添加3个标签\" @error=\"handleError\" />\n      </div>\n    </section>\n\n    <!-- 自定义验证 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">自定义验证</h2>\n      <div class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n        <p class=\"mb-2 text-sm text-gray-600 dark:text-gray-400\">验证规则：标签长度必须在2-10个字符之间</p>\n        <TagsList v-model=\"validatedTags\" :validation=\"validateTag\" placeholder=\"2-10个字符\" @error=\"handleError\" />\n      </div>\n    </section>\n\n    <!-- 重复标签 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">允许重复标签</h2>\n      <div class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n        <TagsList v-model=\"duplicateTags\" :allowDuplicates=\"true\" placeholder=\"可以添加重复标签\" />\n      </div>\n    </section>\n\n    <!-- 随机颜色标签 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">随机颜色标签</h2>\n      <div class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n        <p class=\"mb-2 text-sm text-gray-600 dark:text-gray-400\">每个标签都有不同的随机颜色</p>\n        <TagsList v-model=\"randomColorTags\" :randomColors=\"true\" placeholder=\"添加彩色标签\" />\n      </div>\n    </section>\n\n    <!-- 使用不同按钮操作标签 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">使用按钮操作</h2>\n      <div class=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\n        <TagsList v-model=\"buttonTags\" placeholder=\"输入标签\" />\n        <div class=\"mt-4 flex gap-2 flex-wrap\">\n          <button\n            class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500\"\n            @click=\"addRandomTag\">添加随机标签</button>\n          <button\n            class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 bg-red-600 text-white hover:bg-red-700 focus:ring-red-500\"\n            @click=\"clearAllTags\">清空所有标签</button>\n          <button\n            class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 bg-gray-500 text-white hover:bg-gray-600 focus:ring-gray-400 dark:bg-gray-600 dark:hover:bg-gray-700\"\n            @click=\"shuffleTags\">随机排序标签</button>\n        </div>\n      </div>\n    </section>\n\n    <!-- 错误提示弹窗 -->\n    <Transition enter-active-class=\"transition duration-300 ease-out\"\n      enter-from-class=\"transform translate-y-10 opacity-0\" enter-to-class=\"transform translate-y-0 opacity-100\"\n      leave-active-class=\"transition duration-200 ease-in\" leave-from-class=\"transform translate-y-0 opacity-100\"\n      leave-to-class=\"transform translate-y-10 opacity-0\">\n      <div v-if=\"lastError\"\n        class=\"fixed bottom-4 right-4 bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 px-4 py-2 rounded-md shadow-lg flex items-center\">\n        <svg class=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fill-rule=\"evenodd\"\n            d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n            clip-rule=\"evenodd\" />\n        </svg>\n        {{ lastError }}\n      </div>\n    </Transition>\n\n    <!-- 小结与最佳实践 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">小结与最佳实践</h2>\n      <div class=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow\">\n        <h3 class=\"text-lg font-medium mb-4 dark:text-white\">使用 TagsList 组件的建议</h3>\n\n        <ul class=\"space-y-4 text-gray-700 dark:text-gray-300\">\n          <li class=\"flex gap-2\">\n            <span class=\"text-green-500 flex-shrink-0\">\n              <svg class=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </span>\n            <div>\n              <span class=\"font-medium\">明确标签的用途</span>：在使用标签列表前，确定标签的具体用途和业务含义，如分类、标注、关键词等。\n            </div>\n          </li>\n\n          <li class=\"flex gap-2\">\n            <span class=\"text-green-500 flex-shrink-0\">\n              <svg class=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </span>\n            <div>\n              <span class=\"font-medium\">设置合理的标签限制</span>：使用 maxTags 属性限制标签数量，防止用户添加过多标签导致界面混乱。\n            </div>\n          </li>\n\n          <li class=\"flex gap-2\">\n            <span class=\"text-green-500 flex-shrink-0\">\n              <svg class=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </span>\n            <div>\n              <span class=\"font-medium\">添加有效验证</span>：使用 validation 属性验证标签内容，避免无效或不合规的标签。\n            </div>\n          </li>\n\n          <li class=\"flex gap-2\">\n            <span class=\"text-green-500 flex-shrink-0\">\n              <svg class=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </span>\n            <div>\n              <span class=\"font-medium\">选择恰当的颜色</span>：根据界面主题选择合适的标签颜色，或使用 randomColors 属性增加视觉区分度。\n            </div>\n          </li>\n\n          <li class=\"flex gap-2\">\n            <span class=\"text-green-500 flex-shrink-0\">\n              <svg class=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </span>\n            <div>\n              <span class=\"font-medium\">考虑深色模式</span>：组件已内置深色模式支持，确保您的应用在两种模式下都能良好显示。\n            </div>\n          </li>\n\n          <li class=\"flex gap-2\">\n            <span class=\"text-green-500 flex-shrink-0\">\n              <svg class=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </span>\n            <div>\n              <span class=\"font-medium\">错误处理</span>：监听 error 事件以便向用户提供即时反馈，提升用户体验。\n            </div>\n          </li>\n        </ul>\n      </div>\n    </section>\n\n    <!-- API 文档 -->\n    <section class=\"space-y-4\">\n      <h2 class=\"text-xl font-semibold border-b pb-2 dark:border-gray-700\">API 文档</h2>\n\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\n        <div class=\"border-b dark:border-gray-700\">\n          <div class=\"px-6 py-4\">\n            <h3 class=\"text-lg font-medium dark:text-white\">Props</h3>\n          </div>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead class=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    属性名</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    类型</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    默认值</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    说明</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">modelValue\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>string[]</code>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">必填</td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">标签数组，支持v-model绑定</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">color</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    <code>ThemeColor</code>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>'blue'</code>\n                  </td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">标签颜色主题</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">size</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    <code>'sm' | 'md' | 'lg'</code>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>'md'</code>\n                  </td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">标签尺寸</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">placeholder\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>string</code>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>'请输入标签'</code>\n                  </td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">输入框占位文本</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">maxTags</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>number</code>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>Infinity</code>\n                  </td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">最大标签数量</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">validation\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    <code>(tag: string) => boolean | string</code>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    <code>undefined</code>\n                  </td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">自定义验证函数，返回true表示验证通过，返回字符串表示错误信息</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                    allowDuplicates</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>boolean</code>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>false</code>\n                  </td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">是否允许添加重复标签</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">randomColors\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>boolean</code>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\"><code>false</code>\n                  </td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">是否为每个标签随机分配颜色</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div class=\"border-b dark:border-gray-700\">\n          <div class=\"px-6 py-4\">\n            <h3 class=\"text-lg font-medium dark:text-white\">事件</h3>\n          </div>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead class=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    事件名</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    参数</th>\n                  <th scope=\"col\"\n                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    说明</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                    update:modelValue</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    <code>(tags: string[])</code>\n                  </td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">当标签列表变化时触发</td>\n                </tr>\n                <tr>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">error</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    <code>(message: string)</code>\n                  </td>\n                  <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">当验证失败时触发，返回错误信息</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div>\n          <div class=\"px-6 py-4\">\n            <h3 class=\"text-lg font-medium dark:text-white\">类型定义</h3>\n          </div>\n          <div class=\"px-6 pb-4\">\n            <div class=\"bg-gray-50 dark:bg-gray-700 rounded p-4 overflow-auto\">\n              <pre class=\"text-xs sm:text-sm text-gray-800 dark:text-gray-200\"><code>// 标签尺寸类型\ntype TagSize = 'sm' | 'md' | 'lg';\n\n// 颜色类型\ntype ThemeColor =\n  | 'slate' | 'gray' | 'zinc' | 'neutral' | 'stone'  // 灰色系\n  | 'red' | 'orange' | 'amber' | 'yellow'            // 暖色系\n  | 'lime' | 'green' | 'emerald' | 'teal'            // 绿色系\n  | 'cyan' | 'sky' | 'blue' | 'indigo'               // 蓝色系\n  | 'violet' | 'purple' | 'fuchsia' | 'pink' | 'rose'; // 紫粉色系</code></pre>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive } from 'vue';\nimport TagsList from './TagsList';\nimport type { ThemeColor } from './TagsList';\n\n// 基本用法\nconst basicTags = ref<string[]>(['Vue', 'React', 'Angular']);\n\n// 深色模式示例\nconst darkModeTags = reactive({\n  light: ['浅色', '模式', '标签'],\n  dark: ['深色', '模式', '标签']\n});\n\n// 不同颜色\nconst colors: ThemeColor[] = ['blue', 'green', 'red', 'purple', 'amber', 'emerald', 'indigo', 'rose'];\nconst colorTags = reactive<Record<string, string[]>>({\n  blue: ['蓝色标签', '深海'],\n  green: ['绿色标签', '森林'],\n  red: ['红色标签', '火焰'],\n  purple: ['紫色标签', '魔法'],\n  amber: ['琥珀色标签', '金秋'],\n  emerald: ['翡翠色标签', '绿宝石'],\n  indigo: ['靛蓝色标签', '夜空'],\n  rose: ['玫瑰色标签', '花朵'],\n});\n\n// 不同尺寸\nconst sizeTags = reactive({\n  small: ['小标签1', '小标签2'],\n  medium: ['中标签1', '中标签2'],\n  large: ['大标签1', '大标签2'],\n});\n\n// 标签数量限制\nconst maxTags = ref<string[]>(['限制标签1']);\n\n// 验证标签\nconst validatedTags = ref<string[]>(['有效标签']);\n\n// 允许重复标签\nconst duplicateTags = ref<string[]>(['重复', '重复']);\n\n// 随机颜色标签\nconst randomColorTags = ref<string[]>(['红色', '蓝色', '绿色', '黄色']);\n\n// 按钮操作标签\nconst buttonTags = ref<string[]>(['点击按钮', '添加更多']);\n\n// 错误提示\nconst lastError = ref<string>('');\n\n// 验证函数\nconst validateTag = (tag: string): boolean | string => {\n  if (tag.length < 2) return '标签长度不能少于2个字符';\n  if (tag.length > 10) return '标签长度不能超过10个字符';\n  return true;\n};\n\n// 错误处理\nconst handleError = (message: string) => {\n  lastError.value = message;\n  setTimeout(() => {\n    lastError.value = '';\n  }, 3000);\n};\n\n// 添加随机标签\nconst addRandomTag = () => {\n  const randomTags = ['技术', '设计', '运营', '产品', '市场', '销售', '客服', '人力', '财务', '法务'];\n  const randomIndex = Math.floor(Math.random() * randomTags.length);\n  buttonTags.value.push(randomTags[randomIndex] + Math.floor(Math.random() * 100));\n};\n\n// 清空所有标签\nconst clearAllTags = () => {\n  buttonTags.value = [];\n};\n\n// 随机排序标签\nconst shuffleTags = () => {\n  buttonTags.value = [...buttonTags.value].sort(() => Math.random() - 0.5);\n};\n</script>\n\n<style scoped>\n.space-y-10>*+* {\n  margin-top: 2.5rem;\n}\n\n.space-y-4>*+* {\n  margin-top: 1rem;\n}\n\n/* 为深色模式下的内容增加过渡效果 */\nhtml.dark * {\n  transition-property: background-color, border-color, color;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n</style>"],"names":["THEME_COLOR_MAP","COLOR_MAP","TAILWIND_COLORS","Object","keys","getThemeColor","color","Tag","defineComponent","name","props","text","type","String","required","index","Number","default","size","randomColor","Boolean","emits","setup","emit","getStableRandomColor","hashCode","Array","from","reduce","hash","char","charCodeAt","colorIndex","Math","abs","length","tagColor","computed","sizeClasses","sm","md","lg","handleRemove","colorVars","colorKey","value","colorObj","blue","light","bg","border","dark","_createVNode","TagsList","modelValue","validator","includes","placeholder","maxTags","Infinity","validation","Function","undefined","allowDuplicates","randomColors","newTag","ref","isFocused","hasError","errorMessage","inputSize","containerClass","inputColorVars","setError","message","setTimeout","validateAndAddTag","tag","trim","validationResult","addTag","removeTag","newTags","splice","removeLastTag","event","key","e","target","preventDefault","onFocus","onBlur","Transition","h","TransitionGroup","class","map","onRemove","basicTags","darkModeTags","reactive","colors","colorTags","sizeTags","validatedTags","duplicateTags","randomColorTags","buttonTags","lastError","validateTag","handleError","addRandomTag","randomTags","randomIndex","clearAllTags","shuffleTags"],"mappings":"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"}