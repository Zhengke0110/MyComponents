{"version":3,"file":"Segment-CWc85apB.js","sources":["../../src/libs/Segment/Segment.tsx"],"sourcesContent":["import { computed, defineComponent, PropType } from 'vue';\nimport './style.css';\n\nexport interface SegmentOption {\n  label: string;\n  value: string | number;\n  icon?: string;\n}\n\nconst SEGMENT_CONFIGS = {\n  sizeClasses: {\n    sm: \"px-2.5 py-1.5 text-sm\",\n    md: \"px-3.5 py-2 text-base\",\n    lg: \"px-4 py-2.5 text-lg\",\n  },\n  iconSizeClasses: {\n    sm: \"text-sm\",\n    md: \"text-base\",\n    lg: \"text-lg\",\n  },\n  colors: {\n    container: {\n      light: \"bg-gray-100\",\n      dark: \"dark:bg-gray-800\"\n    },\n    button: {\n      active: {\n        light: \"bg-white text-gray-900\",\n        dark: \"dark:bg-gray-700 dark:text-gray-100\"\n      },\n      inactive: {\n        light: \"text-gray-500 hover:text-gray-900 hover:bg-gray-50\",\n        dark: \"dark:text-gray-400 dark:hover:text-gray-100 dark:hover:bg-gray-700\"\n      }\n    },\n    disabled: {\n      light: \"opacity-50\",\n      dark: \"dark:opacity-40\"\n    }\n  }\n};\n\nconst Segment = defineComponent({\n  name: 'Segment',\n  props: {\n    options: {\n      type: Array as PropType<SegmentOption[]>,\n      required: true\n    },\n    modelValue: {\n      type: [String, Number] as PropType<string | number>,\n      default: undefined\n    },\n    size: {\n      type: String as PropType<'sm' | 'md' | 'lg'>,\n      default: 'md'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    block: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup(props, { emit }) {\n    const handleSelect = (optionValue: string | number) => {\n      if (props.disabled) return;\n      emit('update:modelValue', optionValue);\n      emit('change', optionValue);\n    };\n\n    const containerClass = computed(() => [\n      'segment-container inline-flex rounded-lg p-1 transition-all',\n      SEGMENT_CONFIGS.colors.container.light,\n      SEGMENT_CONFIGS.colors.container.dark,\n      props.disabled ? SEGMENT_CONFIGS.colors.disabled.light + ' ' + SEGMENT_CONFIGS.colors.disabled.dark : '',\n      props.block ? 'w-full' : '',\n    ]);\n\n    return () => (\n      <div\n        class={containerClass.value}\n        role=\"tablist\"\n        aria-disabled={props.disabled}\n      >\n        {props.options.map((item) => {\n          const isActive = props.modelValue === item.value;\n          const buttonClass = [\n            'segment-button relative flex items-center justify-center rounded-md transition-all duration-300 ease-out',\n            SEGMENT_CONFIGS.sizeClasses[props.size],\n            props.block ? 'flex-1' : '',\n            isActive\n              ? `is-active ${SEGMENT_CONFIGS.colors.button.active.light} ${SEGMENT_CONFIGS.colors.button.active.dark} shadow dark:shadow-gray-900/30`\n              : `${SEGMENT_CONFIGS.colors.button.inactive.light} ${SEGMENT_CONFIGS.colors.button.inactive.dark}`,\n            props.disabled ? 'cursor-not-allowed' : 'cursor-pointer',\n          ];\n\n          return (\n            <button\n              key={item.value}\n              class={buttonClass}\n              role=\"tab\"\n              aria-selected={isActive}\n              tabindex={props.disabled ? -1 : 0}\n              onClick={() => handleSelect(item.value)}\n              onKeydown={(e) => {\n                if ((e.key === ' ' || e.key === 'Enter') && !props.disabled) {\n                  e.preventDefault();\n                  handleSelect(item.value);\n                }\n              }}\n            >\n              {item.icon && (\n                <i\n                  class={[item.icon, SEGMENT_CONFIGS.iconSizeClasses[props.size], 'mr-1']}\n                ></i>\n              )}\n              {item.label}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n});\n\nexport default Segment;\n"],"names":["SEGMENT_CONFIGS","sizeClasses","sm","md","lg","iconSizeClasses","colors","container","light","dark","button","active","inactive","disabled","Segment","defineComponent","name","props","options","type","Array","required","modelValue","String","Number","default","undefined","size","Boolean","block","emits","setup","emit","handleSelect","optionValue","containerClass","computed","_createVNode","value","map","item","isActive","buttonClass","onClick","e","key","preventDefault","icon","label"],"mappings":"sDASA,MAAMA,EAAkB,CACtBC,YAAa,CACXC,GAAI,wBACJC,GAAI,wBACJC,GAAI,qBACL,EACDC,gBAAiB,CACfH,GAAI,UACJC,GAAI,YACJC,GAAI,SACL,EACDE,OAAQ,CACNC,UAAW,CACTC,MAAO,cACPC,KAAM,kBACP,EACDC,OAAQ,CACNC,OAAQ,CACNH,MAAO,yBACPC,KAAM,qCACP,EACDG,SAAU,CACRJ,MAAO,qDACPC,KAAM,oEACR,CACD,EACDI,SAAU,CACRL,MAAO,aACPC,KAAM,iBACR,CACF,CACF,EAEMK,EAAUC,EAAgB,CAC9BC,KAAM,UACNC,MAAO,CACLC,QAAS,CACPC,KAAMC,MACNC,SAAU,EACX,EACDC,WAAY,CACVH,KAAM,CAACI,OAAQC,MAAM,EACrBC,QAASC,MACV,EACDC,KAAM,CACJR,KAAMI,OACNE,QAAS,IACV,EACDZ,SAAU,CACRM,KAAMS,QACNH,QAAS,EACV,EACDI,MAAO,CACLV,KAAMS,QACNH,QAAS,EACX,CACD,EACDK,MAAO,CAAC,oBAAqB,QAAQ,EACrCC,MAAMd,EAAO,CAAEe,KAAAA,CAAK,EAAG,CACrB,MAAMC,EAAgBC,GAAiC,CACjDjB,EAAMJ,WACVmB,EAAK,oBAAqBE,CAAW,EACrCF,EAAK,SAAUE,CAAW,EAC3B,EAEKC,EAAiBC,EAAS,IAAM,CACpC,8DACApC,EAAgBM,OAAOC,UAAUC,MACjCR,EAAgBM,OAAOC,UAAUE,KACjCQ,EAAMJ,SAAWb,EAAgBM,OAAOO,SAASL,MAAQ,IAAMR,EAAgBM,OAAOO,SAASJ,KAAO,GACtGQ,EAAMY,MAAQ,SAAW,EAAE,CAC5B,EAED,MAAO,IAAAQ,EAAA,MAAA,CAAA,MAEIF,EAAeG,MAAK,KAAA,UAAA,gBAEZrB,EAAMJ,QAAQ,EAAA,CAE5BI,EAAMC,QAAQqB,IAAKC,GAAS,CAC3B,MAAMC,EAAWxB,EAAMK,aAAekB,EAAKF,MACrCI,EAAc,CAClB,2GACA1C,EAAgBC,YAAYgB,EAAMU,IAAI,EACtCV,EAAMY,MAAQ,SAAW,GACzBY,EACI,aAAazC,EAAgBM,OAAOI,OAAOC,OAAOH,KAAK,IAAIR,EAAgBM,OAAOI,OAAOC,OAAOF,IAAI,kCACpG,GAAGT,EAAgBM,OAAOI,OAAOE,SAASJ,KAAK,IAAIR,EAAgBM,OAAOI,OAAOE,SAASH,IAAI,GAClGQ,EAAMJ,SAAW,qBAAuB,gBAAgB,EAG1D,OAAAwB,EAAA,SAAA,CAAA,IAESG,EAAKF,MAAK,MACRI,EAAW,KAAA,MAAA,gBAEHD,EAAQ,SACbxB,EAAMJ,SAAW,GAAK,EAAC,QACxB8B,IAAMV,EAAaO,EAAKF,KAAK,EAAC,UAC3BM,GAAM,EACXA,EAAEC,MAAQ,KAAOD,EAAEC,MAAQ,UAAY,CAAC5B,EAAMJ,WACjD+B,EAAEE,eAAgB,EAClBb,EAAaO,EAAKF,KAAK,EAE3B,CAAC,EAAA,CAEAE,EAAKO,MAAIV,EAAA,IAAA,CAAA,MAEC,CAACG,EAAKO,KAAM/C,EAAgBK,gBAAgBY,EAAMU,IAAI,EAAG,MAAM,CAEzE,EAAA,KAAA,CAAA,EACAa,EAAKQ,KAAK,EAAA,GAAA,CAAA,gBAAA,WAAA,UAAA,WAAA,CAAA,CAGhB,CAAA,CAAC,EAEL,GAAA,CAAA,eAAA,CAAA,CACH,CACF,CAAC"}