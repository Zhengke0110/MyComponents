import{d as F,c as o,b as e,_ as p,f as E,g as s,l as m,z as b,x as l,e as d,m as c}from"./index-BSjwMPY1.js";const B=F({name:"Divider",props:{type:{type:String,default:"horizontal"},align:{type:String,default:"center"},dashed:{type:Boolean,default:!1},plain:{type:Boolean,default:!1},borderWidth:{type:[Number,String],default:1},className:{type:String,default:""},textClassName:{type:String,default:""},borderStyle:{type:String,default:"solid"},borderColor:{type:String,default:""},animated:{type:[Boolean,String],default:!1},animationDuration:{type:Number,default:300},theme:{type:String,default:"auto"},orientation:{type:String,default:"center"},orientationMargin:{type:[String,Number],default:0},styles:{type:Object,default:()=>({})}},setup(u,{slots:t}){const x=o(()=>!!t.default),n=o(()=>{const r=["divider",`divider-${u.type}`,u.className,u.dashed?"border-dashed":"","transition-all"];return u.theme==="dark"?r.push("divider-dark"):u.theme==="auto"&&r.push("dark:border-gray-600","dark:text-gray-300"),u.animated&&(u.animated==="always"?r.push("divider-animated-always"):u.animated==="hover"?r.push("divider-animated-hover"):r.push("divider-animated")),u.type==="horizontal"?(r.push("flex","items-center","w-full","my-4"),x.value&&r.push(`divider-text-${u.align||u.orientation}`)):r.push("inline-block","h-full","mx-2","align-middle"),r.filter(Boolean).join(" ")}),i=o(()=>{const r={...u.styles,borderWidth:typeof u.borderWidth=="number"?`${u.borderWidth}px`:u.borderWidth,borderStyle:u.dashed?"dashed":u.borderStyle};return u.borderColor&&(r.borderColor=u.borderColor),u.animated&&(r.transitionDuration=`${u.animationDuration}ms`),r}),y=o(()=>["divider-text","px-3","text-sm",u.plain?"font-normal":"font-medium","text-gray-500","dark:text-gray-400",u.textClassName].filter(Boolean).join(" ")),a=o(()=>u.orientation!=="center"&&typeof u.orientationMargin=="number"?u.orientation==="left"?{marginLeft:`${u.orientationMargin}px`}:{marginRight:`${u.orientationMargin}px`}:u.orientation!=="center"&&typeof u.orientationMargin=="string"?u.orientation==="left"?{marginLeft:u.orientationMargin}:{marginRight:u.orientationMargin}:{});return()=>{var r;if(u.type==="horizontal")if(x.value){const g=u.align||u.orientation;return e("div",{class:n.value,role:"separator","aria-orientation":"horizontal"},[g!=="right"&&e("div",{class:"flex-grow border-t dark:border-gray-600 transition-all",style:{...i.value}},null,4),e("div",{class:y.value,style:a.value},[(r=t.default)==null?void 0:r.call(t)],6),g!=="left"&&e("div",{class:"flex-grow border-t dark:border-gray-600 transition-all",style:{...i.value}},null,4)],2)}else return e("div",{class:`${n.value} border-t dark:border-gray-600`,style:i.value,role:"separator","aria-orientation":"horizontal"},null,4);else return e("div",{class:`${n.value} border-l dark:border-gray-600`,style:i.value,role:"separator","aria-orientation":"vertical"},null,4)}}}),f=F({name:"DividerDemo",components:{Divider:B}}),k={class:"divider-demo p-6"},C={class:"h-10 flex items-center"};function h(u,t,x,n,i,y){const a=b("Divider");return c(),E("div",k,[t[16]||(t[16]=s("h2",{class:"text-xl font-bold mb-4 dark:text-white"},"基本使用",-1)),e(a),t[17]||(t[17]=s("h2",{class:"text-xl font-bold my-4 dark:text-white"},"带文字的分割线",-1)),e(a,null,{default:l(()=>t[0]||(t[0]=[d("默认居中")])),_:1}),e(a,{align:"left"},{default:l(()=>t[1]||(t[1]=[d("左对齐")])),_:1}),e(a,{align:"right"},{default:l(()=>t[2]||(t[2]=[d("右对齐")])),_:1}),t[18]||(t[18]=s("h2",{class:"text-xl font-bold my-4 dark:text-white"},"自定义样式",-1)),e(a,{dashed:""}),e(a,{borderWidth:2,borderColor:"#1890ff"},{default:l(()=>t[3]||(t[3]=[d("自定义颜色和宽度")])),_:1}),e(a,{dashed:"",plain:""},{default:l(()=>t[4]||(t[4]=[d("虚线和普通文本")])),_:1}),t[19]||(t[19]=s("h2",{class:"text-xl font-bold my-4 dark:text-white"},"垂直分割线",-1)),s("div",C,[t[5]||(t[5]=d(" 文本 ")),e(a,{type:"vertical"}),t[6]||(t[6]=s("a",{href:"#",class:"text-blue-500"},"链接",-1)),e(a,{type:"vertical"}),t[7]||(t[7]=s("a",{href:"#",class:"text-blue-500"},"链接",-1))]),t[20]||(t[20]=s("h2",{class:"text-xl font-bold my-4 dark:text-white"},"带动画效果",-1)),e(a,{animated:""},{default:l(()=>t[8]||(t[8]=[d("鼠标悬停动画")])),_:1}),e(a,{animated:"always"},{default:l(()=>t[9]||(t[9]=[d("持续动画")])),_:1}),e(a,{animated:"hover"},{default:l(()=>t[10]||(t[10]=[d("交互动画")])),_:1}),t[21]||(t[21]=s("h2",{class:"text-xl font-bold my-4 dark:text-white"},"方向与边距",-1)),e(a,{orientation:"left",orientationMargin:20},{default:l(()=>t[11]||(t[11]=[d("左侧定制边距")])),_:1}),e(a,{orientation:"right",orientationMargin:"40px"},{default:l(()=>t[12]||(t[12]=[d("右侧定制边距")])),_:1}),t[22]||(t[22]=s("h2",{class:"text-xl font-bold my-4 dark:text-white"},"主题设置",-1)),e(a,{theme:"light"},{default:l(()=>t[13]||(t[13]=[d("浅色主题")])),_:1}),e(a,{theme:"dark"},{default:l(()=>t[14]||(t[14]=[d("深色主题")])),_:1}),e(a,{theme:"auto"},{default:l(()=>t[15]||(t[15]=[d("自动主题（跟随系统）")])),_:1}),t[23]||(t[23]=m('<section class="mb-10"><h2 class="mb-4 text-xl font-semibold text-gray-900 dark:text-white">组件API</h2><div class="rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800"><h3 class="mb-4 text-lg font-medium text-gray-900 dark:text-white">属性 (Props)</h3><div class="mb-6 overflow-x-auto"><table class="min-w-full border-collapse"><thead><tr class="border-b border-gray-200 dark:border-gray-700"><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white">属性名</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white">类型</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white">默认值</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white">描述</th></tr></thead><tbody class="divide-y divide-gray-200 dark:divide-gray-700"><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">type</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;horizontal&#39; | &#39;vertical&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;horizontal&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">分割线类型：水平或垂直</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">align</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;center&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">文本对齐方式（水平分割线）</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">dashed</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">boolean</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">false</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">是否使用虚线</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">plain</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">boolean</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">false</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">文字是否为普通样式</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">borderWidth</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">number | string</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">1</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">分割线宽度</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">borderStyle</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">string</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;solid&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">边框样式</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">borderColor</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">string</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">边框颜色</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">animated</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">boolean | &#39;hover&#39; | &#39;always&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">false</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">动画效果类型</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">animationDuration</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">number</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">300</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">动画持续时间（毫秒）</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">theme</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;light&#39; | &#39;dark&#39; | &#39;auto&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;auto&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">主题样式</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">orientation</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;center&#39; | &#39;left&#39; | &#39;right&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;center&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">文本定位方向</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">orientationMargin</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">string | number</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">0</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">文本定位边距</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">className</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">string</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">自定义容器类名</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">textClassName</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">string</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">&#39;&#39;</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">自定义文本类名</td></tr><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">styles</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">CSSProperties</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">{}</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">自定义行内样式</td></tr></tbody></table></div><h3 class="mb-4 text-lg font-medium text-gray-900 dark:text-white">插槽 (Slots)</h3><div class="overflow-x-auto"><table class="min-w-full border-collapse"><thead><tr class="border-b border-gray-200 dark:border-gray-700"><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white">插槽名</th><th class="px-4 py-2 text-left font-medium text-gray-900 dark:text-white">描述</th></tr></thead><tbody><tr><td class="px-4 py-2 font-medium text-gray-900 dark:text-white">default</td><td class="px-4 py-2 text-gray-700 dark:text-gray-300">分割线中间的内容</td></tr></tbody></table></div></div></section><section class="mb-10"><h2 class="mb-4 text-xl font-semibold text-gray-900 dark:text-white">主题设置与暗色模式</h2><div class="rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800"><p class="mb-4 text-sm text-gray-600 dark:text-gray-300"> Divider 组件内置了对暗色模式的支持，可通过以下方式控制： </p><div class="mb-4"><h3 class="mb-3 text-lg font-medium text-gray-900 dark:text-white">1. 使用 theme 属性</h3><p class="mb-2 text-sm text-gray-600 dark:text-gray-300"> 直接在组件上设置 <code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">theme</code> 属性： </p><ul class="ml-5 list-disc space-y-1 text-sm text-gray-600 dark:text-gray-300"><li><code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">light</code> - 始终使用浅色主题</li><li><code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">dark</code> - 始终使用深色主题</li><li><code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">auto</code> - 根据页面的 <code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">dark</code> 类自动切换</li></ul></div><div class="mb-4"><h3 class="mb-3 text-lg font-medium text-gray-900 dark:text-white">2. 使用全局暗色模式</h3><p class="text-sm text-gray-600 dark:text-gray-300"> 当 <code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">theme=&quot;auto&quot;</code> 时，组件会检测页面根元素是否有 <code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">dark</code> 类，并自动应用对应样式。 </p></div><div class="rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20"><h4 class="mb-2 flex items-center text-blue-800 dark:text-blue-300"><span class="icon-[material-symbols--info-outline-rounded] mr-2 h-5 w-5"></span> 暗色模式提示 </h4><p class="text-sm text-blue-700 dark:text-blue-300"> 使用全局主题API可以轻松切换暗色模式：<code class="rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60">toggleDark()</code> 函数或 <code class="rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60">isDark.value</code> 响应式变量。 </p></div></div></section><section class="mb-10"><h2 class="mb-4 text-xl font-semibold text-gray-900 dark:text-white">小结与最佳实践</h2><div class="rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800"><div class="space-y-4"><p class="text-gray-700 dark:text-gray-300"> Divider 分割线组件是一个简单但实用的布局辅助组件，可用于内容分区、视觉分隔和信息层级划分。 以下是一些使用建议： </p><ul class="ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300"><li>使用水平分割线（<code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">type=&quot;horizontal&quot;</code>）分隔不同章节的内容</li><li>使用垂直分割线（<code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">type=&quot;vertical&quot;</code>）分隔行内元素，如操作按钮</li><li>为长文本内容设置带文字的分割线，提高内容的可读性和结构化</li><li>在信息密集的界面使用<code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">dashed</code>虚线样式，减轻视觉负担</li><li>利用<code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">align</code>或<code class="rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800">orientation</code>属性调整文字位置，增强布局的灵活性</li></ul><div class="rounded-lg border border-gray-100 bg-gray-50 p-4 dark:border-gray-700 dark:bg-gray-800/50"><h4 class="mb-2 flex items-center text-gray-700 dark:text-gray-300"><span class="icon-[material-symbols--tips-and-updates-outline-rounded] mr-2 h-5 w-5"></span> 设计建议 </h4><p class="text-sm text-gray-600 dark:text-gray-400"> 保持分割线的视觉一致性对于建立清晰的信息层级至关重要。建议： </p><ul class="mt-2 ml-5 list-disc space-y-1 text-sm text-gray-600 dark:text-gray-400"><li>在同一页面中保持分割线样式的一致性</li><li>使用细线（1px）作为默认宽度，保持界面的轻量感</li><li>为相关内容组使用相同样式的分割线</li><li>考虑在深色模式下适当降低分割线的对比度</li></ul></div><p class="text-gray-700 dark:text-gray-300"> 分割线虽然简单，但在布局设计中起着重要的结构化作用。合理使用分割线可以有效提升内容的可读性和页面的整体层次感。 </p><div class="rounded-lg border border-green-100 bg-green-50 p-4 dark:border-green-900 dark:bg-green-900/20"><h4 class="mb-2 flex items-center text-green-800 dark:text-green-300"><span class="icon-[material-symbols--check-circle-outline-rounded] mr-2 h-5 w-5"></span> 可访问性提示 </h4><p class="text-sm text-green-700 dark:text-green-300"> Divider 组件已内置 <code class="rounded bg-green-100 px-1 py-0.5 font-mono dark:bg-green-800/60">role=&quot;separator&quot;</code> 和 <code class="rounded bg-green-100 px-1 py-0.5 font-mono dark:bg-green-800/60">aria-orientation</code> 属性， 符合 WCAG 可访问性标准，帮助屏幕阅读器用户理解页面结构。 </p></div></div></div></section>',3))])}const A=p(f,[["render",h]]);export{B as Divider,A as default};
//# sourceMappingURL=index-D6Kv1kzs.js.map
