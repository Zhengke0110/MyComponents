{"version":3,"file":"index-BCpWIW2G.js","sources":["../../src/libs/CheckBox/config.ts","../../src/libs/CheckBox/types.ts","../../src/libs/CheckBox/CheckBox.tsx","../../src/libs/CheckBox/View.vue"],"sourcesContent":["// 颜色系统基本类型\ntype ColorSystemType = \n  | 'slate' | 'gray' | 'zinc' | 'neutral' | 'stone'  // 灰色系\n  | 'red' | 'orange' | 'amber' | 'yellow'            // 暖色系\n  | 'lime' | 'green' | 'emerald' | 'teal'            // 绿色系\n  | 'cyan' | 'sky' | 'blue' | 'indigo'               // 蓝色系\n  | 'violet' | 'purple' | 'fuchsia' | 'pink' | 'rose'; // 紫粉色系\n\n// 语义化主题类型\ntype ThemeSystemType = 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'info';\n\n// 合并的类型，支持颜色和主题两种方式\nexport type CheckBoxType = ColorSystemType | ThemeSystemType;\n\n// 主题色对应的实际颜色\nexport const THEME_COLOR_MAP: Record<ThemeSystemType, ColorSystemType> = {\n  primary: 'indigo',\n  secondary: 'gray',\n  success: 'green',\n  warning: 'yellow',\n  danger: 'red',\n  info: 'blue'\n};\n\n/**\n * 不同尺寸的样式映射\n */\nexport const sizeClassesMap = {\n  sm: {\n    container: \"h-5\",\n    checkbox: \"size-3.5\",\n    input: \"size-3.5\",\n    icon: \"size-2.5\",\n    label: \"ml-2 text-sm\",\n    strokeWidth: 2.5,\n  },\n  md: {\n    container: \"h-6\",\n    checkbox: \"size-4\",\n    input: \"size-4\",\n    icon: \"size-3\",\n    label: \"ml-2 text-base\",\n    strokeWidth: 2.5,\n  },\n  lg: {\n    container: \"h-7\",\n    checkbox: \"size-5\",\n    input: \"size-5\",\n    icon: \"size-4\",\n    label: \"ml-3 text-lg\",\n    strokeWidth: 3,\n  },\n};\n\n/**\n * Tailwind CSS 颜色类名映射\n */\nexport const colorClassMap: Record<ColorSystemType, {\n  border: string;\n  hoverBorder: string;\n  checkedBg: string;\n  focusRing: string;\n}> = {\n  // 灰色系\n  slate: {\n    border: \"border-slate-300 dark:border-slate-400\",\n    hoverBorder: \"hover:border-slate-500 dark:hover:border-slate-300\",\n    checkedBg: \"checked:bg-slate-600 dark:checked:bg-slate-400\",\n    focusRing: \"focus-visible:ring-slate-500 dark:focus-visible:ring-slate-300\",\n  },\n  gray: {\n    border: \"border-gray-300 dark:border-gray-400\",\n    hoverBorder: \"hover:border-gray-500 dark:hover:border-gray-300\",\n    checkedBg: \"checked:bg-gray-600 dark:checked:bg-gray-400\",\n    focusRing: \"focus-visible:ring-gray-500 dark:focus-visible:ring-gray-300\",\n  },\n  zinc: {\n    border: \"border-zinc-300 dark:border-zinc-400\",\n    hoverBorder: \"hover:border-zinc-500 dark:hover:border-zinc-300\",\n    checkedBg: \"checked:bg-zinc-600 dark:checked:bg-zinc-400\",\n    focusRing: \"focus-visible:ring-zinc-500 dark:focus-visible:ring-zinc-300\",\n  },\n  neutral: {\n    border: \"border-neutral-300 dark:border-neutral-400\",\n    hoverBorder: \"hover:border-neutral-500 dark:hover:border-neutral-300\",\n    checkedBg: \"checked:bg-neutral-600 dark:checked:bg-neutral-400\",\n    focusRing: \"focus-visible:ring-neutral-500 dark:focus-visible:ring-neutral-300\",\n  },\n  stone: {\n    border: \"border-stone-300 dark:border-stone-400\",\n    hoverBorder: \"hover:border-stone-500 dark:hover:border-stone-300\",\n    checkedBg: \"checked:bg-stone-600 dark:checked:bg-stone-400\",\n    focusRing: \"focus-visible:ring-stone-500 dark:focus-visible:ring-stone-300\",\n  },\n  \n  // 暖色系\n  red: {\n    border: \"border-red-300 dark:border-red-400\",\n    hoverBorder: \"hover:border-red-500 dark:hover:border-red-300\",\n    checkedBg: \"checked:bg-red-600 dark:checked:bg-red-400\",\n    focusRing: \"focus-visible:ring-red-500 dark:focus-visible:ring-red-300\",\n  },\n  orange: {\n    border: \"border-orange-300 dark:border-orange-400\",\n    hoverBorder: \"hover:border-orange-500 dark:hover:border-orange-300\",\n    checkedBg: \"checked:bg-orange-600 dark:checked:bg-orange-400\",\n    focusRing: \"focus-visible:ring-orange-500 dark:focus-visible:ring-orange-300\",\n  },\n  amber: {\n    border: \"border-amber-300 dark:border-amber-400\",\n    hoverBorder: \"hover:border-amber-500 dark:hover:border-amber-300\",\n    checkedBg: \"checked:bg-amber-600 dark:checked:bg-amber-400\",\n    focusRing: \"focus-visible:ring-amber-500 dark:focus-visible:ring-amber-300\",\n  },\n  yellow: {\n    border: \"border-yellow-300 dark:border-yellow-400\",\n    hoverBorder: \"hover:border-yellow-500 dark:hover:border-yellow-300\",\n    checkedBg: \"checked:bg-yellow-600 dark:checked:bg-yellow-400\",\n    focusRing: \"focus-visible:ring-yellow-500 dark:focus-visible:ring-yellow-300\",\n  },\n  \n  // 绿色系\n  lime: {\n    border: \"border-lime-300 dark:border-lime-400\",\n    hoverBorder: \"hover:border-lime-500 dark:hover:border-lime-300\",\n    checkedBg: \"checked:bg-lime-600 dark:checked:bg-lime-400\",\n    focusRing: \"focus-visible:ring-lime-500 dark:focus-visible:ring-lime-300\",\n  },\n  green: {\n    border: \"border-green-300 dark:border-green-400\",\n    hoverBorder: \"hover:border-green-500 dark:hover:border-green-300\",\n    checkedBg: \"checked:bg-green-600 dark:checked:bg-green-400\",\n    focusRing: \"focus-visible:ring-green-500 dark:focus-visible:ring-green-300\",\n  },\n  emerald: {\n    border: \"border-emerald-300 dark:border-emerald-400\",\n    hoverBorder: \"hover:border-emerald-500 dark:hover:border-emerald-300\",\n    checkedBg: \"checked:bg-emerald-600 dark:checked:bg-emerald-400\",\n    focusRing: \"focus-visible:ring-emerald-500 dark:focus-visible:ring-emerald-300\",\n  },\n  teal: {\n    border: \"border-teal-300 dark:border-teal-400\",\n    hoverBorder: \"hover:border-teal-500 dark:hover:border-teal-300\",\n    checkedBg: \"checked:bg-teal-600 dark:checked:bg-teal-400\",\n    focusRing: \"focus-visible:ring-teal-500 dark:focus-visible:ring-teal-300\",\n  },\n  \n  // 蓝色系\n  cyan: {\n    border: \"border-cyan-300 dark:border-cyan-400\",\n    hoverBorder: \"hover:border-cyan-500 dark:hover:border-cyan-300\",\n    checkedBg: \"checked:bg-cyan-600 dark:checked:bg-cyan-400\",\n    focusRing: \"focus-visible:ring-cyan-500 dark:focus-visible:ring-cyan-300\",\n  },\n  sky: {\n    border: \"border-sky-300 dark:border-sky-400\",\n    hoverBorder: \"hover:border-sky-500 dark:hover:border-sky-300\",\n    checkedBg: \"checked:bg-sky-600 dark:checked:bg-sky-400\",\n    focusRing: \"focus-visible:ring-sky-500 dark:focus-visible:ring-sky-300\",\n  },\n  blue: {\n    border: \"border-blue-300 dark:border-blue-400\",\n    hoverBorder: \"hover:border-blue-500 dark:hover:border-blue-300\",\n    checkedBg: \"checked:bg-blue-600 dark:checked:bg-blue-400\",\n    focusRing: \"focus-visible:ring-blue-500 dark:focus-visible:ring-blue-300\",\n  },\n  indigo: {\n    border: \"border-indigo-300 dark:border-indigo-400\",\n    hoverBorder: \"hover:border-indigo-500 dark:hover:border-indigo-300\",\n    checkedBg: \"checked:bg-indigo-600 dark:checked:bg-indigo-400\",\n    focusRing: \"focus-visible:ring-indigo-500 dark:focus-visible:ring-indigo-300\",\n  },\n  \n  // 紫粉色系\n  violet: {\n    border: \"border-violet-300 dark:border-violet-400\",\n    hoverBorder: \"hover:border-violet-500 dark:hover:border-violet-300\",\n    checkedBg: \"checked:bg-violet-600 dark:checked:bg-violet-400\", \n    focusRing: \"focus-visible:ring-violet-500 dark:focus-visible:ring-violet-300\",\n  },\n  purple: {\n    border: \"border-purple-300 dark:border-purple-400\",\n    hoverBorder: \"hover:border-purple-500 dark:hover:border-purple-300\",\n    checkedBg: \"checked:bg-purple-600 dark:checked:bg-purple-400\",\n    focusRing: \"focus-visible:ring-purple-500 dark:focus-visible:ring-purple-300\",\n  },\n  fuchsia: {\n    border: \"border-fuchsia-300 dark:border-fuchsia-400\",\n    hoverBorder: \"hover:border-fuchsia-500 dark:hover:border-fuchsia-300\",\n    checkedBg: \"checked:bg-fuchsia-600 dark:checked:bg-fuchsia-400\",\n    focusRing: \"focus-visible:ring-fuchsia-500 dark:focus-visible:ring-fuchsia-300\",\n  },\n  pink: {\n    border: \"border-pink-300 dark:border-pink-400\",\n    hoverBorder: \"hover:border-pink-500 dark:hover:border-pink-300\",\n    checkedBg: \"checked:bg-pink-600 dark:checked:bg-pink-400\",\n    focusRing: \"focus-visible:ring-pink-500 dark:focus-visible:ring-pink-300\",\n  },\n  rose: {\n    border: \"border-rose-300 dark:border-rose-400\",\n    hoverBorder: \"hover:border-rose-500 dark:hover:border-rose-300\",\n    checkedBg: \"checked:bg-rose-600 dark:checked:bg-rose-400\",\n    focusRing: \"focus-visible:ring-rose-500 dark:focus-visible:ring-rose-300\",\n  },\n};\n\n/**\n * SVG 路径配置\n */\nexport const svgPaths = {\n  check: \"M4 8.5L6.5 11L12 4\",\n  indeterminate: \"M3 8H13\"\n};\n","import type { PropType, ExtractPropTypes } from 'vue';\nimport type { CheckBoxType } from './config';\n\n/**\n * CheckBox 组件接口定义\n */\nexport interface CheckBoxProps {\n  modelValue: boolean;\n  id: string;\n  name?: string;\n  label: string;\n  description?: string;\n  disabled?: boolean;\n  type?: CheckBoxType;\n  layout?: 'horizontal' | 'vertical';\n  size?: 'sm' | 'md' | 'lg';\n  inline?: boolean;\n  indeterminate?: boolean;\n  wrapperClass?: string;\n  labelClass?: string;\n}\n\n/**\n * CheckBox 组件 Props 定义\n */\nexport const checkBoxProps = {\n  modelValue: {\n    type: Boolean,\n    required: true,\n  },\n  id: {\n    type: String,\n    required: true,\n  },\n  name: {\n    type: String,\n    default: '',\n  },\n  label: {\n    type: String,\n    required: true,\n  },\n  description: {\n    type: String,\n    default: '',\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  type: {\n    type: String as PropType<CheckBoxType>,\n    default: 'primary',\n  },\n  layout: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n  size: {\n    type: String as PropType<'sm' | 'md' | 'lg'>,\n    default: 'md',\n  },\n  inline: {\n    type: Boolean,\n    default: false,\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false,\n  },\n  wrapperClass: {\n    type: String,\n    default: '',\n  },\n  labelClass: {\n    type: String,\n    default: '',\n  },\n};\n\n\nexport type CheckBoxPropsType = ExtractPropTypes<typeof checkBoxProps>;\n","import { computed, defineComponent } from \"vue\";\nimport { THEME_COLOR_MAP, colorClassMap, sizeClassesMap, svgPaths } from \"./config\";\nimport { checkBoxProps, type CheckBoxPropsType } from \"./types\";\n\nexport const CheckBox = defineComponent({\n  name: \"CheckBox\",\n  props: checkBoxProps,\n  emits: [\"update:modelValue\", \"change\", \"focus\", \"blur\", \"click\"],\n  setup(props: CheckBoxPropsType, { emit }) {\n    // 获取实际使用的颜色类型\n    const actualColorType = computed(() => {\n      // 检查传入的type是否为主题枚举\n      if (props.type && props.type in THEME_COLOR_MAP) {\n        return THEME_COLOR_MAP[props.type as keyof typeof THEME_COLOR_MAP];\n      }\n      return props.type as keyof typeof colorClassMap;\n    });\n\n    // 获取颜色样式类\n    const colorClasses = computed(() => {\n      const colorType = actualColorType.value || 'indigo';\n      return colorClassMap[colorType] || colorClassMap.indigo;\n    });\n\n    // 获取尺寸样式\n    const sizeClasses = computed(() => sizeClassesMap[props.size]);\n\n    // 处理变更事件\n    const handleChange = (event: Event) => {\n      const target = event.target as HTMLInputElement;\n      emit(\"update:modelValue\", target.checked);\n      emit(\"change\", event);\n    };\n\n    // 计算复选框类名\n    const checkboxClasses = computed(() => [\n      // 基本样式\n      \"relative appearance-none rounded border\",\n      \"transition-all duration-200 ease-in-out\",\n      \"focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2\",\n      \"disabled:cursor-not-allowed disabled:bg-gray-100 dark:disabled:bg-gray-800\",\n      \"disabled:border-gray-300 dark:disabled:border-gray-700\",\n      \"focus-visible:ring-offset-white dark:focus-visible:ring-offset-gray-900\",\n      // 颜色样式\n      colorClasses.value.border,\n      !props.disabled && colorClasses.value.hoverBorder,\n      colorClasses.value.checkedBg,\n      colorClasses.value.focusRing,\n      // 背景色\n      \"bg-white dark:bg-gray-800\",\n      // 选中状态动画增强\n      \"checked:animate-pulse checked:animate-once checked:animate-duration-300\",\n      // 暗色模式下增强选中状态的视觉效果\n      \"dark:checked:border-opacity-0 dark:checked:shadow-[0_0_0_1px_rgba(255,255,255,0.2)]\",\n    ]);\n\n    // 计算图标类名\n    const iconClasses = computed(() => [\n      // 基本样式\n      \"pointer-events-none absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\",\n      \"transition-transform duration-200 ease-in-out\",\n      // 增强暗色模式下图标的亮度\n      \"stroke-white dark:stroke-white dark:stroke-opacity-100 dark:stroke-[2.5px]\",\n      \"group-has-[:disabled]:stroke-gray-950/25 dark:group-has-[:disabled]:stroke-gray-300/50\",\n      // 大小样式\n      sizeClasses.value.icon,\n      // 动画效果增强\n      props.modelValue || props.indeterminate\n        ? \"scale-100 transform-gpu\"\n        : \"scale-0 transform-gpu\",\n    ]);\n\n    // 计算包装器类名\n    const wrapperClasses = computed(() => [\n      \"relative\",\n      // 布局相关类名\n      props.layout === \"vertical\"\n        ? \"flex flex-col gap-3\"\n        : \"flex items-center gap-2\",\n      props.inline ? \"inline-flex\" : \"flex\",\n      // 文本颜色，增强对比度\n      \"text-gray-900 dark:text-gray-50\",\n      props.wrapperClass,\n    ]);\n\n    // 计算标签类名\n    const labelTextClasses = computed(() => [\n      \"font-medium\",\n      \"text-gray-900 dark:text-gray-50\", // 增强文字亮度\n      props.labelClass,\n    ]);\n\n    // 计算描述文本类名\n    const descriptionClasses = computed(() => [\n      \"text-gray-500 dark:text-gray-300\", // 提高描述文字的亮度\n    ]);\n\n    // 获取当前应使用的 SVG 路径\n    const currentPath = computed(() => {\n      return props.indeterminate ? svgPaths.indeterminate : svgPaths.check;\n    });\n\n    // 渲染复选框输入元素\n    const renderCheckboxInput = () => (\n      <div class={[\"group relative grid grid-cols-1\", sizeClasses.value.checkbox]}>\n        <input\n          id={props.id}\n          name={props.name}\n          type=\"checkbox\"\n          checked={props.modelValue}\n          disabled={props.disabled}\n          indeterminate={props.indeterminate}\n          aria-describedby={\n            props.description ? `${props.id}-description` : undefined\n          }\n          onChange={handleChange}\n          onFocus={(e) => emit(\"focus\", e)}\n          onBlur={(e) => emit(\"blur\", e)}\n          onClick={(e) => emit(\"click\", e)}\n          class={[checkboxClasses.value, sizeClasses.value.input]}\n        />\n        <svg\n          class={iconClasses.value}\n          viewBox=\"0 0 16 16\"\n          fill=\"none\"\n        >\n          <path\n            d={currentPath.value}\n            stroke-width={sizeClasses.value.strokeWidth}\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n        </svg>\n      </div>\n    );\n\n    // 渲染带描述的布局\n    const renderWithDescription = () => (\n      <>\n        <div class=\"min-w-0 flex-1 text-sm/6\">\n          <label\n            for={props.id}\n            class={labelTextClasses.value}\n          >\n            {props.label}\n          </label>\n          <p id={`${props.id}-description`} class={descriptionClasses.value}>\n            {props.description}\n          </p>\n        </div>\n        <div class={[\"flex shrink-0 items-center\", sizeClasses.value.container]}>\n          {renderCheckboxInput()}\n        </div>\n      </>\n    );\n\n    // 渲染简单布局\n    const renderSimple = () => (\n      <>\n        <div class={[\"flex shrink-0 items-center\", sizeClasses.value.container]}>\n          {renderCheckboxInput()}\n        </div>\n        <label\n          for={props.id}\n          class={[\n            \"cursor-pointer select-none font-medium\",\n            labelTextClasses.value,\n            sizeClasses.value.label,\n          ]}\n        >\n          {props.label}\n        </label>\n      </>\n    );\n\n    return () => (\n      <div class={wrapperClasses.value}>\n        {props.description ? renderWithDescription() : renderSimple()}\n      </div>\n    );\n  },\n});\n\nexport default CheckBox;\nexport * from './types';\n","<template>\n  <div class=\"container mx-auto px-4 py-8 text-gray-900 dark:text-white\">\n    <h1 class=\"mb-8 text-3xl font-bold\">CheckBox 复选框组件</h1>\n\n    <!-- 基础用法 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        基础用法\n      </h2>\n      <div class=\"space-y-4\">\n        <CheckBox id=\"basic-checkbox\" v-model=\"checkState.basic\" label=\"基础复选框\" />\n        <div class=\"text-sm text-gray-600 dark:text-gray-400\">\n          当前状态: {{ checkState.basic ? '已选中' : '未选中' }}\n        </div>\n      </div>\n    </section>\n\n    <!-- 语义化主题 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        语义化主题\n      </h2>\n      <div class=\"flex flex-wrap gap-8\">\n        <CheckBox id=\"theme-primary\" v-model=\"checkState.primary\" type=\"primary\" label=\"主要\" />\n        <CheckBox id=\"theme-secondary\" v-model=\"checkState.secondary\" type=\"secondary\" label=\"次要\" />\n        <CheckBox id=\"theme-success\" v-model=\"checkState.success\" type=\"success\" label=\"成功\" />\n        <CheckBox id=\"theme-warning\" v-model=\"checkState.warning\" type=\"warning\" label=\"警告\" />\n        <CheckBox id=\"theme-danger\" v-model=\"checkState.danger\" type=\"danger\" label=\"危险\" />\n        <CheckBox id=\"theme-info\" v-model=\"checkState.info\" type=\"info\" label=\"信息\" />\n      </div>\n    </section>\n\n    <!-- 颜色选择 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        颜色选择\n      </h2>\n\n      <div class=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n        <div>\n          <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n            灰色系\n          </h3>\n          <div class=\"space-y-3\">\n            <CheckBox id=\"color-slate\" v-model=\"checkState.slate\" type=\"slate\" label=\"石板灰\" />\n            <CheckBox id=\"color-gray\" v-model=\"checkState.gray\" type=\"gray\" label=\"灰色\" />\n            <CheckBox id=\"color-zinc\" v-model=\"checkState.zinc\" type=\"zinc\" label=\"锌灰\" />\n            <CheckBox id=\"color-neutral\" v-model=\"checkState.neutral\" type=\"neutral\" label=\"中性灰\" />\n            <CheckBox id=\"color-stone\" v-model=\"checkState.stone\" type=\"stone\" label=\"石灰\" />\n          </div>\n        </div>\n\n        <div>\n          <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n            暖色系\n          </h3>\n          <div class=\"space-y-3\">\n            <CheckBox id=\"color-red\" v-model=\"checkState.red\" type=\"red\" label=\"红色\" />\n            <CheckBox id=\"color-orange\" v-model=\"checkState.orange\" type=\"orange\" label=\"橙色\" />\n            <CheckBox id=\"color-amber\" v-model=\"checkState.amber\" type=\"amber\" label=\"琥珀色\" />\n            <CheckBox id=\"color-yellow\" v-model=\"checkState.yellow\" type=\"yellow\" label=\"黄色\" />\n          </div>\n        </div>\n\n        <div>\n          <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n            绿色系\n          </h3>\n          <div class=\"space-y-3\">\n            <CheckBox id=\"color-lime\" v-model=\"checkState.lime\" type=\"lime\" label=\"青柠色\" />\n            <CheckBox id=\"color-green\" v-model=\"checkState.green\" type=\"green\" label=\"绿色\" />\n            <CheckBox id=\"color-emerald\" v-model=\"checkState.emerald\" type=\"emerald\" label=\"翠绿色\" />\n            <CheckBox id=\"color-teal\" v-model=\"checkState.teal\" type=\"teal\" label=\"蓝绿色\" />\n          </div>\n        </div>\n\n        <div>\n          <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n            蓝色系\n          </h3>\n          <div class=\"space-y-3\">\n            <CheckBox id=\"color-cyan\" v-model=\"checkState.cyan\" type=\"cyan\" label=\"青色\" />\n            <CheckBox id=\"color-sky\" v-model=\"checkState.sky\" type=\"sky\" label=\"天蓝色\" />\n            <CheckBox id=\"color-blue\" v-model=\"checkState.blue\" type=\"blue\" label=\"蓝色\" />\n            <CheckBox id=\"color-indigo\" v-model=\"checkState.indigo\" type=\"indigo\" label=\"靛青色\" />\n          </div>\n        </div>\n\n        <div>\n          <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">\n            紫粉色系\n          </h3>\n          <div class=\"space-y-3\">\n            <CheckBox id=\"color-violet\" v-model=\"checkState.violet\" type=\"violet\" label=\"紫罗兰\" />\n            <CheckBox id=\"color-purple\" v-model=\"checkState.purple\" type=\"purple\" label=\"紫色\" />\n            <CheckBox id=\"color-fuchsia\" v-model=\"checkState.fuchsia\" type=\"fuchsia\" label=\"品红色\" />\n            <CheckBox id=\"color-pink\" v-model=\"checkState.pink\" type=\"pink\" label=\"粉色\" />\n            <CheckBox id=\"color-rose\" v-model=\"checkState.rose\" type=\"rose\" label=\"玫瑰色\" />\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- 不同尺寸 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        不同尺寸\n      </h2>\n      <div class=\"space-y-4\">\n        <CheckBox id=\"size-sm\" v-model=\"checkState.size\" size=\"sm\" type=\"primary\" label=\"小尺寸 (SM)\" />\n        <CheckBox id=\"size-md\" v-model=\"checkState.size\" size=\"md\" type=\"primary\" label=\"中等尺寸 (MD)\" />\n        <CheckBox id=\"size-lg\" v-model=\"checkState.size\" size=\"lg\" type=\"primary\" label=\"大尺寸 (LG)\" />\n      </div>\n    </section>\n\n    <!-- 禁用状态 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        禁用状态\n      </h2>\n      <div class=\"space-y-4\">\n        <CheckBox id=\"disabled-unchecked\" v-model=\"checkState.disabledUnchecked\" disabled label=\"禁用状态（未选中）\" />\n        <CheckBox id=\"disabled-checked\" v-model=\"checkState.disabledChecked\" disabled label=\"禁用状态（已选中）\" />\n      </div>\n    </section>\n\n    <!-- 不确定状态 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        不确定状态\n      </h2>\n      <div class=\"space-y-4\">\n        <div class=\"rounded-lg border border-gray-200 p-4 dark:border-gray-700\">\n          <CheckBox id=\"parent-checkbox\" v-model=\"parentSelected\" :indeterminate=\"indeterminate\" type=\"primary\"\n            label=\"全选\" />\n          <div class=\"mt-2 ml-6 space-y-2\">\n            <CheckBox v-for=\"(item, index) in items\" :key=\"index\" :id=\"`child-checkbox-${index}`\" v-model=\"item.checked\"\n              :label=\"item.label\" @change=\"updateParentState\" />\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- 带描述的复选框 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        带描述的复选框\n      </h2>\n      <div class=\"space-y-4\">\n        <CheckBox id=\"with-description\" v-model=\"checkState.withDescription\" type=\"primary\" label=\"接收通知\"\n          description=\"我们会在您的账户有重要更新时通过电子邮件通知您。\" />\n        <CheckBox id=\"with-description-2\" v-model=\"checkState.withDescription2\" type=\"success\" label=\"订阅每周简报\"\n          description=\"每周获取行业资讯和产品更新，保持最新动态。\" />\n      </div>\n    </section>\n\n    <!-- 布局方向 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        布局方向\n      </h2>\n      <div class=\"space-y-6\">\n        <div>\n          <h3 class=\"mb-2 text-lg font-medium text-gray-900 dark:text-white\">\n            水平布局（默认）\n          </h3>\n          <CheckBox id=\"horizontal-layout\" v-model=\"checkState.horizontal\" type=\"primary\" label=\"水平布局\" />\n        </div>\n        <div>\n          <h3 class=\"mb-2 text-lg font-medium text-gray-900 dark:text-white\">\n            垂直布局\n          </h3>\n          <CheckBox id=\"vertical-layout\" v-model=\"checkState.vertical\" type=\"primary\" layout=\"vertical\" label=\"垂直布局\"\n            description=\"标签在上，复选框在下\" />\n        </div>\n      </div>\n    </section>\n\n    <!-- 内联复选框 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        内联复选框\n      </h2>\n      <div>\n        <p class=\"mb-4 text-gray-700 dark:text-gray-300\">\n          使用 <code>inline</code> 属性可以让复选框在一行内显示：\n        </p>\n        <div class=\"flex flex-wrap gap-6\">\n          <CheckBox id=\"inline-1\" v-model=\"checkState.inline1\" inline type=\"primary\" label=\"选项1\" />\n          <CheckBox id=\"inline-2\" v-model=\"checkState.inline2\" inline type=\"primary\" label=\"选项2\" />\n          <CheckBox id=\"inline-3\" v-model=\"checkState.inline3\" inline type=\"primary\" label=\"选项3\" />\n        </div>\n      </div>\n    </section>\n\n    <!-- 暗色模式适配 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">暗色模式适配</h2>\n      <div class=\"space-y-6\">\n        <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n          <h3 class=\"mb-3 text-lg font-medium text-gray-900 dark:text-white\">暗色模式下的复选框适配</h3>\n          <p class=\"mb-4 text-sm text-gray-600 dark:text-gray-300\">\n            复选框组件自动适应暗色主题，在不同主题下提供一致的用户体验\n          </p>\n          <div class=\"space-y-4\">\n            <CheckBox id=\"dark-theme-1\" v-model=\"checkState.darkTheme1\" type=\"primary\" label=\"主要主题复选框\" />\n            <CheckBox id=\"dark-theme-2\" v-model=\"checkState.darkTheme2\" type=\"success\" label=\"成功主题复选框\" />\n            <CheckBox id=\"dark-theme-3\" v-model=\"checkState.darkTheme3\" type=\"danger\" label=\"危险主题复选框\" />\n          </div>\n        </div>\n\n        <div class=\"rounded-lg bg-gray-900 p-6\">\n          <h3 class=\"mb-3 text-lg font-medium text-white\">深色背景上的复选框</h3>\n          <p class=\"mb-3 text-sm text-gray-300\">复选框在深色背景上的表现</p>\n          <div class=\"space-y-4\">\n            <CheckBox id=\"dark-bg-1\" v-model=\"checkState.darkBg1\" type=\"primary\" label=\"主要主题复选框\" />\n            <CheckBox id=\"dark-bg-2\" v-model=\"checkState.darkBg2\" type=\"emerald\" label=\"翠绿色复选框\" />\n            <CheckBox id=\"dark-bg-3\" v-model=\"checkState.darkBg3\" type=\"amber\" label=\"琥珀色复选框\" />\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- 实际应用场景 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">\n        实际应用场景\n      </h2>\n\n      <!-- 隐私设置场景 -->\n      <div\n        class=\"mb-6 max-w-2xl rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-gray-700 dark:bg-gray-800\">\n        <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">\n          隐私设置\n        </h3>\n        <div class=\"space-y-6\">\n          <CheckBox id=\"privacy-1\" v-model=\"privacySettings.receiveEmails\" type=\"primary\" label=\"接收营销邮件\"\n            description=\"我们将向您发送产品更新和特别优惠信息。\" />\n          <CheckBox id=\"privacy-2\" v-model=\"privacySettings.shareData\" type=\"primary\" label=\"同意数据分享\"\n            description=\"允许我们与合作伙伴共享您的使用数据以改进服务质量。\" />\n          <CheckBox id=\"privacy-3\" v-model=\"privacySettings.cookieTracking\" type=\"primary\" label=\"允许Cookie跟踪\"\n            description=\"我们使用Cookie来个性化您的体验并收集使用数据。\" />\n          <div class=\"flex justify-end\">\n            <button\n              class=\"rounded-lg bg-blue-500 px-4 py-2 font-medium text-white hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700\">\n              保存设置\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- To-Do列表场景 -->\n      <div\n        class=\"mb-6 max-w-md rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-gray-700 dark:bg-gray-800\">\n        <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">\n          待办事项列表\n        </h3>\n        <div class=\"space-y-3\">\n          <div v-for=\"(task, index) in tasks\" :key=\"index\" class=\"flex items-center gap-3\">\n            <CheckBox \n              :id=\"`todo-${index}`\" \n              v-model=\"task.completed\" \n              :type=\"task.completed ? 'success' : 'primary'\"\n              :label=\"task.text\" \n              labelClass=\"sr-only\" \n            />\n            <span :class=\"{ 'line-through text-gray-400': task.completed }\">\n              {{ task.text }}\n            </span>\n          </div>\n          <div class=\"flex items-center justify-between pt-2\">\n            <span class=\"text-sm text-gray-500 dark:text-gray-400\">\n              {{tasks.filter(t => t.completed).length}}/{{ tasks.length }} 已完成\n            </span>\n            <button @click=\"resetTasks\"\n              class=\"text-sm text-blue-500 hover:text-blue-600 dark:text-blue-400 dark:hover:text-blue-300\">\n              重置\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 多选表单场景 -->\n      <div\n        class=\"max-w-lg rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-gray-700 dark:bg-gray-800\">\n        <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">\n          兴趣爱好调查\n        </h3>\n        <p class=\"mb-4 text-sm text-gray-600 dark:text-gray-400\">\n          请选择您感兴趣的所有主题，以便我们为您推荐相关内容。\n        </p>\n        <div class=\"mb-4 grid grid-cols-1 gap-3 md:grid-cols-2\">\n          <CheckBox v-for=\"(hobby, index) in hobbies\" :key=\"index\" :id=\"`hobby-${index}`\" v-model=\"hobby.selected\"\n            type=\"indigo\" :label=\"hobby.name\" />\n        </div>\n        <div class=\"flex justify-end\">\n          <button\n            class=\"rounded-lg bg-indigo-500 px-4 py-2 font-medium text-white hover:bg-indigo-600 dark:bg-indigo-600 dark:hover:bg-indigo-700\">\n            提交选择\n          </button>\n        </div>\n      </div>\n    </section>\n\n    <!-- API 文档部分 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">组件API</h2>\n      <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n        <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">属性 (Props)</h3>\n        <div class=\"mb-6 overflow-x-auto\">\n          <table class=\"min-w-full border-collapse\">\n            <thead>\n              <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">属性名</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">类型</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">默认值</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n              </tr>\n            </thead>\n            <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">modelValue</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框的值（必填）</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">id</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框的唯一标识（必填）</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">name</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框的 name 属性</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">label</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">-</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框的标签文本（必填）</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">description</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框的描述文本</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">disabled</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否禁用</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">type</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">CheckBoxType</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'primary'</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框的类型，支持颜色名或主题名</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">layout</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'horizontal' | 'vertical'</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'horizontal'</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">布局方式</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">size</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'sm' | 'md' | 'lg'</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">'md'</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框的尺寸</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">inline</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否内联显示</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">indeterminate</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">boolean</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">false</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">是否为不确定状态</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">wrapperClass</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">包装器额外的 class</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">labelClass</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">string</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">''</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">标签额外的 class</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <h3 class=\"mb-4 text-lg font-medium text-gray-900 dark:text-white\">事件 (Events)</h3>\n        <div class=\"mb-6 overflow-x-auto\">\n          <table class=\"min-w-full border-collapse\">\n            <thead>\n              <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">事件名</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">回调参数</th>\n                <th class=\"px-4 py-2 text-left font-medium text-gray-900 dark:text-white\">描述</th>\n              </tr>\n            </thead>\n            <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">update:modelValue</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">(value: boolean)</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框值变更时触发</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">change</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">(event: Event)</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框状态变化时触发</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">focus</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">(event: FocusEvent)</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框获得焦点时触发</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">blur</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">(event: FocusEvent)</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框失去焦点时触发</td>\n              </tr>\n              <tr>\n                <td class=\"px-4 py-2 font-medium text-gray-900 dark:text-white\">click</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">(event: MouseEvent)</td>\n                <td class=\"px-4 py-2 text-gray-700 dark:text-gray-300\">复选框被点击时触发</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <h3 class=\"mt-6 mb-4 text-lg font-medium text-gray-900 dark:text-white\">类型定义</h3>\n        <div class=\"mb-4 rounded-lg bg-gray-50 p-4 dark:bg-gray-700/30\">\n          <p class=\"mb-2 text-sm text-gray-700 dark:text-gray-300\">CheckBox 组件使用 TypeScript 定义了完整的类型：</p>\n          <pre class=\"overflow-x-auto rounded bg-gray-100 p-3 text-xs text-gray-800 dark:bg-gray-800 dark:text-gray-200\">\nimport { CheckBoxProps, CheckBoxEmits, CheckBoxType } from '@/components/CheckBox';\n\n// 使用类型\nconst myProps: CheckBoxProps = {\n  id: 'my-checkbox',\n  modelValue: false,\n  label: '同意条款',\n  type: 'primary',\n  size: 'md'\n};</pre>\n        </div>\n\n        <h3 class=\"mt-6 mb-4 text-lg font-medium text-gray-900 dark:text-white\">组件设计原则</h3>\n        <div class=\"space-y-3\">\n          <p class=\"text-sm text-gray-700 dark:text-gray-300\">CheckBox 组件基于以下设计原则构建：</p>\n          <ol class=\"ml-6 list-decimal space-y-2 text-sm text-gray-700 dark:text-gray-300\">\n            <li><span class=\"font-medium\">可组合性</span> - 组件接受多种属性配置，可以灵活组合</li>\n            <li><span class=\"font-medium\">一致性</span> - 颜色、尺寸等遵循整个组件库的统一规范</li>\n            <li><span class=\"font-medium\">可访问性</span> - 支持键盘操作和屏幕阅读器</li>\n            <li><span class=\"font-medium\">类型安全</span> - 使用 TypeScript 接口确保类型安全</li>\n            <li><span class=\"font-medium\">代码分层</span> - 将样式、逻辑和类型分开管理</li>\n            <li><span class=\"font-medium\">暗色适配</span> - 原生支持 Tailwind CSS 暗色模式</li>\n          </ol>\n        </div>\n      </div>\n    </section>\n\n    <!-- 小结与最佳实践 -->\n    <section class=\"mb-10\">\n      <h2 class=\"mb-4 text-xl font-semibold text-gray-900 dark:text-white\">小结与最佳实践</h2>\n      <div class=\"rounded-lg border border-gray-200 bg-white p-6 dark:border-gray-700 dark:bg-gray-800\">\n        <div class=\"space-y-4\">\n          <p class=\"text-gray-700 dark:text-gray-300\">\n            CheckBox 组件是一个灵活且功能丰富的复选框解决方案，适用于各种表单控制、数据选择和状态切换场景。\n            以下是一些使用建议：\n          </p>\n\n          <ul class=\"ml-6 list-disc space-y-2 text-gray-700 dark:text-gray-300\">\n            <li>为每个复选框提供唯一的\n              <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800/60\">id</code>\n              属性，这对于 label 关联和可访问性至关重要\n            </li>\n            <li>根据语义选择适当的主题类型，如使用\n              <CheckBox id=\"example-success\" v-model=\"exampleStates.success\" type=\"success\" size=\"sm\" label=\"成功类型\" />\n              表示成功或完成的操作\n            </li>\n            <li>当需要展示附加信息时，使用\n              <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800/60\">description</code>\n              属性添加描述文本\n            </li>\n            <li>对于相关选项分组，考虑使用\n              <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800/60\">inline</code>\n              属性进行水平排列\n            </li>\n            <li>使用\n              <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800/60\">indeterminate</code>\n              状态表示部分选中，适用于多层级选择场景\n            </li>\n            <li>通过\n              <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800/60\">wrapperClass</code>\n              和\n              <code class=\"rounded bg-gray-100 px-1 py-0.5 font-mono dark:bg-gray-800/60\">labelClass</code>\n              自定义样式，适应不同设计需求\n            </li>\n          </ul>\n\n          <div class=\"rounded-lg border border-blue-100 bg-blue-50 p-4 dark:border-blue-900 dark:bg-blue-900/20\">\n            <h4 class=\"mb-2 flex items-center text-blue-800 dark:text-blue-300\">\n              <span class=\"icon-[material-symbols--info-outline-rounded] mr-2 h-5 w-5\"></span>\n              暗色模式提示\n            </h4>\n            <p class=\"text-sm text-blue-700 dark:text-blue-300\">\n              CheckBox 组件已内置支持暗色模式，无需额外配置。只要在应用的根元素上添加 \n              <code class=\"rounded bg-blue-100 px-1 py-0.5 font-mono dark:bg-blue-800/60\">.dark</code> \n              类，组件就会自动切换为暗色样式。组件使用 Tailwind CSS 的 dark 变体实现主题切换。\n            </p>\n          </div>\n\n          <div class=\"rounded-lg border border-amber-100 bg-amber-50 p-4 dark:border-amber-900/50 dark:bg-amber-900/20\">\n            <h4 class=\"mb-2 flex items-center text-amber-800 dark:text-amber-300\">\n              <span class=\"icon-[material-symbols--tips-and-updates-outline-rounded] mr-2 h-5 w-5\"></span>\n              可访问性提示\n            </h4>\n            <p class=\"text-sm text-amber-700 dark:text-amber-300\">\n              确保复选框的标签文本清晰描述选项的用途。对于隐含含义或重要选项，使用描述文本提供额外信息。\n              这不仅有助于所有用户理解，还为使用屏幕阅读器的用户提供了必要的语境。\n            </p>\n          </div>\n\n          <p class=\"text-gray-700 dark:text-gray-300\">\n            在设计系统中，复选框是用户输入和偏好设置的基础构建块。合理地使用 CheckBox 组件可以创建直观、一致且用户友好的界面，\n            使用户能够轻松地进行多选操作和状态控制。\n          </p>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, watch } from \"vue\";\nimport { CheckBox } from \"./CheckBox\";\n\n// 复选框状态管理\nconst checkState = reactive({\n  basic: true,\n  primary: true,\n  secondary: false,\n  success: true,\n  warning: false,\n  danger: true,\n  info: false,\n\n  // 颜色系列\n  slate: false,\n  gray: true,\n  zinc: false,\n  neutral: true,\n  stone: false,\n  red: true,\n  orange: false,\n  amber: true,\n  yellow: false,\n  lime: true,\n  green: false,\n  emerald: true,\n  teal: false,\n  cyan: true,\n  sky: false,\n  blue: true,\n  indigo: false,\n  violet: true,\n  purple: false,\n  fuchsia: true,\n  pink: false,\n  rose: true,\n\n  // 尺寸\n  size: true,\n\n  // 禁用状态\n  disabledUnchecked: false,\n  disabledChecked: true,\n\n  // 描述\n  withDescription: true,\n  withDescription2: false,\n\n  // 布局方向\n  horizontal: true,\n  vertical: true,\n\n  // 内联\n  inline1: true,\n  inline2: false,\n  inline3: true,\n\n  // 暗色主题\n  darkTheme1: true,\n  darkTheme2: false,\n  darkTheme3: true,\n\n  // 深色背景\n  darkBg1: true,\n  darkBg2: false,\n  darkBg3: true,\n});\n\n// 不确定状态示例\nconst items = reactive([\n  { label: '选项1', checked: false },\n  { label: '选项2', checked: false },\n  { label: '选项3', checked: false },\n]);\nconst parentSelected = ref(false);\nconst indeterminate = ref(false);\n\n// 更新父复选框状态\nconst updateParentState = () => {\n  const checkedCount = items.filter(item => item.checked).length;\n  parentSelected.value = checkedCount === items.length;\n  indeterminate.value = checkedCount > 0 && checkedCount < items.length;\n};\n\n// 监听父复选框变化\nwatch(parentSelected, (newVal) => {\n  items.forEach(item => {\n    item.checked = newVal;\n  });\n  indeterminate.value = false;\n});\n\n// 隐私设置示例\nconst privacySettings = reactive({\n  receiveEmails: true,\n  shareData: false,\n  cookieTracking: true,\n});\n\n// To-Do 列表示例\nconst tasks = reactive([\n  { text: '完成项目报告', completed: true },\n  { text: '准备明天的会议', completed: false },\n  { text: '更新网站内容', completed: false },\n  { text: '回复重要邮件', completed: false },\n  { text: '计划下周安排', completed: true },\n]);\n\nconst resetTasks = () => {\n  tasks.forEach(task => {\n    task.completed = false;\n  });\n};\n\n// 兴趣爱好示例\nconst hobbies = reactive([\n  { name: '科技', selected: true },\n  { name: '设计', selected: false },\n  { name: '摄影', selected: true },\n  { name: '旅行', selected: false },\n  { name: '音乐', selected: true },\n  { name: '影视', selected: false },\n  { name: '阅读', selected: true },\n  { name: '烹饪', selected: false },\n]);\n\n// 示例状态 - 用于文档示例\nconst exampleStates = reactive({\n  success: true,\n  primary: false\n});\n</script>"],"names":["THEME_COLOR_MAP","sizeClassesMap","colorClassMap","svgPaths","checkBoxProps","CheckBox","defineComponent","name","props","emits","setup","emit","actualColorType","computed","type","colorClasses","colorType","value","indigo","sizeClasses","size","handleChange","event","target","checked","checkboxClasses","border","disabled","hoverBorder","checkedBg","focusRing","iconClasses","icon","modelValue","indeterminate","wrapperClasses","layout","inline","wrapperClass","labelTextClasses","labelClass","descriptionClasses","currentPath","check","renderCheckboxInput","_createVNode","checkbox","id","description","undefined","e","input","strokeWidth","renderWithDescription","_Fragment","label","container","renderSimple","checkState","reactive","items","parentSelected","ref","updateParentState","checkedCount","item","watch","newVal","privacySettings","tasks","resetTasks","task","hobbies","exampleStates"],"mappings":"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"}